[{"C:\\xampp\\htdocs\\xerographics\\client\\src\\index.js":"1","C:\\xampp\\htdocs\\xerographics\\client\\src\\App.js":"2","C:\\xampp\\htdocs\\xerographics\\client\\src\\components\\users\\Users.js":"3","C:\\xampp\\htdocs\\xerographics\\client\\src\\components\\dashboard\\Dashboard.js":"4","C:\\xampp\\htdocs\\xerographics\\client\\src\\api\\api.js":"5","C:\\xampp\\htdocs\\xerographics\\client\\src\\components\\users\\UserListRow.js":"6","C:\\xampp\\htdocs\\xerographics\\client\\src\\components\\users\\AddUser.js":"7","C:\\xampp\\htdocs\\xerographics\\client\\src\\components\\alerts\\alert.js":"8","C:\\xampp\\htdocs\\xerographics\\client\\src\\components\\alerts\\dialog.js":"9","C:\\xampp\\htdocs\\xerographics\\client\\src\\components\\users\\UserDetails.js":"10","C:\\xampp\\htdocs\\xerographics\\client\\src\\components\\customers\\Customers.js":"11","C:\\xampp\\htdocs\\xerographics\\client\\src\\components\\customers\\customerListRow.js":"12","C:\\xampp\\htdocs\\xerographics\\client\\src\\components\\customers\\CustomerListRow.js":"13","C:\\xampp\\htdocs\\xerographics\\client\\src\\components\\customers\\CustomerDetails.js":"14","C:\\xampp\\htdocs\\xerographics\\client\\src\\components\\customers\\AddCustomer.js":"15","C:\\xampp\\htdocs\\xerographics\\client\\src\\components\\units\\Units.js":"16","C:\\xampp\\htdocs\\xerographics\\client\\src\\components\\units\\UnitListRow.js":"17","C:\\xampp\\htdocs\\xerographics\\client\\src\\components\\units\\AddUnit.js":"18","C:\\xampp\\htdocs\\xerographics\\client\\src\\components\\units\\UnitDetails.js":"19","C:\\xampp\\htdocs\\xerographics\\client\\src\\components\\categories\\AddCategory.js":"20","C:\\xampp\\htdocs\\xerographics\\client\\src\\components\\categories\\Categories.js":"21","C:\\xampp\\htdocs\\xerographics\\client\\src\\components\\categories\\CategoryDetails.js":"22","C:\\xampp\\htdocs\\xerographics\\client\\src\\components\\categories\\CategoryListRow.js":"23","C:\\xampp\\htdocs\\xerographics\\client\\src\\components\\branches\\Branches.js":"24","C:\\xampp\\htdocs\\xerographics\\client\\src\\components\\branches\\BranchDetails.js":"25","C:\\xampp\\htdocs\\xerographics\\client\\src\\components\\branches\\AddBranch.js":"26","C:\\xampp\\htdocs\\xerographics\\client\\src\\components\\branches\\BranchListRow.js":"27","C:\\xampp\\htdocs\\xerographics\\client\\src\\components\\incl\\SideBar.js":"28","C:\\xampp\\htdocs\\xerographics\\client\\src\\components\\incl\\TopBar.js":"29","C:\\xampp\\htdocs\\xerographics\\client\\src\\components\\products\\Products.js":"30","C:\\xampp\\htdocs\\xerographics\\client\\src\\components\\products\\ProductDetails.js":"31","C:\\xampp\\htdocs\\xerographics\\client\\src\\components\\products\\AddProduct.js":"32","C:\\xampp\\htdocs\\xerographics\\client\\src\\components\\products\\ProductListRow.js":"33","C:\\xampp\\htdocs\\xerographics\\client\\src\\api\\baseUrl.js":"34","C:\\xampp\\htdocs\\xerographics\\client\\src\\components\\alerts\\LinearProgress.js":"35","C:\\xampp\\htdocs\\xerographics\\client\\src\\components\\brands\\AddBrand.js":"36","C:\\xampp\\htdocs\\xerographics\\client\\src\\components\\brands\\Brands.js":"37","C:\\xampp\\htdocs\\xerographics\\client\\src\\components\\brands\\BrandListRow.js":"38","C:\\xampp\\htdocs\\xerographics\\client\\src\\components\\brands\\BrandDetails.js":"39","C:\\xampp\\htdocs\\xerographics\\client\\src\\components\\pos\\Pos.js":"40","C:\\xampp\\htdocs\\xerographics\\client\\src\\components\\pos\\TableCart.js":"41","C:\\xampp\\htdocs\\xerographics\\client\\src\\components\\pos\\ProductCard.js":"42","C:\\xampp\\htdocs\\xerographics\\client\\src\\components\\pos\\Search.js":"43","C:\\xampp\\htdocs\\xerographics\\client\\src\\components\\pos\\ProductsLeft.js":"44","C:\\xampp\\htdocs\\xerographics\\client\\src\\components\\customers\\AddCustomerModal.js":"45","C:\\xampp\\htdocs\\xerographics\\client\\src\\components\\pos\\ProductsRight.js":"46","C:\\xampp\\htdocs\\xerographics\\client\\src\\components\\pos\\Checkout.js":"47","C:\\xampp\\htdocs\\xerographics\\client\\src\\components\\Login\\Login.js":"48","C:\\xampp\\htdocs\\xerographics\\client\\src\\components\\reports\\user\\UserSales.js":"49","C:\\xampp\\htdocs\\xerographics\\client\\src\\components\\reports\\DatePickerStartEnd.js":"50","C:\\xampp\\htdocs\\xerographics\\client\\src\\components\\reports\\user\\UserSearchList.js":"51","C:\\xampp\\htdocs\\xerographics\\client\\src\\components\\reports\\branch\\BranchSales.js":"52","C:\\xampp\\htdocs\\xerographics\\client\\src\\components\\reports\\category\\CategorySales.js":"53","C:\\xampp\\htdocs\\xerographics\\client\\src\\components\\reports\\ReportListRow.js":"54","C:\\xampp\\htdocs\\xerographics\\client\\src\\api\\baseUrlApi.js":"55","C:\\xampp\\htdocs\\xerographics\\client\\src\\components\\reports\\details\\InvoiceDetails.js":"56","C:\\xampp\\htdocs\\xerographics\\client\\src\\components\\reports\\details\\InvoiceDetailsListRow.js":"57","C:\\xampp\\htdocs\\xerographics\\client\\src\\components\\reports\\branch\\BranchSearchList.js":"58","C:\\xampp\\htdocs\\xerographics\\client\\src\\components\\reports\\category\\CategorySearchList.js":"59","C:\\xampp\\htdocs\\xerographics\\client\\src\\components\\Login\\Logout.js":"60"},{"size":565,"mtime":1643475989077,"results":"61","hashOfConfig":"62"},{"size":6721,"mtime":1644771501085,"results":"63","hashOfConfig":"62"},{"size":8081,"mtime":1644770495408,"results":"64","hashOfConfig":"62"},{"size":8625,"mtime":1643673939582,"results":"65","hashOfConfig":"62"},{"size":444,"mtime":1644636290316,"results":"66","hashOfConfig":"62"},{"size":2103,"mtime":1640591647684,"results":"67","hashOfConfig":"62"},{"size":15893,"mtime":1644770336715,"results":"68","hashOfConfig":"62"},{"size":852,"mtime":1640541850600,"results":"69","hashOfConfig":"62"},{"size":1264,"mtime":1640541184286,"results":"70","hashOfConfig":"62"},{"size":18431,"mtime":1644770358267,"results":"71","hashOfConfig":"62"},{"size":7124,"mtime":1644770586731,"results":"72","hashOfConfig":"62"},{"size":2058,"mtime":1640614901707,"results":"73","hashOfConfig":"62"},{"size":2058,"mtime":1640614901707,"results":"74","hashOfConfig":"62"},{"size":7115,"mtime":1644169178067,"results":"75","hashOfConfig":"62"},{"size":6723,"mtime":1644169178359,"results":"76","hashOfConfig":"62"},{"size":6637,"mtime":1644178576621,"results":"77","hashOfConfig":"62"},{"size":1280,"mtime":1640612283596,"results":"78","hashOfConfig":"62"},{"size":5870,"mtime":1644169478931,"results":"79","hashOfConfig":"62"},{"size":6123,"mtime":1644169478898,"results":"80","hashOfConfig":"62"},{"size":6469,"mtime":1644169178317,"results":"81","hashOfConfig":"62"},{"size":7556,"mtime":1644169478909,"results":"82","hashOfConfig":"62"},{"size":7291,"mtime":1644169178207,"results":"83","hashOfConfig":"62"},{"size":1499,"mtime":1640614911224,"results":"84","hashOfConfig":"62"},{"size":8860,"mtime":1644761776647,"results":"85","hashOfConfig":"62"},{"size":7974,"mtime":1644169178093,"results":"86","hashOfConfig":"62"},{"size":9041,"mtime":1644768196473,"results":"87","hashOfConfig":"62"},{"size":1599,"mtime":1640621431663,"results":"88","hashOfConfig":"62"},{"size":19119,"mtime":1644761697163,"results":"89","hashOfConfig":"62"},{"size":3813,"mtime":1644771501166,"results":"90","hashOfConfig":"62"},{"size":8048,"mtime":1644168728154,"results":"91","hashOfConfig":"62"},{"size":17998,"mtime":1644176603769,"results":"92","hashOfConfig":"62"},{"size":18417,"mtime":1644176603809,"results":"93","hashOfConfig":"62"},{"size":2132,"mtime":1641411939807,"results":"94","hashOfConfig":"62"},{"size":136,"mtime":1644635558059,"results":"95","hashOfConfig":"62"},{"size":290,"mtime":1641653488283,"results":"96","hashOfConfig":"62"},{"size":5656,"mtime":1644169178230,"results":"97","hashOfConfig":"62"},{"size":7557,"mtime":1644169478845,"results":"98","hashOfConfig":"62"},{"size":1202,"mtime":1641471864891,"results":"99","hashOfConfig":"62"},{"size":5814,"mtime":1644633467419,"results":"100","hashOfConfig":"62"},{"size":14766,"mtime":1644169178394,"results":"101","hashOfConfig":"62"},{"size":6147,"mtime":1642537375738,"results":"102","hashOfConfig":"62"},{"size":2021,"mtime":1642406831817,"results":"103","hashOfConfig":"62"},{"size":1746,"mtime":1642514069332,"results":"104","hashOfConfig":"62"},{"size":3085,"mtime":1642937302073,"results":"105","hashOfConfig":"62"},{"size":5429,"mtime":1644169178139,"results":"106","hashOfConfig":"62"},{"size":5086,"mtime":1642946393020,"results":"107","hashOfConfig":"62"},{"size":11412,"mtime":1642952397818,"results":"108","hashOfConfig":"62"},{"size":9102,"mtime":1644769652691,"results":"109","hashOfConfig":"62"},{"size":13217,"mtime":1644563547471,"results":"110","hashOfConfig":"62"},{"size":1315,"mtime":1644441888687,"results":"111","hashOfConfig":"62"},{"size":1173,"mtime":1644563547210,"results":"112","hashOfConfig":"62"},{"size":10459,"mtime":1644702545201,"results":"113","hashOfConfig":"62"},{"size":10502,"mtime":1644734384199,"results":"114","hashOfConfig":"62"},{"size":1276,"mtime":1644633467451,"results":"115","hashOfConfig":"62"},{"size":146,"mtime":1644636460122,"results":"116","hashOfConfig":"62"},{"size":12324,"mtime":1644644644751,"results":"117","hashOfConfig":"62"},{"size":502,"mtime":1644642351353,"results":"118","hashOfConfig":"62"},{"size":1152,"mtime":1644699881991,"results":"119","hashOfConfig":"62"},{"size":1187,"mtime":1644701666535,"results":"120","hashOfConfig":"62"},{"size":706,"mtime":1644771598330,"results":"121","hashOfConfig":"62"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},"1c98s3n",{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"124"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"124"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"124"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"124"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"124"},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"124"},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"124"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"124"},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"124"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"124"},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"124"},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"124"},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"183","messages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"124"},{"filePath":"186","messages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"188","messages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"124"},{"filePath":"191","messages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"193","messages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"195","messages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"197","messages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"124"},{"filePath":"200","messages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"202","messages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"124"},{"filePath":"205","messages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"207","messages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"209","messages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"124"},{"filePath":"212","messages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"214","messages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"124"},{"filePath":"217","messages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"219","messages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"124"},{"filePath":"222","messages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"124"},{"filePath":"225","messages":"226","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"227","messages":"228","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"229","messages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"124"},{"filePath":"232","messages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"124"},{"filePath":"235","messages":"236","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"124"},{"filePath":"238","messages":"239","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"124"},{"filePath":"241","messages":"242","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"243","messages":"244","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"246"},{"filePath":"247","messages":"248","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"249","messages":"250","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"246"},{"filePath":"252","messages":"253","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"254","messages":"255","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"256","messages":"257","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"258","messages":"259","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"260","messages":"261","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"262","messages":"263","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"264","messages":"265","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"266","messages":"267","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"268","messages":"269","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\xampp\\htdocs\\xerographics\\client\\src\\index.js",[],["270","271"],"C:\\xampp\\htdocs\\xerographics\\client\\src\\App.js",["272","273","274","275"],"C:\\xampp\\htdocs\\xerographics\\client\\src\\components\\users\\Users.js",["276"],"C:\\xampp\\htdocs\\xerographics\\client\\src\\components\\dashboard\\Dashboard.js",["277","278","279","280"],"import react from \"react\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport Login from \"../Login/Login\";\r\nimport TopBar from \"../incl/TopBar\";\r\n\r\n\r\nfunction Dashboard() {\r\n    const navigate = useNavigate()\r\n    // if (sessionStorage.getItem(\"jwt_token\") === null) {\r\n    //     navigate('/login')\r\n    // }\r\n    return (\r\n\r\n        <div>\r\n\r\n\r\n            <div className=\"header bg-primary pb-6\">\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"header-body\">\r\n                        <div className=\"row align-items-center py-4\">\r\n                            <div className=\"col-lg-6 col-7\">\r\n                                <nav aria-label=\"breadcrumb\" className=\"d-none d-md-inline-block ml-md-4\">\r\n                                    <ol className=\"breadcrumb breadcrumb-links breadcrumb-dark\">\r\n                                        <li className=\"breadcrumb-item\"><a href=\"/\"><i className=\"fas fa-home\"></i></a>\r\n                                        </li>\r\n                                        <li className=\"breadcrumb-item\">Dashboard</li>\r\n\r\n                                    </ol>\r\n                                </nav>\r\n                            </div>\r\n                            <div className=\"col-md-2\"></div>\r\n                            <div className=\"col-md-2\"></div>\r\n                            <div className=\"col-lg-2 col-5 text-right\">\r\n\r\n                                <div className=\"col-md-2\"></div>\r\n                                <div className=\"\">\r\n                                    <select className=\"form-control\" name=\"selected_year\" id=\"selected_year\">\r\n\r\n                                        <option defaultValue value=\"2000\">2000 records</option>\r\n\r\n                                        <option value=\"2001\">2001 records</option>\r\n\r\n                                        <option value=\"2002\">2002 records</option>\r\n\r\n\r\n                                        <option value='2021'>2021 records</option>\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                        {/* <!-- Card stats --> */}\r\n                        <div className=\"row\">\r\n                            <div className=\"col-xl-3 col-md-6\">\r\n                                <div className=\"card card-stats\">\r\n                                    {/* <!-- Card body --> */}\r\n                                    <div className=\"card-body\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col\">\r\n                                                <h5 className=\"card-title text-uppercase text-muted mb-0\"> Sales</h5>\r\n                                                <span className=\"h2 font-weight-bold mb-0\">0</span>\r\n                                            </div>\r\n                                            <div className=\"col-auto\">\r\n                                                <div\r\n                                                    className=\"icon icon-shape bg-gradient-red text-white rounded-circle shadow\">\r\n                                                    <i className=\"ni ni-active-40\"></i>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <p className=\"mt-3 mb-0 text-sm\">\r\n\r\n                                            <span className=\"text-nowrap\">Last 30 days</span>\r\n                                        </p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-xl-3 col-md-6\">\r\n                                <div className=\"card card-stats\">\r\n                                    {/* <!-- Card body --> */}\r\n                                    <div className=\"card-body\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col\">\r\n                                                <h5 className=\"card-title text-uppercase text-muted mb-0\">Customers</h5>\r\n                                                <span className=\"h2 font-weight-bold mb-0\">6</span>\r\n                                            </div>\r\n                                            <div className=\"col-auto\">\r\n                                                <div\r\n                                                    className=\"icon icon-shape bg-gradient-orange text-white rounded-circle shadow\">\r\n                                                    <i className=\"ni ni-chart-pie-35\"></i>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <p className=\"mt-3 mb-0 text-sm\">\r\n\r\n                                            <span className=\"text-nowrap\">Since day 1</span>\r\n                                        </p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-xl-3 col-md-6\">\r\n                                <div className=\"card card-stats\">\r\n                                    {/* <!-- Card body --> */}\r\n                                    <div className=\"card-body\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col\">\r\n                                                <h5 className=\"card-title text-uppercase text-muted mb-0\">Inventory</h5>\r\n                                                <span className=\"h2 font-weight-bold mb-0\">3</span>\r\n                                            </div>\r\n                                            <div className=\"col-auto\">\r\n                                                <div\r\n                                                    className=\"icon icon-shape bg-gradient-green text-white rounded-circle shadow\">\r\n                                                    <i className=\"ni ni-money-coins\"></i>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <p className=\"mt-3 mb-0 text-sm\">\r\n                                            <span className=\"text-danger mr-2\"><i\r\n                                                className=\"fa fa-arrow-down\"></i> 0</span>\r\n                                            <span className=\"text-nowrap\">Out of Stock</span>\r\n                                        </p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-xl-3 col-md-6\">\r\n                                <div className=\"card card-stats\">\r\n                                    {/* <!-- Card body --> */}\r\n                                    <div className=\"card-body\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col\">\r\n                                                <h5 className=\"card-title text-uppercase text-muted mb-0\">Branches</h5>\r\n                                                <span className=\"h2 font-weight-bold mb-0\">3</span>\r\n                                            </div>\r\n                                            <div className=\"col-auto\">\r\n                                                <div\r\n                                                    className=\"icon icon-shape bg-gradient-info text-white rounded-circle shadow\">\r\n                                                    <i className=\"ni ni-chart-bar-32\"></i>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <p className=\"mt-3 mb-0 text-sm\">\r\n\r\n                                            <span className=\"text-nowrap\">Now</span>\r\n                                        </p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Dashboard;","C:\\xampp\\htdocs\\xerographics\\client\\src\\api\\api.js",[],"C:\\xampp\\htdocs\\xerographics\\client\\src\\components\\users\\UserListRow.js",["281","282","283"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst UserListRow = (props) => {\r\n    // console.log(props.user)\r\n    const user = props.user;\r\n\r\n    const userStatus = () => {\r\n        if (user.status === 'Active') {\r\n            return (\r\n                <i className=\"text-success\"> {user.status}</i>\r\n            )\r\n        } else {\r\n            return (\r\n                <i className=\"text-danger\"> {user.status}</i>\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <tr >\r\n            <th >\r\n                <div className=\"media align-items-center\">\r\n                    <a href=\"#\" className=\"avatar rounded-circle mr-3\">\r\n                        <img alt=\"Image placeholder\" src=\"../assets/img/theme/bootstrap.jpg\" />\r\n                    </a>\r\n                    <div className=\"media-body\">\r\n                        <span className=\"name mb-0 text-sm\"> {user.firstname} {user.lastname}</span>\r\n                    </div>\r\n                </div>\r\n            </th>\r\n\r\n            <td>\r\n                {user.email}\r\n            </td>\r\n\r\n            <td>\r\n                {user.role}\r\n            </td>\r\n\r\n            <td>\r\n                {userStatus()}\r\n\r\n            </td>\r\n\r\n            <td className=\"\">\r\n                <div className=\"dropdown\">\r\n                    <a className=\"btn btn-sm btn-icon-only text-dark\" href=\"#\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                        <i className=\"fas fa-ellipsis-h\"></i>\r\n                    </a>\r\n                    <div className=\"dropdown-menu dropdown-menu-right dropdown-menu-arrow\">\r\n                        <Link to={'editUser/' + user.id}\r\n                            state={{ user: user }}\r\n                            className=\"text-primary dropdown-item editIcon\" >Edit</Link>\r\n\r\n                        <button onClick={() => props.getDeleteUserId(user.id)} className=\"dropdown-item text-danger\">Delete</button>\r\n\r\n                    </div>\r\n                </div>\r\n            </td>\r\n        </tr>\r\n    );\r\n}\r\n\r\nexport default UserListRow;","C:\\xampp\\htdocs\\xerographics\\client\\src\\components\\users\\AddUser.js",["284","285","286","287","288","289","290","291","292"],"C:\\xampp\\htdocs\\xerographics\\client\\src\\components\\alerts\\alert.js",["293","294"],"import Snackbar from '@mui/material/Snackbar';\r\nimport MuiAlert from '@mui/material/Alert';\r\nimport { Stack } from \"@mui/material\";\r\nimport React from 'react';\r\nimport { useEffect, useState } from 'react';\r\n\r\n\r\nfunction Alert(props) {\r\n    const Alert = React.forwardRef(function Alert(props, ref) {\r\n        return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n    });\r\n\r\n    // console.log(props)\r\n\r\n\r\n    return (\r\n\r\n        <Stack spacing={2} sx={{ width: '100%' }}>\r\n\r\n            <Snackbar open={props.openAlert} autoHideDuration={6000} onClose={props.handleAlertClose}>\r\n                <Alert onClose={props.handleAlertClose} severity={props.alertType} sx={{ width: '100%' }}>\r\n                    {props.alertMessage}\r\n                </Alert>\r\n            </Snackbar>\r\n        </Stack>\r\n    );\r\n}\r\n\r\nexport default Alert;","C:\\xampp\\htdocs\\xerographics\\client\\src\\components\\alerts\\dialog.js",[],"C:\\xampp\\htdocs\\xerographics\\client\\src\\components\\users\\UserDetails.js",["295","296","297","298","299","300","301","302"],"C:\\xampp\\htdocs\\xerographics\\client\\src\\components\\customers\\Customers.js",[],"C:\\xampp\\htdocs\\xerographics\\client\\src\\components\\customers\\customerListRow.js",["303","304","305"],"C:\\xampp\\htdocs\\xerographics\\client\\src\\components\\customers\\CustomerListRow.js",["306","307","308"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst customerListRow = (props) => {\r\n    // console.log(props.user)\r\n    const customer = props.customer;\r\n    const address = () => {\r\n        if (customer.address === null) {\r\n            return (\r\n                <td>\r\n                    -\r\n                </td>\r\n            )\r\n        } else {\r\n            return (\r\n                <td>\r\n                    {customer.address}\r\n                </td>\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <tr >\r\n            <th >\r\n                <div className=\"media align-items-center\">\r\n                    <a href=\"#\" className=\"avatar rounded-circle mr-3\">\r\n                        <img alt=\"Image placeholder\" src=\"../assets/img/theme/bootstrap.jpg\" />\r\n                    </a>\r\n                    <div className=\"media-body\">\r\n                        <span className=\"name mb-0 text-sm\"> {customer.customer_name}</span>\r\n                    </div>\r\n                </div>\r\n            </th>\r\n\r\n            <td>\r\n                {customer.customer_phone}\r\n            </td>\r\n\r\n            {address()}\r\n\r\n\r\n            <td className=\"\">\r\n                <div className=\"dropdown\">\r\n                    <a className=\"btn btn-sm btn-icon-only text-dark\" href=\"#\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                        <i className=\"fas fa-ellipsis-h\"></i>\r\n                    </a>\r\n                    <div className=\"dropdown-menu dropdown-menu-right dropdown-menu-arrow\">\r\n                        <Link to={'editCustomer/' + customer.id}\r\n                            state={{ customer: customer }}\r\n                            className=\"text-primary dropdown-item editIcon\" >Edit</Link>\r\n\r\n                        <button onClick={() => props.getDeleteCustomerId(customer.id)} className=\"dropdown-item text-danger\">Delete</button>\r\n\r\n                    </div>\r\n                </div>\r\n            </td>\r\n        </tr>\r\n    );\r\n}\r\n\r\nexport default customerListRow;","C:\\xampp\\htdocs\\xerographics\\client\\src\\components\\customers\\CustomerDetails.js",["309","310"],"import { Link, useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useEffect, useState } from 'react';\r\nimport api from \"../../api/api\";\r\nimport Alert from \"../alerts/alert\";\r\n\r\n\r\nfunction CustomerDetails(props) {\r\n    const location = useLocation()\r\n    const customer = location.state.customer;\r\n    // console.log(user)\r\n\r\n    const navigate = useNavigate();\r\n\r\n\r\n    //alert state\r\n    const [open, setOpen] = useState(false);\r\n    //dialog state\r\n\r\n    const [alertType, setAlertType] = useState(\"\");\r\n    const [alertMessage, setAlertMessage] = useState(\"\");\r\n\r\n    const handleAlertClose = () => {\r\n        setOpen(false);\r\n        setAlertMessage('')\r\n        setAlertType('')\r\n    };\r\n\r\n\r\n    const [customer_name, setName] = useState(customer.customer_name);\r\n    const [customer_phone, setPhone] = useState(customer.customer_phone);\r\n    const [address, setAddress] = useState(customer.address);\r\n\r\n\r\n    const updateCustomer = (e) => {\r\n        // console.log(\"sjsjs\")\r\n        e.preventDefault()\r\n        if (customer_name === \"\" || customer_phone === \"\") {\r\n            setOpen(true);\r\n            setAlertMessage('All fields are mandatory')\r\n            setAlertType('error')\r\n        } else {\r\n            const state = {\r\n                ecustomer_name: customer_name,\r\n                ecustomer_phone: customer_phone,\r\n                ecustomer_address: address,\r\n                ecustomer_id: customer.id\r\n            }\r\n            AddCustomerHandler(state)\r\n            setName(customer.customer_name) // clear form fields \r\n            setPhone(customer.customer_phone) // clear form fields \r\n            setAddress(customer.address) // clear form fields \r\n\r\n\r\n        }\r\n    }\r\n\r\n    const AddCustomerHandler = (state) => {\r\n        console.log(state)\r\n\r\n        api.put('/updateCustomer'\r\n            , state\r\n        )\r\n            .then(function (response) {\r\n                // console.log(response.data)\r\n                if (response.data.error == false) {\r\n\r\n                    // console.log(response.data.users)\r\n                    // return response.data.users;\r\n                    setAlertType('success')\r\n                    setAlertMessage(response.data.message)\r\n                    setOpen(true)\r\n                    setTimeout(() => { navigate('/customers'); }, 1000)\r\n\r\n                } else {\r\n                    // console.log(response.data.message)\r\n                    // return [];\r\n                    setAlertType('error')\r\n                    setAlertMessage(response.data.message)\r\n                    setOpen(true)\r\n                }\r\n\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n                setAlertType('error')\r\n                setAlertMessage(\"Error 500: Internal server error\")\r\n                setOpen(true)\r\n            });\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"\">\r\n                <div className=\"header bg-primary pb-6\">\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"header-body\">\r\n                            <div className=\"row align-items-center py-4\">\r\n                                <div className=\"col-lg-6 col-7\">\r\n                                    <nav aria-label=\"breadcrumb\" className=\"d-none d-md-inline-block ml-md-4\">\r\n                                        <ol className=\"breadcrumb breadcrumb-links breadcrumb-dark\">\r\n                                            <li className=\"breadcrumb-item\"><a href=\"/\"><i className=\"fas fa-home\"></i></a></li>\r\n                                            <li className=\"breadcrumb-item active\" aria-current=\"page\"><Link to={'/users'}>Users</Link></li>\r\n                                            <li className=\"breadcrumb-item active\" aria-current=\"page\"><Link to={'/customers'}>Customers</Link></li>\r\n                                            <li className=\"breadcrumb-item active\" aria-current=\"page\">Edit Customer Details</li>\r\n                                        </ol>\r\n                                    </nav>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            <div className=\"container-fluid mt--6\">\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <div className=\"card\">\r\n                            <div className=\"container-fluid mt-5\">\r\n                                <form onSubmit={updateCustomer}>\r\n\r\n                                    <input type=\"hidden\" name=\"ecustomer_id\" id=\"ecustomer_id\" value={customer.id} required />\r\n\r\n                                    <div className=\"row\">\r\n\r\n\r\n                                        <div className=\"col-md-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label >Customer Name <span className='text-danger'>*</span></label>\r\n                                                <input value={customer_name} onChange={(e) => setName(e.target.value)} type=\"text\" className=\"form-control\" name=\"efname\" id=\"efname\" placeholder=\"Ex: John\" required />\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"col-md-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label >Customer Phone <span className='text-danger'>*</span></label>\r\n                                                <input value={customer_phone} onChange={(e) => setPhone(e.target.value)} type=\"text\" className=\"form-control\" name=\"elname\" id=\"elname\" placeholder=\"Ex: +26588299292\" required />\r\n                                            </div>\r\n                                        </div>\r\n\r\n\r\n\r\n                                        <div className=\"col-md-12\">\r\n                                            <div className=\"form-group\">\r\n                                                <label >Address</label>\r\n                                                <textarea value={address} onChange={(e) => setAddress(e.target.value)} className=\"form-control\" placeholder=\"Ex: Area 25 sector 3\" ></textarea>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n                                    <div className=\"modal-footer\">\r\n                                        <button type=\"submit\" id=\"btn_add\" className=\"btn btn-primary\">Save</button>\r\n                                    </div>\r\n\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <Alert openAlert={open} alertMessage={alertMessage} alertType={alertType} handleAlertClose={handleAlertClose} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CustomerDetails;","C:\\xampp\\htdocs\\xerographics\\client\\src\\components\\customers\\AddCustomer.js",["311","312","313"],"import { Link, useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useEffect, useState } from 'react';\r\nimport api from \"../../api/api\";\r\nimport Alert from \"../alerts/alert\";\r\n\r\n\r\nfunction AddCustomer(props) {\r\n    // console.log(user)\r\n\r\n    const navigate = useNavigate();\r\n\r\n\r\n    //alert state\r\n    const [open, setOpen] = useState(false);\r\n    //dialog state\r\n\r\n    const [alertType, setAlertType] = useState(\"\");\r\n    const [alertMessage, setAlertMessage] = useState(\"\");\r\n\r\n    const handleAlertClose = () => {\r\n        setOpen(false);\r\n        setAlertMessage('')\r\n        setAlertType('')\r\n    };\r\n\r\n\r\n    const [customer_name, setName] = useState('');\r\n    const [customer_phone, setPhone] = useState('');\r\n    const [address, setAddress] = useState('');\r\n\r\n\r\n    const addCustomer = (e) => {\r\n        // console.log(\"sjsjs\")\r\n        e.preventDefault()\r\n        if (customer_name === \"\" || customer_phone === \"\") {\r\n            setOpen(true);\r\n            setAlertMessage('All fields are mandatory')\r\n            setAlertType('error')\r\n        } else {\r\n            const state = {\r\n                customer_name: customer_name,\r\n                customer_phone: customer_phone,\r\n                customer_address: address\r\n            }\r\n            AddCustomerHandler(state)\r\n            setName('') // clear form fields \r\n            setPhone('') // clear form fields \r\n            setAddress('') // clear form fields \r\n\r\n\r\n        }\r\n    }\r\n\r\n    const AddCustomerHandler = (state) => {\r\n        console.log(state)\r\n\r\n        api.post('/saveCustomer'\r\n            , state\r\n        )\r\n            .then(function (response) {\r\n                // console.log(response.data)\r\n                if (response.data.error == false) {\r\n\r\n                    // console.log(response.data.users)\r\n                    // return response.data.users;\r\n                    setAlertType('success')\r\n                    setAlertMessage(response.data.message)\r\n                    setOpen(true)\r\n                    setTimeout(() => { navigate('/customers'); }, 1000)\r\n\r\n                } else {\r\n                    // console.log(response.data.message)\r\n                    // return [];\r\n                    setAlertType('error')\r\n                    setAlertMessage(response.data.message)\r\n                    setOpen(true)\r\n                }\r\n\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n                setAlertType('error')\r\n                setAlertMessage(\"Error 500: Internal server error\")\r\n                setOpen(true)\r\n            });\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"\">\r\n                <div className=\"header bg-primary pb-6\">\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"header-body\">\r\n                            <div className=\"row align-items-center py-4\">\r\n                                <div className=\"col-lg-6 col-7\">\r\n                                    <nav aria-label=\"breadcrumb\" className=\"d-none d-md-inline-block ml-md-4\">\r\n                                        <ol className=\"breadcrumb breadcrumb-links breadcrumb-dark\">\r\n                                            <li className=\"breadcrumb-item\"><a href=\"/\"><i className=\"fas fa-home\"></i></a></li>\r\n                                            <li className=\"breadcrumb-item active\" aria-current=\"page\"><Link to={'/users'}>Users</Link></li>\r\n                                            <li className=\"breadcrumb-item active\" aria-current=\"page\"><Link to={'/customers'}>Customers</Link></li>\r\n                                            <li className=\"breadcrumb-item active\" aria-current=\"page\">Add Customer</li>\r\n                                        </ol>\r\n                                    </nav>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            <div className=\"container-fluid mt--6\">\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <div className=\"card\">\r\n                            <div className=\"container-fluid mt-5\">\r\n                                <form onSubmit={addCustomer}>\r\n\r\n\r\n                                    <div className=\"row\">\r\n\r\n\r\n                                        <div className=\"col-md-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label >Customer Name <span className='text-danger'>*</span></label>\r\n                                                <input value={customer_name} onChange={(e) => setName(e.target.value)} type=\"text\" className=\"form-control\" name=\"efname\" id=\"efname\" placeholder=\"Ex: John\" required />\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"col-md-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label >Customer Phone <span className='text-danger'>*</span></label>\r\n                                                <input value={customer_phone} onChange={(e) => setPhone(e.target.value)} type=\"text\" className=\"form-control\" name=\"elname\" id=\"elname\" placeholder=\"Ex: +26588299292\" required />\r\n                                            </div>\r\n                                        </div>\r\n\r\n\r\n\r\n                                        <div className=\"col-md-12\">\r\n                                            <div className=\"form-group\">\r\n                                                <label >Address</label>\r\n                                                <textarea value={address} onChange={(e) => setAddress(e.target.value)} className=\"form-control\" placeholder=\"Ex: Area 25 sector 3\" ></textarea>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n                                    <div className=\"modal-footer\">\r\n                                        <button type=\"submit\" id=\"btn_add\" className=\"btn btn-primary\">Save</button>\r\n                                    </div>\r\n\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <Alert openAlert={open} alertMessage={alertMessage} alertType={alertType} handleAlertClose={handleAlertClose} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AddCustomer;","C:\\xampp\\htdocs\\xerographics\\client\\src\\components\\units\\Units.js",[],"C:\\xampp\\htdocs\\xerographics\\client\\src\\components\\units\\UnitListRow.js",["314"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst UnitListRow = (props) => {\r\n    // console.log(props.user)\r\n    const unit = props.unit;\r\n\r\n\r\n    return (\r\n        <tr >\r\n            <th >\r\n\r\n                <span className=\"name mb-0 text-sm\"> {unit.unit_name}</span>\r\n\r\n            </th>\r\n\r\n            <td>\r\n                {unit.unit_symbol}\r\n            </td>\r\n\r\n            <td className=\"\">\r\n                <div className=\"dropdown\">\r\n                    <a className=\"btn btn-sm btn-icon-only text-dark\" href=\"#\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                        <i className=\"fas fa-ellipsis-h\"></i>\r\n                    </a>\r\n                    <div className=\"dropdown-menu dropdown-menu-right dropdown-menu-arrow\">\r\n                        <Link to={'editUnit/' + unit.id}\r\n                            state={{ unit: unit }}\r\n                            className=\"text-primary dropdown-item editIcon\" >Edit</Link>\r\n\r\n                        <button onClick={() => props.getDeleteUnitId(unit.id)} className=\"dropdown-item text-danger\">Delete</button>\r\n\r\n                    </div>\r\n                </div>\r\n            </td>\r\n        </tr>\r\n    );\r\n}\r\n\r\nexport default UnitListRow;","C:\\xampp\\htdocs\\xerographics\\client\\src\\components\\units\\AddUnit.js",["315","316","317"],"import { Link, useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useEffect, useState } from 'react';\r\nimport api from \"../../api/api\";\r\nimport Alert from \"../alerts/alert\";\r\n\r\n\r\nfunction AddUnit(props) {\r\n    // console.log(user)\r\n\r\n    const navigate = useNavigate();\r\n\r\n\r\n    //alert state\r\n    const [open, setOpen] = useState(false);\r\n    //dialog state\r\n\r\n    const [alertType, setAlertType] = useState(\"\");\r\n    const [alertMessage, setAlertMessage] = useState(\"\");\r\n\r\n    const handleAlertClose = () => {\r\n        setOpen(false);\r\n        setAlertMessage('')\r\n        setAlertType('')\r\n    };\r\n\r\n\r\n    const [unit_name, setUnitName] = useState('');\r\n    const [unit_symbol, setUnitSymbol] = useState('');\r\n\r\n\r\n    const addUnit = (e) => {\r\n        // console.log(\"sjsjs\")\r\n        e.preventDefault()\r\n        if (unit_name === \"\" || unit_symbol === \"\") {\r\n            setOpen(true);\r\n            setAlertMessage('All fields are mandatory')\r\n            setAlertType('error')\r\n        } else {\r\n            const state = {\r\n                unit_name: unit_name,\r\n                unit_symbol: unit_symbol\r\n            }\r\n            AddUnitHandler(state)\r\n            setUnitName('') // clear form fields \r\n            setUnitSymbol('') // clear form fields \r\n\r\n        }\r\n    }\r\n\r\n    const AddUnitHandler = (state) => {\r\n        console.log(state)\r\n\r\n        api.post('/saveUnit'\r\n            , state\r\n        )\r\n            .then(function (response) {\r\n                // console.log(response.data)\r\n                if (response.data.error == false) {\r\n\r\n                    // console.log(response.data.users)\r\n                    // return response.data.users;\r\n                    setAlertType('success')\r\n                    setAlertMessage(response.data.message)\r\n                    setOpen(true)\r\n                    setTimeout(() => { navigate('/units'); }, 1000)\r\n\r\n                } else {\r\n                    // console.log(response.data.message)\r\n                    // return [];\r\n                    setAlertType('error')\r\n                    setAlertMessage(response.data.message)\r\n                    setOpen(true)\r\n                }\r\n\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n                setAlertType('error')\r\n                setAlertMessage(\"Error 500: Internal server error\")\r\n                setOpen(true)\r\n            });\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"\">\r\n                <div className=\"header bg-primary pb-6\">\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"header-body\">\r\n                            <div className=\"row align-items-center py-4\">\r\n                                <div className=\"col-lg-6 col-7\">\r\n                                    <nav aria-label=\"breadcrumb\" className=\"d-none d-md-inline-block ml-md-4\">\r\n                                        <ol className=\"breadcrumb breadcrumb-links breadcrumb-dark\">\r\n                                            <li className=\"breadcrumb-item\"><Link to={\"/\"}><i className=\"fas fa-home\"></i></Link></li>\r\n                                            <li className=\"breadcrumb-item active\" aria-current=\"page\"><Link to={'/units'}>Units</Link></li>\r\n                                            <li className=\"breadcrumb-item active\" aria-current=\"page\">Add Unit</li>\r\n                                        </ol>\r\n                                    </nav>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            <div className=\"container-fluid mt--6\">\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <div className=\"card\">\r\n                            <div className=\"container-fluid mt-5\">\r\n                                <form onSubmit={addUnit}>\r\n\r\n\r\n                                    <div className=\"row\">\r\n\r\n\r\n                                        <div className=\"col-md-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label >Unit Name <span className='text-danger'>*</span></label>\r\n                                                <input value={unit_name} onChange={(e) => setUnitName(e.target.value)} type=\"text\" className=\"form-control\" name=\"efname\" id=\"efname\" placeholder=\"Ex: Kilogram\" required />\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"col-md-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label >Unit Symbol <span className='text-danger'>*</span></label>\r\n                                                <input value={unit_symbol} onChange={(e) => setUnitSymbol(e.target.value)} type=\"text\" className=\"form-control\" name=\"elname\" id=\"elname\" placeholder=\"Ex: KG\" required />\r\n                                            </div>\r\n                                        </div>\r\n\r\n\r\n\r\n\r\n\r\n                                    </div>\r\n\r\n                                    <div className=\"modal-footer\">\r\n                                        <button type=\"submit\" id=\"btn_add\" className=\"btn btn-primary\">Save</button>\r\n                                    </div>\r\n\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <Alert openAlert={open} alertMessage={alertMessage} alertType={alertType} handleAlertClose={handleAlertClose} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AddUnit;","C:\\xampp\\htdocs\\xerographics\\client\\src\\components\\units\\UnitDetails.js",["318"],"import { Link, useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useEffect, useState } from 'react';\r\nimport api from \"../../api/api\";\r\nimport Alert from \"../alerts/alert\";\r\n\r\n\r\nfunction UnitDetails(props) {\r\n    const location = useLocation()\r\n    const unit = location.state.unit;\r\n    // console.log(user)\r\n\r\n    const navigate = useNavigate();\r\n\r\n\r\n    //alert state\r\n    const [open, setOpen] = useState(false);\r\n    //dialog state\r\n\r\n    const [alertType, setAlertType] = useState(\"\");\r\n    const [alertMessage, setAlertMessage] = useState(\"\");\r\n\r\n    const handleAlertClose = () => {\r\n        setOpen(false);\r\n        setAlertMessage('')\r\n        setAlertType('')\r\n    };\r\n\r\n\r\n    const [unit_name, setUnitName] = useState(unit.unit_name);\r\n    const [unit_symbol, setUnitSymbol] = useState(unit.unit_symbol);\r\n\r\n    const updateUnit = (e) => {\r\n        // console.log(\"sjsjs\")\r\n        e.preventDefault()\r\n        if (unit_name === \"\" || unit_symbol === \"\") {\r\n            setOpen(true);\r\n            setAlertMessage('All fields are mandatory')\r\n            setAlertType('error')\r\n        } else {\r\n            const state = {\r\n                eunit_name: unit_name,\r\n                eunit_symbol: unit_symbol,\r\n                eunit_id: unit.id\r\n            }\r\n            AddUnitHandler(state)\r\n            setUnitName(unit.unit_name) // clear form fields \r\n            setUnitSymbol(unit.unit_symbol) // clear form fields \r\n\r\n        }\r\n    }\r\n\r\n    const AddUnitHandler = (state) => {\r\n        console.log(state)\r\n\r\n        api.put('/updateUnit'\r\n            , state\r\n        )\r\n            .then(function (response) {\r\n                // console.log(response.data)\r\n                if (response.data.error === false) {\r\n\r\n                    // console.log(response.data.users)\r\n                    // return response.data.users;\r\n                    setAlertType('success')\r\n                    setAlertMessage(response.data.message)\r\n                    setOpen(true)\r\n                    setTimeout(() => { navigate('/units'); }, 1000)\r\n\r\n                } else {\r\n                    // console.log(response.data.message)\r\n                    // return [];\r\n                    setAlertType('error')\r\n                    setAlertMessage(response.data.message)\r\n                    setOpen(true)\r\n                }\r\n\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n                setAlertType('error')\r\n                setAlertMessage(\"Error 500: Internal server error\")\r\n                setOpen(true)\r\n            });\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"\">\r\n                <div className=\"header bg-primary pb-6\">\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"header-body\">\r\n                            <div className=\"row align-items-center py-4\">\r\n                                <div className=\"col-lg-6 col-7\">\r\n                                    <nav aria-label=\"breadcrumb\" className=\"d-none d-md-inline-block ml-md-4\">\r\n                                        <ol className=\"breadcrumb breadcrumb-links breadcrumb-dark\">\r\n                                            <li className=\"breadcrumb-item\"><Link to={\"/\"}><i className=\"fas fa-home\"></i></Link></li>\r\n                                            <li className=\"breadcrumb-item active\" aria-current=\"page\"><Link to={'/units'}>Units</Link></li>\r\n                                            <li className=\"breadcrumb-item active\" aria-current=\"page\">Edit Unit Details</li>\r\n                                        </ol>\r\n                                    </nav>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            <div className=\"container-fluid mt--6\">\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <div className=\"card\">\r\n                            <div className=\"container-fluid mt-5\">\r\n                                <form onSubmit={updateUnit}>\r\n\r\n                                    <input type=\"hidden\" name=\"ecustomer_id\" id=\"ecustomer_id\" value={unit.id} required />\r\n\r\n                                    <div className=\"row\">\r\n\r\n\r\n                                        <div className=\"col-md-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label >Unit Name <span className='text-danger'>*</span></label>\r\n                                                <input value={unit_name} onChange={(e) => setUnitName(e.target.value)} type=\"text\" className=\"form-control\" placeholder=\"Ex: Kilograms\" required />\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"col-md-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label >Unit Symbol <span className='text-danger'>*</span></label>\r\n                                                <input value={unit_symbol} onChange={(e) => setUnitSymbol(e.target.value)} type=\"text\" className=\"form-control\" placeholder=\"Ex: KG\" required />\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n                                    <div className=\"modal-footer\">\r\n                                        <button type=\"submit\" id=\"btn_add\" className=\"btn btn-primary\">Save</button>\r\n                                    </div>\r\n\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <Alert openAlert={open} alertMessage={alertMessage} alertType={alertType} handleAlertClose={handleAlertClose} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UnitDetails;","C:\\xampp\\htdocs\\xerographics\\client\\src\\components\\categories\\AddCategory.js",["319","320","321"],"import { Link, useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useEffect, useState } from 'react';\r\nimport api from \"../../api/api\";\r\nimport Alert from \"../alerts/alert\";\r\nimport LinearProgressLoad from \"../alerts/LinearProgress\";\r\n\r\n\r\nfunction AddCategory(props) {\r\n    // console.log(user)\r\n\r\n    const navigate = useNavigate();\r\n\r\n\r\n    //alert state\r\n    const [open, setOpen] = useState(false);\r\n    //dialog state\r\n\r\n    const [alertType, setAlertType] = useState(\"\");\r\n    const [alertMessage, setAlertMessage] = useState(\"\");\r\n    const [loadingProgress, setLoadingProgress] = useState(false);\r\n\r\n\r\n    const handleAlertClose = () => {\r\n        setOpen(false);\r\n        setAlertMessage('')\r\n        setAlertType('')\r\n    };\r\n\r\n\r\n    const [category_name, setCategoryName] = useState('');\r\n    const [category_notes, setCategoryNotes] = useState('');\r\n\r\n\r\n    const addCategory = (e) => {\r\n        // console.log(\"sjsjs\")\r\n        e.preventDefault()\r\n        if (category_name === \"\") {\r\n            setOpen(true);\r\n            setAlertMessage('Category field is mandatory')\r\n            setAlertType('error')\r\n        } else {\r\n            setLoadingProgress(true)\r\n\r\n            const state = {\r\n                category_name: category_name,\r\n                category_description: category_notes\r\n            }\r\n            AddCategoryHandler(state)\r\n            setCategoryName('') // clear form fields \r\n            setCategoryNotes('') // clear form fields \r\n\r\n        }\r\n    }\r\n\r\n    const AddCategoryHandler = (state) => {\r\n        console.log(state)\r\n\r\n        api.post('/saveCategory'\r\n            , state\r\n        )\r\n            .then(function (response) {\r\n                setLoadingProgress(false)\r\n\r\n                // console.log(response.data)\r\n                if (response.data.error == false) {\r\n\r\n                    // console.log(response.data.users)\r\n                    // return response.data.users;\r\n                    setAlertType('success')\r\n                    setAlertMessage(response.data.message)\r\n                    setOpen(true)\r\n                    setTimeout(() => { navigate('/categories'); }, 1000)\r\n\r\n                } else {\r\n                    // console.log(response.data.message)\r\n                    // return [];\r\n                    setAlertType('error')\r\n                    setAlertMessage(response.data.message)\r\n                    setOpen(true)\r\n                }\r\n\r\n            })\r\n            .catch(function (error) {\r\n                setLoadingProgress(false)\r\n\r\n                console.log(error);\r\n                setAlertType('error')\r\n                setAlertMessage(\"Error 500: Internal server error\")\r\n                setOpen(true)\r\n            });\r\n    }\r\n    const loading = () => {\r\n        if (loadingProgress) {\r\n            return (\r\n                <div className=\"mb-3\">\r\n                    <LinearProgressLoad />\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"\">\r\n                <div className=\"header bg-primary pb-6\">\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"header-body\">\r\n                            <div className=\"row align-items-center py-4\">\r\n                                <div className=\"col-lg-6 col-7\">\r\n                                    <nav aria-label=\"breadcrumb\" className=\"d-none d-md-inline-block ml-md-4\">\r\n                                        <ol className=\"breadcrumb breadcrumb-links breadcrumb-dark\">\r\n                                            <li className=\"breadcrumb-item\"><Link to={\"/\"}><i className=\"fas fa-home\"></i></Link></li>\r\n                                            <li className=\"breadcrumb-item active\" aria-current=\"page\"><Link to={'/categories'}>Categories</Link></li>\r\n                                            <li className=\"breadcrumb-item active\" aria-current=\"page\">Add Category</li>\r\n                                        </ol>\r\n                                    </nav>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            <div className=\"container-fluid mt--6\">\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <div className=\"card\">\r\n                            <div className=\"container-fluid mt-5\">\r\n                                {loading()}\r\n                                <form onSubmit={addCategory}>\r\n\r\n\r\n                                    <div className=\"row\">\r\n\r\n\r\n                                        <div className=\"col-md-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label >Category Name <span className='text-danger'>*</span></label>\r\n                                                <input value={category_name} onChange={(e) => setCategoryName(e.target.value)} type=\"text\" className=\"form-control\" name=\"efname\" id=\"efname\" placeholder=\"Ex: Electronics\" required />\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"col-md-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label >Category Description</label>\r\n                                                <textarea value={category_notes} onChange={(e) => setCategoryNotes(e.target.value)} type=\"text\" className=\"form-control\" placeholder=\"Ex: contains gadgets that use electricity\"  ></textarea>\r\n                                            </div>\r\n                                        </div>\r\n\r\n\r\n                                    </div>\r\n\r\n                                    <div className=\"modal-footer\">\r\n                                        <button type=\"submit\" id=\"btn_add\" className=\"btn btn-primary\">Save</button>\r\n                                    </div>\r\n\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <Alert openAlert={open} alertMessage={alertMessage} alertType={alertType} handleAlertClose={handleAlertClose} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AddCategory;","C:\\xampp\\htdocs\\xerographics\\client\\src\\components\\categories\\Categories.js",[],"C:\\xampp\\htdocs\\xerographics\\client\\src\\components\\categories\\CategoryDetails.js",["322","323"],"import {Link, useNavigate, useLocation} from \"react-router-dom\";\r\nimport {useEffect, useState} from 'react';\r\nimport api from \"../../api/api\";\r\nimport Alert from \"../alerts/alert\";\r\nimport LinearProgressLoad from \"../alerts/LinearProgress\";\r\n\r\n\r\nfunction CategoryDetails(props) {\r\n    const location = useLocation()\r\n    const category = location.state.category;\r\n    // console.log(user)\r\n\r\n    const navigate = useNavigate();\r\n\r\n\r\n    //alert state\r\n    const [open, setOpen] = useState(false);\r\n    //dialog state\r\n\r\n    const [alertType, setAlertType] = useState(\"\");\r\n    const [alertMessage, setAlertMessage] = useState(\"\");\r\n    const [loadingProgress, setLoadingProgress] = useState(false);\r\n\r\n\r\n    const handleAlertClose = () => {\r\n        setOpen(false);\r\n        setAlertMessage('')\r\n        setAlertType('')\r\n    };\r\n\r\n\r\n    const [category_name, setCategoryName] = useState(category.category_name);\r\n    const [category_notes, setCategoryNotes] = useState(category.category_notes);\r\n\r\n\r\n    const updateCategory = (e) => {\r\n        // console.log(\"sjsjs\")\r\n        e.preventDefault()\r\n        if (category_name === \"\") {\r\n            setOpen(true);\r\n            setAlertMessage('Category name field is mandatory')\r\n            setAlertType('error')\r\n        } else {\r\n            setLoadingProgress(true)\r\n\r\n            const state = {\r\n                ecategory_name: category_name,\r\n                ecategory_description: category_notes,\r\n                ecategory_id: category.id\r\n            }\r\n            AddCategoryHandler(state)\r\n            setCategoryName(category_name) // clear form fields \r\n            setCategoryNotes(category_notes) // clear form fields \r\n\r\n        }\r\n    }\r\n\r\n    const AddCategoryHandler = (state) => {\r\n        console.log(state)\r\n\r\n        api.put('/updateCategory'\r\n            , state\r\n        )\r\n            .then(function (response) {\r\n                setLoadingProgress(false)\r\n\r\n                // console.log(response.data)\r\n                if (response.data.error == false) {\r\n\r\n                    // console.log(response.data.users)\r\n                    // return response.data.users;\r\n                    setAlertType('success')\r\n                    setAlertMessage(response.data.message)\r\n                    setOpen(true)\r\n                    setTimeout(() => {\r\n                        navigate('/categories');\r\n                    }, 1000)\r\n\r\n                } else {\r\n                    // console.log(response.data.message)\r\n                    // return [];\r\n                    setAlertType('error')\r\n                    setAlertMessage(response.data.message)\r\n                    setOpen(true)\r\n                }\r\n\r\n            })\r\n            .catch(function (error) {\r\n                setLoadingProgress(false)\r\n\r\n                console.log(error);\r\n                setAlertType('error')\r\n                setAlertMessage(\"Error 500: Internal server error\")\r\n                setOpen(true)\r\n            });\r\n    }\r\n\r\n    const loading = () => {\r\n        if (loadingProgress) {\r\n            return (\r\n                <div className=\"mb-3\">\r\n                    <LinearProgressLoad/>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"\">\r\n                <div className=\"header bg-primary pb-6\">\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"header-body\">\r\n                            <div className=\"row align-items-center py-4\">\r\n                                <div className=\"col-lg-6 col-7\">\r\n                                    <nav aria-label=\"breadcrumb\" className=\"d-none d-md-inline-block ml-md-4\">\r\n                                        <ol className=\"breadcrumb breadcrumb-links breadcrumb-dark\">\r\n                                            <li className=\"breadcrumb-item\"><Link to={\"/\"}><i\r\n                                                className=\"fas fa-home\"></i></Link></li>\r\n                                            <li className=\"breadcrumb-item active\" aria-current=\"page\"><Link\r\n                                                to={'/categories'}>Categories</Link></li>\r\n                                            <li className=\"breadcrumb-item active\" aria-current=\"page\">Edit Category\r\n                                                Details\r\n                                            </li>\r\n                                        </ol>\r\n                                    </nav>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            <div className=\"container-fluid mt--6\">\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <div className=\"card\">\r\n                            <div className=\"container-fluid mt-5\">\r\n                                {loading()}\r\n                                <form onSubmit={updateCategory}>\r\n\r\n                                    <input type=\"hidden\" value={category.id} required/>\r\n\r\n                                    <div className=\"row\">\r\n\r\n\r\n                                        <div className=\"col-md-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label>Category Name <span className='text-danger'>*</span></label>\r\n                                                <input value={category_name}\r\n                                                       onChange={(e) => setCategoryName(e.target.value)} type=\"text\"\r\n                                                       className=\"form-control\" placeholder=\"Ex: Electronics\" required/>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"col-md-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label>Category Description</label>\r\n                                                <textarea value={category_notes}\r\n                                                          onChange={(e) => setCategoryNotes(e.target.value)} type=\"text\"\r\n                                                          className=\"form-control\"\r\n                                                          placeholder=\"Ex: contains gadgets that use electricity\"></textarea>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n                                    <div className=\"modal-footer\">\r\n                                        <button type=\"submit\" id=\"btn_add\" className=\"btn btn-primary\">Save</button>\r\n                                    </div>\r\n\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <Alert openAlert={open} alertMessage={alertMessage} alertType={alertType}\r\n                   handleAlertClose={handleAlertClose}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CategoryDetails;","C:\\xampp\\htdocs\\xerographics\\client\\src\\components\\categories\\CategoryListRow.js",["324"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CategoryListRow = (props) => {\r\n    // console.log(props.user)\r\n    const category = props.category;\r\n    const notes = () => {\r\n        if (category.category_notes === null) {\r\n            return (\r\n                <td>-</td>\r\n            )\r\n        } else {\r\n            return (\r\n                <td>{category.category_notes}</td>\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <tr >\r\n\r\n            <th>\r\n                {category.category_name}\r\n            </th>\r\n\r\n\r\n            {notes()}\r\n\r\n\r\n            <td className=\"\">\r\n                <div className=\"dropdown\">\r\n                    <a className=\"btn btn-sm btn-icon-only text-dark\" href=\"#\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                        <i className=\"fas fa-ellipsis-h\"></i>\r\n                    </a>\r\n                    <div className=\"dropdown-menu dropdown-menu-right dropdown-menu-arrow\">\r\n                        <Link to={'editCategory/' + category.id}\r\n                            state={{ category: category }}\r\n                            className=\"text-primary dropdown-item editIcon\" >Edit</Link>\r\n\r\n                        <button onClick={() => props.getDeleteCategoryId(category.id)} className=\"dropdown-item text-danger\">Delete</button>\r\n\r\n                    </div>\r\n                </div>\r\n            </td>\r\n        </tr>\r\n    );\r\n}\r\n\r\nexport default CategoryListRow;","C:\\xampp\\htdocs\\xerographics\\client\\src\\components\\branches\\Branches.js",["325"],"C:\\xampp\\htdocs\\xerographics\\client\\src\\components\\branches\\BranchDetails.js",["326","327"],"import { Link, useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useEffect, useState } from 'react';\r\nimport api from \"../../api/api\";\r\nimport Alert from \"../alerts/alert\";\r\nimport LinearProgressLoad from \"../alerts/LinearProgress\";\r\n\r\n\r\nfunction BranchDetails(props) {\r\n    const location = useLocation()\r\n    const branch = location.state.branch;\r\n    // console.log(user)\r\n\r\n    const navigate = useNavigate();\r\n\r\n\r\n    //alert state\r\n    const [open, setOpen] = useState(false);\r\n    const [loadingProgress, setLoadingProgress] = useState(false);\r\n\r\n    //dialog state\r\n\r\n    const [alertType, setAlertType] = useState(\"\");\r\n    const [alertMessage, setAlertMessage] = useState(\"\");\r\n\r\n    const handleAlertClose = () => {\r\n        setOpen(false);\r\n        setAlertMessage('')\r\n        setAlertType('')\r\n    };\r\n\r\n\r\n    const [branch_name, setBranchName] = useState(branch.branch_name);\r\n    const [phone, setPhone] = useState(branch.phone);\r\n    const [email, setEmail] = useState(branch.email);\r\n    const [address, setAddress] = useState(branch.address);\r\n\r\n\r\n    const updateBranch = (e) => {\r\n        // console.log(\"sjsjs\")\r\n        e.preventDefault()\r\n        if (branch_name === \"\" || phone === \"\" || email === \"\") {\r\n            setOpen(true);\r\n            setAlertMessage('All fields are mandatory except address')\r\n            setAlertType('error')\r\n        } else {\r\n            setLoadingProgress(true)\r\n\r\n            const state = {\r\n                ebranch_name: branch_name,\r\n                ebranch_phone: phone,\r\n                ebranch_email: email,\r\n                ebranch_id: branch.id,\r\n                ebranch_address: address\r\n            }\r\n            AddBranchHandler(state)\r\n            setBranchName(branch_name) // clear form fields \r\n            setPhone(phone) // clear form fields \r\n            setEmail(email) // clear form fields \r\n            setAddress(address) // clear form fields \r\n\r\n\r\n        }\r\n    }\r\n\r\n    const AddBranchHandler = (state) => {\r\n        console.log(state)\r\n\r\n        api.put('/updateBranch'\r\n            , state\r\n        )\r\n            .then(function (response) {\r\n                setLoadingProgress(false)\r\n\r\n                // console.log(response.data)\r\n                if (response.data.error == false) {\r\n\r\n                    // console.log(response.data.users)\r\n                    // return response.data.users;\r\n                    setAlertType('success')\r\n                    setAlertMessage(response.data.message)\r\n                    setOpen(true)\r\n                    setTimeout(() => { navigate('/branches'); }, 1000)\r\n\r\n                } else {\r\n                    // console.log(response.data.message)\r\n                    // return [];\r\n                    setAlertType('error')\r\n                    setAlertMessage(response.data.message)\r\n                    setOpen(true)\r\n                }\r\n\r\n            })\r\n            .catch(function (error) {\r\n                setLoadingProgress(false)\r\n\r\n                console.log(error);\r\n                setAlertType('error')\r\n                setAlertMessage(\"Error 500: Internal server error\")\r\n                setOpen(true)\r\n            });\r\n    }\r\n    const loading = () => {\r\n        if (loadingProgress) {\r\n            return (\r\n                <div className=\"mb-3\">\r\n                    <LinearProgressLoad />\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"\">\r\n                <div className=\"header bg-primary pb-6\">\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"header-body\">\r\n                            <div className=\"row align-items-center py-4\">\r\n                                <div className=\"col-lg-6 col-7\">\r\n                                    <nav aria-label=\"breadcrumb\" className=\"d-none d-md-inline-block ml-md-4\">\r\n                                        <ol className=\"breadcrumb breadcrumb-links breadcrumb-dark\">\r\n                                            <li className=\"breadcrumb-item\"><Link to={\"/\"}><i className=\"fas fa-home\"></i></Link></li>\r\n                                            <li className=\"breadcrumb-item active\" aria-current=\"page\"><Link to={'/branches'}>Branches</Link></li>\r\n                                            <li className=\"breadcrumb-item active\" aria-current=\"page\">Edit Branch Details</li>\r\n                                        </ol>\r\n                                    </nav>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            <div className=\"container-fluid mt--6\">\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <div className=\"card\">\r\n                            <div className=\"container-fluid mt-5\">\r\n                                {loading()}\r\n                                <form onSubmit={updateBranch}>\r\n\r\n\r\n                                    <div className=\"row\">\r\n\r\n\r\n                                        <div className=\"col-md-12\">\r\n                                            <div className=\"form-group\">\r\n                                                <label >Branch Name <span className='text-danger'>*</span></label>\r\n                                                <input value={branch_name} onChange={(e) => setBranchName(e.target.value)} type=\"text\" className=\"form-control\" placeholder=\"Ex: Area 4 Branch\" required />\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"col-md-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label >Branch Phone <span className='text-danger'>*</span></label>\r\n                                                <input value={phone} onChange={(e) => setPhone(e.target.value)} type=\"tel\" className=\"form-control\" placeholder=\"Ex: +265882992942\" required />\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"col-md-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label >Branch Email <span className='text-danger'>*</span></label>\r\n                                                <input value={email} onChange={(e) => setEmail(e.target.value)} type=\"email\" className=\"form-control\" placeholder=\"Ex: email@example.com\" required />\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"col-md-12\">\r\n                                            <div className=\"form-group\">\r\n                                                <label >Branch Address</label>\r\n                                                <textarea value={address} onChange={(e) => setAddress(e.target.value)} className=\"form-control\" placeholder=\"Ex: PO Box 232, Lilongwe, Malawi\"  ></textarea>\r\n                                            </div>\r\n                                        </div>\r\n\r\n\r\n                                    </div>\r\n\r\n\r\n                                    <div className=\"modal-footer\">\r\n                                        <button type=\"submit\" id=\"btn_add\" className=\"btn btn-primary\">Save</button>\r\n                                    </div>\r\n\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <Alert openAlert={open} alertMessage={alertMessage} alertType={alertType} handleAlertClose={handleAlertClose} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BranchDetails;","C:\\xampp\\htdocs\\xerographics\\client\\src\\components\\branches\\AddBranch.js",["328","329","330"],"C:\\xampp\\htdocs\\xerographics\\client\\src\\components\\branches\\BranchListRow.js",["331"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst BranchListRow = (props) => {\r\n    // console.log(props.user)\r\n    const branch = props.branch;\r\n    const address = () => {\r\n        if (branch.address === null) {\r\n            return (\r\n                <td>-</td>\r\n            )\r\n        } else {\r\n            return (\r\n                <td>{branch.address}</td>\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <tr >\r\n\r\n            <th>\r\n                {branch.branch_name}\r\n            </th>\r\n            <th>\r\n                {branch.phone}\r\n            </th>\r\n            <th>\r\n                {branch.email}\r\n            </th>\r\n\r\n\r\n            {address()}\r\n\r\n\r\n            <td className=\"\">\r\n                <div className=\"dropdown\">\r\n                    <a className=\"btn btn-sm btn-icon-only text-dark\" href=\"#\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                        <i className=\"fas fa-ellipsis-h\"></i>\r\n                    </a>\r\n                    <div className=\"dropdown-menu dropdown-menu-right dropdown-menu-arrow\">\r\n                        <Link to={'editBranch/' + branch.id}\r\n                            state={{ branch: branch }}\r\n                            className=\"text-primary dropdown-item editIcon\" >Edit</Link>\r\n\r\n                        <button onClick={() => props.getDeleteBranchId(branch.id)} className=\"dropdown-item text-danger\">Delete</button>\r\n\r\n                    </div>\r\n                </div>\r\n            </td>\r\n        </tr>\r\n    );\r\n}\r\n\r\nexport default BranchListRow;","C:\\xampp\\htdocs\\xerographics\\client\\src\\components\\incl\\SideBar.js",["332","333","334","335","336"],"C:\\xampp\\htdocs\\xerographics\\client\\src\\components\\incl\\TopBar.js",["337","338","339"],"C:\\xampp\\htdocs\\xerographics\\client\\src\\components\\products\\Products.js",[],"C:\\xampp\\htdocs\\xerographics\\client\\src\\components\\products\\ProductDetails.js",["340","341"],"import { Link, useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useEffect, useState } from 'react';\r\nimport api from \"../../api/api\";\r\nimport LinearProgressLoad from \"../alerts/LinearProgress\";\r\nimport Alert from \"../alerts/alert\";\r\nimport Compressor from 'compressorjs';\r\nimport BaseUrl from '../../api/baseUrl';\r\nimport Card from '@mui/material/Card';\r\nimport CardMedia from '@mui/material/CardMedia';\r\n\r\nfunction ProductDetails(props) {\r\n    const location = useLocation()\r\n    const product = location.state.product;\r\n    // console.log(user)\r\n\r\n    const navigate = useNavigate();\r\n\r\n\r\n    //alert state\r\n    const [open, setOpen] = useState(false);\r\n    //dialog state\r\n\r\n    const [alertType, setAlertType] = useState(\"\");\r\n    const [alertMessage, setAlertMessage] = useState(\"\");\r\n\r\n    const [loadingProgress, setLoadingProgress] = useState(false);\r\n\r\n\r\n\r\n    const handleAlertClose = () => {\r\n        setOpen(false);\r\n        setAlertMessage('')\r\n        setAlertType('')\r\n    };\r\n\r\n\r\n    const [branches, setBranches] = useState([])\r\n    const [units, setUnits] = useState([])\r\n    const [brands, setBrands] = useState([])\r\n    const [categories, setCategories] = useState([])\r\n\r\n    const [category_id, setProductCategoryId] = useState(product.category_id)\r\n    const [brand_id, setProductBrandId] = useState(product.brand_id)\r\n    const [branch_id, setProductBranchId] = useState(product.branch_id)\r\n    const [unit_id, setProductUnitId] = useState(product.unit_id)\r\n\r\n    const [product_code, setProductCode] = useState(product.product_code);\r\n    const [product_name, setProductName] = useState(product.product_name);\r\n    const [product_qty, setProductQty] = useState(product.product_qty);\r\n    const [product_price, setProductPrice] = useState(product.product_price);\r\n    const [product_notes, setProductNotes] = useState(product.product_notes);\r\n    const [product_serial, setProductSerial] = useState(product.product_serial);\r\n    const [selectedFile, setSelectedFile] = useState(null);\r\n\r\n\r\n\r\n    const updateProduct = (e) => {\r\n        // console.log(\"sjsjs\")\r\n        e.preventDefault()\r\n        if (category_id === \"\" || brand_id === \"\" || branch_id === \"\" || unit_id === \"\" || product_code === \"\" || product_name === \"\" || product_qty === \"\" || product_price === \"\") {\r\n            setOpen(true);\r\n            setAlertMessage('Marked fields are mandatory')\r\n            setAlertType('error')\r\n        } else {\r\n\r\n            setLoadingProgress(true)\r\n            const data = new FormData()\r\n            data.append('eproduct_pic', selectedFile)\r\n            data.append('ecategory_id', category_id)\r\n            data.append('eunit_id', unit_id)\r\n            data.append('ebrand_id', brand_id)\r\n            data.append('eproduct_code', product_code)\r\n            data.append('eproduct_name', product_name)\r\n            data.append('eproduct_qty', product_qty)\r\n            data.append('eproduct_price', product_price)\r\n            data.append('eproduct_notes', product_notes)\r\n            data.append('eproduct_serial', product_serial)\r\n            data.append('ebranch_id', branch_id)\r\n            data.append('eproduct_id', product.id)\r\n            data.append('_method', 'put')\r\n\r\n            UpdateProductHandler(data)\r\n            setProductCategoryId(category_id)\r\n            setProductBrandId(brand_id)\r\n            setProductBranchId(branch_id)\r\n\r\n            setProductUnitId(unit_id)\r\n            setProductCode(product_code)\r\n            setProductName(product_name)\r\n            setProductQty(product_qty);\r\n            setProductPrice(product_price);\r\n            setProductNotes(product_notes);\r\n            setProductSerial(product_serial);\r\n        }\r\n    }\r\n\r\n    const UpdateProductHandler = (state) => {\r\n        console.log(state)\r\n\r\n        api.post('/updateProduct'\r\n            , state, {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                \"Content-Type\": \"multipart/form-data\"\r\n\r\n            }\r\n        }\r\n        )\r\n            .then(function (response) {\r\n                console.log(response.data)\r\n                if (response.data.error == false) {\r\n\r\n                    // console.log(response.data.users)\r\n                    // return response.data.users;\r\n                    setAlertType('success')\r\n                    setAlertMessage(response.data.message)\r\n                    setOpen(true)\r\n                    setTimeout(() => { navigate('/products'); }, 1000)\r\n\r\n                } else {\r\n                    // console.log(response.data.message)\r\n                    // return [];\r\n                    setAlertType('error')\r\n                    setAlertMessage(response.data.message)\r\n                    setOpen(true)\r\n                }\r\n\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n                setAlertType('error')\r\n                setAlertMessage(\"Error 500: Internal server error\")\r\n                setOpen(true)\r\n            });\r\n    }\r\n\r\n    //compress the file\r\n    const handleCompressedUpload = (e) => {\r\n        const image = e.target.files[0];\r\n        setSelectedFile(e.target.files[0])\r\n        new Compressor(image, {\r\n            quality: 0.6, // 0.6 can also be used, but its not recommended to go below.\r\n            success: (compressedResult) => {\r\n                // compressedResult has the compressed file.\r\n                // Use the compressed file to upload the images to your server.        \r\n                // setCompressedFile(res)\r\n                // console.log(image)\r\n                // console.log(compressedResult)\r\n                // setSelectedFile(compressedResult)\r\n            },\r\n        });\r\n    };\r\n\r\n\r\n    // retrieve data\r\n    const retrieveData = () => {\r\n        api.get('/fetchAllBranches'\r\n\r\n        )\r\n            .then(function (response) {\r\n                // console.log(response.data)\r\n                if (response.data.error == false) {\r\n\r\n                    // console.log(response.data.users)\r\n                    setBranches(response.data.branches)\r\n                    setBrands(response.data.brands)\r\n                    setUnits(response.data.units)\r\n                    setCategories(response.data.categories)\r\n                    // return response.data.users;\r\n\r\n                } else {\r\n                    // console.log(\"sjs\")\r\n                    // return [];\r\n                    setAlertType('error')\r\n                    setAlertMessage(response.data.message)\r\n                    setOpen(true)\r\n\r\n                }\r\n\r\n            })\r\n            .catch(function (myJson) {\r\n                // console.log(myJson);\r\n                setAlertType('error')\r\n                setAlertMessage('Error 500: Internal server error')\r\n                setOpen(true)\r\n            });\r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        retrieveData();\r\n    }, [])\r\n\r\n    const renderBranchList = branches.map((branch) => {\r\n        return (\r\n            <option key={branch.id} value={branch.id} >{branch.branch_name}</option>\r\n        );\r\n    })\r\n\r\n    const renderBrandsList = brands.map((brand_) => {\r\n        return (\r\n            <option key={brand_.id} value={brand_.id} >{brand_.brand_name}</option>\r\n        );\r\n    })\r\n\r\n    const renderUnitsList = units.map((unit) => {\r\n        return (\r\n            <option key={unit.id} value={unit.id} >{unit.unit_name} - {unit.unit_symbol}</option>\r\n        );\r\n    })\r\n\r\n    const renderCategoriesList = categories.map((category) => {\r\n        return (\r\n            <option key={category.id} value={category.id} >{category.category_name}</option>\r\n        );\r\n    })\r\n\r\n    const loading = () => {\r\n        if (loadingProgress) {\r\n            return (\r\n                <div className=\"mb-3\">\r\n                    <LinearProgressLoad />\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"\">\r\n                <div className=\"header bg-primary pb-6\">\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"header-body\">\r\n                            <div className=\"row align-items-center py-4\">\r\n                                <div className=\"col-lg-6 col-7\">\r\n                                    <nav aria-label=\"breadcrumb\" className=\"d-none d-md-inline-block ml-md-4\">\r\n                                        <ol className=\"breadcrumb breadcrumb-links breadcrumb-dark\">\r\n                                            <li className=\"breadcrumb-item\"><Link to={\"/\"}><i className=\"fas fa-home\"></i></Link></li>\r\n                                            <li className=\"breadcrumb-item active\" aria-current=\"page\"><Link to={'/products'}>Products</Link></li>\r\n                                            <li className=\"breadcrumb-item active\" aria-current=\"page\">Edit Product Details</li>\r\n                                        </ol>\r\n                                    </nav>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            <div className=\"container-fluid mt--6\">\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <div className=\"card\">\r\n                            <div className=\"container-fluid mt-5\">\r\n                                {loading()}\r\n                                <div className=\"col-md-6 rounded-circle mb-4\">\r\n\r\n\r\n\r\n                                    <Card sx={{ maxWidth: 345 }}>\r\n                                        <CardMedia\r\n                                            component=\"img\"\r\n                                            height=\"140\"\r\n                                            image={`${BaseUrl}/storage/product_images/${product.img_url}`}\r\n                                            alt={product_name}\r\n                                        />\r\n\r\n                                    </Card>\r\n                                </div>\r\n\r\n\r\n                                <form onSubmit={updateProduct}>\r\n\r\n\r\n                                    <div className=\"row\">\r\n\r\n                                        <div className=\"col-md-12\">\r\n                                            <div className=\"form-group\">\r\n                                                <label >Product Picture</label>\r\n                                                <input onChange={(event) => handleCompressedUpload(event)} accept=\".png, .jpg, .jpeg\" type=\"file\" className=\"form-control\" />\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"col-md-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label>Product Name <span className='text-danger'>*</span></label>\r\n                                                <input value={product_name} onChange={(e) => setProductName(e.target.value)} type=\"text\" className=\"form-control\" placeholder=\"Ex: i5 HP\" required />\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\" col-md-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label >Product Brand <span className='text-danger'>*</span></label>\r\n                                                <select value={brand_id} onChange={(e) => setProductBrandId(e.target.value)} className=\"form-control\" name=\"ubranch\" id=\"ubranch\" required>\r\n                                                    {renderBrandsList}\r\n                                                </select>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\" col-md-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label >Product Branch <span className='text-danger'>*</span></label>\r\n                                                <select value={branch_id} onChange={(e) => setProductBranchId(e.target.value)} className=\"form-control\" name=\"ubranch\" id=\"ubranch\" required>\r\n                                                    {renderBranchList}\r\n                                                </select>\r\n                                            </div>\r\n                                        </div>\r\n\r\n\r\n                                        <div className=\"col-md-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label >Product Unit <span className='text-danger'>*</span></label>\r\n                                                <select value={unit_id} onChange={(e) => setProductUnitId(e.target.value)} className=\"form-control\" name=\"ubranch\" id=\"ubranch\" required>\r\n                                                    {renderUnitsList}\r\n                                                </select>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\" col-md-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label >Product Category <span className='text-danger'>*</span></label>\r\n                                                <select value={category_id} onChange={(e) => setProductCategoryId(e.target.value)} className=\"form-control\" name=\"ubranch\" id=\"ubranch\" required>\r\n                                                    {renderCategoriesList}\r\n                                                </select>\r\n                                            </div>\r\n                                        </div>\r\n\r\n\r\n                                        <div className=\"col-md-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label >Product Code <span className='text-danger'>*</span></label>\r\n                                                <input value={product_code} onChange={(e) => setProductCode(e.target.value)} type=\"text\" className=\"form-control\" placeholder=\"Ex: 1234567890\" required />\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"col-md-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label >Product Serial</label>\r\n                                                <input value={product_serial} onChange={(e) => setProductSerial(e.target.value)} type=\"text\" className=\"form-control\" placeholder=\"Ex: AB4H3W3E3RU355\" />\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"col-md-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label >Product Quantity <span className='text-danger'>*</span></label>\r\n                                                <input value={product_qty} onChange={(e) => setProductQty(e.target.value)} onKeyPress={(event) => {\r\n                                                    if (!/[0-9]/.test(event.key)) {\r\n                                                        event.preventDefault();\r\n                                                    }\r\n                                                }} type=\"text\" className=\"form-control\" placeholder=\"Ex: 55\" required />\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"col-md-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label >Product Price (MWK) <span className='text-danger'>*</span></label>\r\n                                                <input value={product_price} onChange={(e) => setProductPrice(e.target.value)} onKeyPress={(event) => {\r\n                                                    if (!/[0-9]/.test(event.key)) {\r\n                                                        event.preventDefault();\r\n                                                    }\r\n                                                }} type=\"text\" className=\"form-control\" placeholder=\"Ex: 55000\" required />\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"col-md-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label >Product Notes</label>\r\n                                                <textarea value={product_notes} onChange={(e) => setProductNotes(e.target.value)} className=\"form-control\" placeholder=\"Ex: limited product\"></textarea>\r\n                                            </div>\r\n                                        </div>\r\n\r\n\r\n                                    </div>\r\n\r\n                                    <div className=\"modal-footer\">\r\n                                        <button type=\"submit\" id=\"btn_add\" className=\"btn btn-primary\">Save</button>\r\n                                    </div>\r\n\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <Alert openAlert={open} alertMessage={alertMessage} alertType={alertType} handleAlertClose={handleAlertClose} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProductDetails;","C:\\xampp\\htdocs\\xerographics\\client\\src\\components\\products\\AddProduct.js",[],"C:\\xampp\\htdocs\\xerographics\\client\\src\\components\\products\\ProductListRow.js",["342","343","344"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport BaseUrl from '../../api/baseUrl';\r\n\r\n\r\nconst ProductListRow = (props) => {\r\n    // console.log(props.user)\r\n    const product = props.product;\r\n\r\n    return (\r\n        <tr >\r\n            <th >\r\n                <div className=\"media align-items-center\">\r\n                    <a href=\"#\" className=\"avatar rounded-circle mr-3\">\r\n                        <img height={'100%'} width={'100%'} alt=\"Image placeholder\" src={`${BaseUrl}/storage/product_images/${product.img_url}`} />\r\n                    </a>\r\n                    <div className=\"media-body\">\r\n                        <span className=\"name mb-0 text-sm\"> {product.product_name}</span>\r\n                    </div>\r\n                </div>\r\n            </th>\r\n\r\n            <td>\r\n                {product.branch_name}\r\n            </td>\r\n\r\n            <td>\r\n                {product.category_name}\r\n            </td>\r\n\r\n            <td>\r\n                {product.unit_name} -\r\n                {product.unit_symbol}\r\n\r\n            </td>\r\n\r\n            <td>\r\n                {product.product_price}\r\n            </td>\r\n\r\n            <td>\r\n                {product.product_qty}\r\n            </td>\r\n\r\n            <td className=\"\">\r\n                <div className=\"dropdown\">\r\n                    <a className=\"btn btn-sm btn-icon-only text-dark\" href=\"#\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                        <i className=\"fas fa-ellipsis-h\"></i>\r\n                    </a>\r\n                    <div className=\"dropdown-menu dropdown-menu-right dropdown-menu-arrow\">\r\n                        <Link to={'editProduct/' + product.id}\r\n                            state={{ product: product }}\r\n                            className=\"text-primary dropdown-item editIcon\" >Edit</Link>\r\n\r\n                        <button onClick={() => props.getDeleteProductId(product.id)} className=\"dropdown-item text-danger\">Delete</button>\r\n\r\n                    </div>\r\n                </div>\r\n            </td>\r\n        </tr>\r\n    );\r\n}\r\n\r\nexport default ProductListRow;","C:\\xampp\\htdocs\\xerographics\\client\\src\\api\\baseUrl.js",[],"C:\\xampp\\htdocs\\xerographics\\client\\src\\components\\alerts\\LinearProgress.js",[],"C:\\xampp\\htdocs\\xerographics\\client\\src\\components\\brands\\AddBrand.js",["345","346","347"],"import { Link, useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useEffect, useState } from 'react';\r\nimport api from \"../../api/api\";\r\nimport Alert from \"../alerts/alert\";\r\nimport LinearProgressLoad from \"../alerts/LinearProgress\";\r\n\r\n\r\n\r\nfunction AddBrand(props) {\r\n    // console.log(user)\r\n\r\n    const navigate = useNavigate();\r\n\r\n\r\n    //alert state\r\n    const [open, setOpen] = useState(false);\r\n    //dialog state\r\n\r\n    const [alertType, setAlertType] = useState(\"\");\r\n    const [alertMessage, setAlertMessage] = useState(\"\");\r\n    const [loadingProgress, setLoadingProgress] = useState(false);\r\n\r\n\r\n    const handleAlertClose = () => {\r\n        setOpen(false);\r\n        setAlertMessage('')\r\n        setAlertType('')\r\n    };\r\n\r\n\r\n    const [brand_name, setBrandName] = useState('');\r\n\r\n    const addBrand = (e) => {\r\n        // console.log(\"sjsjs\")\r\n        e.preventDefault()\r\n        if (brand_name === \"\") {\r\n            setOpen(true);\r\n            setAlertMessage('All fields are mandatory except address')\r\n            setAlertType('error')\r\n        } else {\r\n            setLoadingProgress(true)\r\n\r\n            const state = {\r\n                brand_name: brand_name,\r\n            }\r\n            addBrandHandler(state)\r\n            setBrandName('') // clear form fields \r\n\r\n\r\n        }\r\n    }\r\n\r\n    const addBrandHandler = (state) => {\r\n        console.log(state)\r\n\r\n        api.post('/saveBrand'\r\n            , state\r\n        )\r\n            .then(function (response) {\r\n                setLoadingProgress(false)\r\n\r\n                // console.log(response.data)\r\n                if (response.data.error == false) {\r\n\r\n                    // console.log(response.data.users)\r\n                    // return response.data.users;\r\n                    setAlertType('success')\r\n                    setAlertMessage(response.data.message)\r\n                    setOpen(true)\r\n                    setTimeout(() => { navigate('/products/product_brands'); }, 1000)\r\n\r\n                } else {\r\n                    // console.log(response.data.message)\r\n                    // return [];\r\n                    setAlertType('error')\r\n                    setAlertMessage(response.data.message)\r\n                    setOpen(true)\r\n                }\r\n\r\n            })\r\n            .catch(function (error) {\r\n                setLoadingProgress(false)\r\n\r\n                console.log(error);\r\n                setAlertType('error')\r\n                setAlertMessage(\"Error 500: Internal server error\")\r\n                setOpen(true)\r\n            });\r\n    }\r\n\r\n    const loading = () => {\r\n        if (loadingProgress) {\r\n            return (\r\n                <div className=\"mb-3\">\r\n                    <LinearProgressLoad />\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"\">\r\n                <div className=\"header bg-primary pb-6\">\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"header-body\">\r\n                            <div className=\"row align-items-center py-4\">\r\n                                <div className=\"col-lg-6 col-7\">\r\n                                    <nav aria-label=\"breadcrumb\" className=\"d-none d-md-inline-block ml-md-4\">\r\n                                        <ol className=\"breadcrumb breadcrumb-links breadcrumb-dark\">\r\n                                            <li className=\"breadcrumb-item\"><Link to={\"/\"}><i className=\"fas fa-home\"></i></Link></li>\r\n                                            <li className=\"breadcrumb-item active\" aria-current=\"page\"><Link to={'products/product_brands'}>Product Brands</Link></li>\r\n                                            <li className=\"breadcrumb-item active\" aria-current=\"page\">Add Brand</li>\r\n                                        </ol>\r\n                                    </nav>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            <div className=\"container-fluid mt--6\">\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <div className=\"card\">\r\n                            <div className=\"container-fluid mt-5\">\r\n                                {loading()}\r\n                                <form onSubmit={addBrand}>\r\n\r\n\r\n                                    <div className=\"row\">\r\n\r\n\r\n                                        <div className=\"col-md-12\">\r\n                                            <div className=\"form-group\">\r\n                                                <label >Brand Name</label>\r\n                                                <input value={brand_name} onChange={(e) => setBrandName(e.target.value)} type=\"text\" className=\"form-control\" placeholder=\"Ex: Brand Name\" required />\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n                                    <div className=\"modal-footer\">\r\n                                        <button type=\"submit\" id=\"btn_add\" className=\"btn btn-primary\">Save</button>\r\n                                    </div>\r\n\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <Alert openAlert={open} alertMessage={alertMessage} alertType={alertType} handleAlertClose={handleAlertClose} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AddBrand;","C:\\xampp\\htdocs\\xerographics\\client\\src\\components\\brands\\Brands.js",[],"C:\\xampp\\htdocs\\xerographics\\client\\src\\components\\brands\\BrandListRow.js",["348"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst BrandListRow = (props) => {\r\n    // console.log(props.user)\r\n    const brand = props.brand;\r\n\r\n\r\n    return (\r\n        <tr >\r\n\r\n            <th>\r\n                {brand.brand_name}\r\n            </th>\r\n\r\n            <td className=\"\">\r\n                <div className=\"dropdown\">\r\n                    <a className=\"btn btn-sm btn-icon-only text-dark\" href=\"#\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                        <i className=\"fas fa-ellipsis-h\"></i>\r\n                    </a>\r\n                    <div className=\"dropdown-menu dropdown-menu-right dropdown-menu-arrow\">\r\n                        <Link to={'/products/product_brands/editProductBrand/' + brand.id}\r\n                            state={{ brand: brand }}\r\n                            className=\"text-primary dropdown-item editIcon\" >Edit</Link>\r\n\r\n                        <button onClick={() => props.getDeleteBrandId(brand.id)} className=\"dropdown-item text-danger\">Delete</button>\r\n\r\n                    </div>\r\n                </div>\r\n            </td>\r\n        </tr>\r\n    );\r\n}\r\n\r\nexport default BrandListRow;","C:\\xampp\\htdocs\\xerographics\\client\\src\\components\\brands\\BrandDetails.js",["349","350"],"C:\\xampp\\htdocs\\xerographics\\client\\src\\components\\pos\\Pos.js",["351","352","353","354","355","356"],"import {Link, useNavigate, useLocation} from \"react-router-dom\";\r\nimport {useEffect, useState} from 'react';\r\n\r\nimport React from \"react\";\r\nimport api from \"../../api/api\";\r\nimport Alert from \"../alerts/alert\";\r\nimport LinearProgressLoad from \"../alerts/LinearProgress\";\r\n\r\nimport {styled} from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport Paper from '@mui/material/Paper';\r\nimport Grid from '@mui/material/Grid';\r\n\r\nimport Tabs from '@mui/material/Tabs';\r\nimport Tab from '@mui/material/Tab';\r\n// import Grid from \"@material-ui/core/Grid\";\r\n\r\n\r\nimport ProductsLeft from \"./ProductsLeft\";\r\n\r\nimport ProductsRight from \"./ProductsRight\";\r\n\r\n\r\nfunction Pos() {\r\n\r\n    const navigate = useNavigate();\r\n\r\n    //user state\r\n    const [products, setProducts] = useState([])\r\n    const [customers, setCustomers] = useState([])\r\n    const [product_categories, setProductsCategories] = useState([])\r\n    const [cartItems, setCartItem] = useState([])\r\n    const [productCartId, setCartProductId] = React.useState(-1);\r\n    const [tax_amount, setTaxAmount] = React.useState(-1);\r\n\r\n    let products_url = 'fetchAllProducts';\r\n\r\n\r\n    //alert state\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const [loadingProgress, setLoadingProgress] = useState(false);\r\n    const [value, setValue] = useState(-1);\r\n    const [alertType, setAlertType] = useState(\"\");\r\n    const [alertMessage, setAlertMessage] = useState(\"\");\r\n\r\n\r\n    const handleChangeTab = (event, newValue) => {\r\n        if (newValue === -1) {\r\n            products_url = 'fetchAllProducts'\r\n        } else {\r\n            products_url = 'fetchAllPosProducts/' + newValue\r\n        }\r\n\r\n        setValue(newValue)\r\n        retrieveProducts()\r\n    };\r\n\r\n    //handle click and to cart\r\n    const handleClickAddCart = (id, qty) => {\r\n        setCartProductId(id)\r\n        console.log(\"added product: \" + id + \" to cart | qty\" + qty)\r\n        const productSelected = products.filter((product) => {\r\n            return product.id === id\r\n        })\r\n\r\n        console.log(productSelected)\r\n\r\n        // console.log(productSelected)\r\n        //check if product is already added, if it does, delete and readd with new data\r\n        if (cartItems.length > 0) {\r\n\r\n            for (var i = 0; i < cartItems.length; i++) {\r\n                if (cartItems[i].product_id === productSelected[0].id) {\r\n\r\n\r\n                    let newQty = 0;\r\n                    if (qty === -1) {\r\n                        console.log((parseInt(cartItems[i].qty) + 1) + \" || \" + parseInt(productSelected[0].product_qty))\r\n                        if ((parseInt(cartItems[i].qty) + 1) <= parseInt(productSelected[0].product_qty)) {\r\n                            newQty = (parseInt(cartItems[i].qty)) + 1;\r\n                        } else {\r\n                            newQty = cartItems[i].qty;\r\n                        }\r\n\r\n                    } else {\r\n                        newQty = qty;\r\n                    }\r\n                    console.log(newQty)\r\n\r\n                    const cartCopy = cartItems.splice(i, 1)//remove item\r\n                    setCartItem(cartCopy);\r\n\r\n                    //readd item\r\n                    const Item = {\r\n                        product_id: productSelected[0].id,\r\n                        product_name: productSelected[0].product_name,\r\n                        qty: newQty,\r\n                        product_code: productSelected[0].product_code,\r\n                        product_price: productSelected[0].product_price,\r\n                        stock_qty: productSelected[0].product_qty\r\n                    }\r\n                    setCartItem([...cartItems, Item]);\r\n\r\n                } else {\r\n                    //add item\r\n                    const Item = {\r\n                        product_id: productSelected[0].id,\r\n                        product_name: productSelected[0].product_name,\r\n                        qty: 1,\r\n                        product_code: productSelected[0].product_code,\r\n                        product_price: productSelected[0].product_price,\r\n                        stock_qty: productSelected[0].product_qty\r\n                    }\r\n                    setCartItem([...cartItems, Item]);\r\n                }\r\n            }\r\n        } else {\r\n            const Item = {\r\n                product_id: productSelected[0].id,\r\n                product_name: productSelected[0].product_name,\r\n                qty: 1,\r\n                product_code: productSelected[0].product_code,\r\n                product_price: productSelected[0].product_price,\r\n                stock_qty: productSelected[0].product_qty\r\n            }\r\n            setCartItem([...cartItems, Item]);\r\n        }\r\n\r\n\r\n    };\r\n    //remove product from cart\r\n    const handleDeleteFromCart = (id) => {\r\n\r\n        const cartCopy = cartItems.filter((cartItem) => {\r\n            // console.log(cartItem.product_id + \" sjsj\")\r\n            return cartItem.product_id !== id\r\n        })\r\n        setCartItem(cartCopy);\r\n\r\n    }\r\n\r\n\r\n    const Item = styled(Paper)(({theme}) => ({\r\n        ...theme.typography.body2,\r\n        padding: theme.spacing(1),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n    }));\r\n\r\n\r\n    const handleAlertClose = () => {\r\n        setOpen(false);\r\n        setAlertMessage('')\r\n        setAlertType('')\r\n    };\r\n\r\n    // retrieve products\r\n    const retrieveProducts = () => {\r\n        setLoadingProgress(true)\r\n\r\n        api.get(products_url\r\n        )\r\n            .then(function (response) {\r\n                // console.log(response.data)\r\n                setLoadingProgress(false)\r\n\r\n                if (response.data.error === false) {\r\n\r\n                    // console.log(response.data.users)\r\n                    setProducts(response.data.products)\r\n\r\n                } else {\r\n                    // console.log(response.data.message)\r\n                    // return [];\r\n                    setProducts([])\r\n                    setAlertType('error')\r\n                    setAlertMessage(response.data.message)\r\n                    setOpen(true)\r\n                }\r\n\r\n            })\r\n            .catch(function (error) {\r\n                setLoadingProgress(false)\r\n\r\n                setAlertType('error')\r\n                setAlertMessage(\"Error 500: Internal server error\")\r\n                setOpen(true)\r\n            });\r\n    }\r\n\r\n    // retrieve products categories\r\n    const retrieveProductsCategories = () => {\r\n        setLoadingProgress(true)\r\n\r\n        api.get('/fetchAllCategories'\r\n\r\n        )\r\n            .then(function (response) {\r\n                if (response.data.error === false) {\r\n\r\n                    // console.log(response.data.users)\r\n                    setProductsCategories(response.data.categories)\r\n\r\n                } else {\r\n                    // console.log(response.data.message)\r\n                    // return [];\r\n                    setAlertType('error')\r\n                    setAlertMessage(response.data.message)\r\n                    setOpen(true)\r\n                }\r\n\r\n            })\r\n            .catch(function (error) {\r\n                setLoadingProgress(false)\r\n\r\n                setAlertType('error')\r\n                setAlertMessage(\"Error 500: Internal server error on categories\")\r\n                setOpen(true)\r\n            });\r\n    }\r\n\r\n    // retrieve customers\r\n    const retrieveCustomers = () => {\r\n\r\n        api.get('/fetchAllCustomers'\r\n\r\n        )\r\n            .then(function (response) {\r\n\r\n                if (response.data.error === false) {\r\n\r\n                    // console.log(response.data)\r\n                    setCustomers(response.data.customers)\r\n\r\n                } else {\r\n                    // console.log(response.data.message)\r\n                    // return [];\r\n                    setCustomers([])\r\n\r\n                }\r\n\r\n            })\r\n            .catch(function (error) {\r\n            });\r\n    }\r\n\r\n    //get tax\r\n    const retrieveTax = () => {\r\n\r\n        api.get('/fetchActiveTax'\r\n\r\n        )\r\n            .then(function (response) {\r\n\r\n                if (response.data.error === false) {\r\n\r\n                    setTaxAmount(response.data.tax.tax_amount)\r\n\r\n                } else {\r\n                    // console.log(response.data.message)\r\n                    // return [];\r\n                    setTaxAmount(-1)\r\n\r\n                }\r\n\r\n            })\r\n            .catch(function (error) {\r\n            });\r\n    }\r\n\r\n\r\n    const loading = () => {\r\n        if (loadingProgress) {\r\n            return (\r\n                <div className=\"mb-3\">\r\n                    <LinearProgressLoad/>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    const renderProductCategoryList = product_categories.map((product_category) => {\r\n        return (\r\n            <Tab key={product_category.id} value={product_category.id} label={product_category.category_name}/>\r\n        );\r\n    })\r\n\r\n    const handleCheckoutProducts = (data) => {\r\n        console.log('handleCheckoutProducts')\r\n        console.log(data)\r\n        setLoadingProgress(true)\r\n\r\n        api.post('/saveInvoice'\r\n            , data\r\n        )\r\n            .then(function (response) {\r\n                setLoadingProgress(false)\r\n                // console.log(response.data)\r\n                if (response.data.error == false) {\r\n\r\n                    // console.log(response.data.users)\r\n                    // return response.data.users;\r\n                    setAlertType('success')\r\n                    setAlertMessage(response.data.message)\r\n                    setOpen(true)\r\n                    // setTimeout(() => { navigate('/pos'); }, 1000)\r\n                    setCartItem([])\r\n                } else {\r\n                    // console.log(response.data.message)\r\n                    // return [];\r\n                    setAlertType('error')\r\n                    setAlertMessage(response.data.message)\r\n                    setOpen(true)\r\n                }\r\n\r\n            })\r\n            .catch(function (error) {\r\n                setLoadingProgress(false)\r\n                console.log(error);\r\n                setAlertType('error')\r\n                setAlertMessage(\"Error 500: Internal server error\")\r\n                setOpen(true)\r\n            });\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        retrieveTax()\r\n        retrieveProductsCategories();\r\n        retrieveCustomers()\r\n        retrieveProducts();\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"\">\r\n            <div className=\"header bg-primary pb-6\">\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"header-body\">\r\n                        <div className=\"row align-items-center py-4\">\r\n                            <div className=\"col-lg-6 col-7\">\r\n                                <nav aria-label=\"breadcrumb\" className=\"d-none d-md-inline-block ml-md-4\">\r\n                                    <ol className=\"breadcrumb breadcrumb-links breadcrumb-dark\">\r\n                                        <li className=\"breadcrumb-item\"><Link to={\"/\"}><i\r\n                                            className=\"fas fa-home\"></i></Link></li>\r\n                                        <li className=\"breadcrumb-item active\" aria-current=\"page\">POS</li>\r\n                                    </ol>\r\n                                </nav>\r\n                            </div>\r\n                            <div className=\"col-lg-6 col-5 text-right\">\r\n\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"container-fluid mt--6\">\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <div className=\"card\">\r\n                            {loading()}\r\n\r\n                            <div className=\"container-fluid mt-5\">\r\n\r\n                            </div>\r\n\r\n                            <Box sx={{flexGrow: 6}}>\r\n                                <Grid container spacing={2} columns={16}>\r\n\r\n\r\n                                    <Grid item xs={16} sm={16} md={10} lg={10}>\r\n                                        <Item>\r\n                                            <Box sx={{width: '100%'}}>\r\n                                                <Tabs\r\n                                                    value={value}\r\n                                                    onChange={handleChangeTab}\r\n                                                    textColor=\"primary\"\r\n                                                    indicatorColor=\"primary\"\r\n                                                    aria-label=\"primary tabs example\"\r\n\r\n                                                    variant=\"scrollable\"\r\n                                                    scrollButtons\r\n                                                    allowScrollButtonsMobile\r\n                                                    aria-label=\"scrollable force tabs example\"\r\n                                                >\r\n                                                    <Tab key=\"2S\" value={-1} label=\"All\"/>\r\n                                                    {renderProductCategoryList}\r\n                                                </Tabs>\r\n                                            </Box>\r\n\r\n                                            {/* <Search getSearchValue={handleSearch} /> */}\r\n\r\n                                            {/* {renderProductList} */}\r\n                                            <ProductsLeft products={products} addToCartProductId={handleClickAddCart}/>\r\n\r\n                                        </Item>\r\n                                    </Grid>\r\n\r\n                                    <Grid item xs={16} sm={16} md={6} lg={6}>\r\n                                        <ProductsRight tax_amount={tax_amount} retrieveCustomers={retrieveCustomers}\r\n                                                       checkoutProducts={handleCheckoutProducts} cartItems={cartItems}\r\n                                                       products={products} customers={customers}\r\n                                                       handleClickAddCart={handleClickAddCart}\r\n                                                       handleDeleteFromCart={handleDeleteFromCart}/>\r\n                                    </Grid>\r\n\r\n                                </Grid>\r\n\r\n\r\n                            </Box>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <Alert openAlert={open} alertMessage={alertMessage} alertType={alertType}\r\n                   handleAlertClose={handleAlertClose}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Pos;\r\n","C:\\xampp\\htdocs\\xerographics\\client\\src\\components\\pos\\TableCart.js",["357","358","359","360"],"import * as React from 'react';\r\nimport Paper from '@mui/material/Paper';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TablePagination from '@mui/material/TablePagination';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport Button from '@mui/material/Button';\r\nimport TextField from '@mui/material/TextField';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport RemoveIcon from '@mui/icons-material/Remove';\r\nimport { useRef } from 'react';\r\n\r\nconst columns = [\r\n    { id: 'item', label: 'Item' },\r\n    {\r\n        id: 'qty',\r\n        label: 'Qty',\r\n        align: 'right',\r\n    },\r\n\r\n    {\r\n        id: 'action',\r\n        label: 'Action',\r\n        align: 'right',\r\n    },\r\n];\r\n\r\n\r\nfunction TableCart(props) {\r\n\r\n    // console.log(props)\r\n\r\n    const cartItems = props.cartItems;\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(+event.target.value);\r\n        setPage(0);\r\n    };\r\n\r\n    const formatNumber = (number) => {\r\n        var nf = new Intl.NumberFormat();\r\n        var result = nf.format(number); // \"1,234,567,890\"\r\n        return result;\r\n    }\r\n\r\n    const pages = () => {\r\n        if (cartItems.length >= 10) {\r\n            return (\r\n                <TablePagination\r\n                    rowsPerPageOptions={[10, 25, 50, 100]}\r\n                    component=\"div\"\r\n                    count={cartItems.length}\r\n                    rowsPerPage={rowsPerPage}\r\n                    page={page}\r\n                    onPageChange={handleChangePage}\r\n                    onRowsPerPageChange={handleChangeRowsPerPage}\r\n                />\r\n            )\r\n        }\r\n    }\r\n\r\n    const handleQtyInput = (e, id) => {\r\n        // console.log(e.target.value)\r\n        // console.log(id)\r\n        props.handleClickAddCart(id, e.target.value)\r\n        // props.getSearchValue(e.target.value)\r\n    }\r\n\r\n\r\n    return (\r\n        <Paper sx={{ width: '100%', overflow: 'hidden' }}>\r\n            <TableContainer sx={{ maxHeight: 400, height: 400 }}>\r\n                <Table stickyHeader aria-label=\"sticky table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            {columns.map((column) => (\r\n                                <TableCell\r\n                                    key={column.id}\r\n                                    align={column.align}\r\n                                >\r\n                                    <strong>{column.label}</strong>\r\n                                </TableCell>\r\n                            ))}\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {cartItems\r\n                            .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                            .map((row) => {\r\n                                return (\r\n                                    <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.product_id}>\r\n                                        <TableCell >\r\n                                            {row.product_name} <br /> <small><i>MWK {formatNumber(row.product_price)}</i></small>\r\n                                        </TableCell>\r\n                                        <TableCell align='right'>\r\n\r\n                                            {/* {row.qty} () => props.handleClickAddCart(row.product_id) */}\r\n\r\n                                            {/* <IconButton aria-label=\"delete\" size=\"small\">\r\n                                                <RemoveIcon fontSize=\"inherit\" />\r\n                                            </IconButton>\r\n                                            <br /> */}\r\n                                            <TextField\r\n                                                // disabled\r\n                                                onChange={(e) => handleQtyInput(e, row.product_id)}\r\n                                                sx={{ width: '50%' }}\r\n                                                InputProps={{ inputProps: { min: 1, max: row.stock_qty, style: { textAlign: 'right' } } }}\r\n                                                defaultValue={row.qty}\r\n                                                id=\"outlined-number\"\r\n                                                type=\"number\"\r\n                                                variant='standard'\r\n                                                InputLabelProps={{\r\n                                                    shrink: true,\r\n                                                }}\r\n                                            />\r\n                                            {/* <br />\r\n                                            <IconButton aria-label=\"delete\" size=\"small\">\r\n                                                <AddIcon fontSize=\"inherit\" />\r\n                                            </IconButton> */}\r\n\r\n                                        </TableCell>\r\n                                        <TableCell align='right'>\r\n                                            <Button onClick={() => props.getDeleteProductIdFromCart(row.product_id)} variant=\"outlined\" startIcon={<DeleteIcon />} color=\"error\">\r\n                                                Del\r\n                                            </Button>\r\n                                        </TableCell>\r\n\r\n                                    </TableRow>\r\n                                );\r\n                            })}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n            {pages()}\r\n        </Paper>\r\n    );\r\n}\r\n\r\n\r\nexport default TableCart;\r\n","C:\\xampp\\htdocs\\xerographics\\client\\src\\components\\pos\\ProductCard.js",[],"C:\\xampp\\htdocs\\xerographics\\client\\src\\components\\pos\\Search.js",[],"C:\\xampp\\htdocs\\xerographics\\client\\src\\components\\pos\\ProductsLeft.js",["361"],"import ProductCard from './ProductCard'\r\nimport Grid from '@mui/material/Grid';\r\nimport Search from './Search';\r\nimport { useState } from 'react';\r\nimport React from \"react\";\r\nimport Alert from '@mui/material/Alert';\r\n\r\n\r\n\r\nfunction ProductsLeft(props) {\r\n    // const products = props.products;\r\n    // const search_results = props.search_results;\r\n\r\n    const [message, setMessage] = useState('')\r\n    const [products, setProducts] = useState(props.products)\r\n    const [search_results, setSearchResults] = useState([])\r\n\r\n\r\n    const handleSearch = (searchText) => {\r\n        if (searchText !== \"\") {\r\n            // const productsCopy = products.filter((product) => {\r\n            //     return Object.values(product)\r\n            //         .join(\" \")\r\n            //         .toLowerCase()\r\n            //         .includes(searchTerm.toLowerCase());\r\n            // });\r\n\r\n            const productsCopy = products.filter(\r\n                product => {\r\n                    return (\r\n                        product\r\n                            .product_name\r\n                            .toLowerCase()\r\n                            .includes(searchText.toLowerCase()) ||\r\n                        product\r\n                            .product_code\r\n                            .toLowerCase()\r\n                            .includes(searchText.toLowerCase())\r\n\r\n                    );\r\n                }\r\n            );\r\n\r\n            if (productsCopy.length === 0) {\r\n                setMessage(\"No products found matching your search!\")\r\n            }\r\n            setSearchResults(productsCopy);\r\n        } else {\r\n            setSearchResults(products);\r\n        }\r\n\r\n        // setSearchResults(searchText);\r\n    }\r\n\r\n    const error = () => {\r\n        if (message !== '') {\r\n            return (<Alert sx={{ width: '97%' }} variant=\"outlined\" severity=\"error\">{message}</Alert>)\r\n        }\r\n    }\r\n\r\n    if (search_results.length > 0) {\r\n        const renderProductList = search_results.map((product) => {\r\n            return (\r\n                <ProductCard addToCartProductId={props.addToCartProductId} key={`d${product.id}`} product={product} ></ProductCard>\r\n            );\r\n        })\r\n\r\n\r\n        return (\r\n            <div >\r\n                <Search getSearchValue={handleSearch} />\r\n                <Grid container style={{ maxHeight: 855, overflow: 'auto' }}>\r\n                    {renderProductList}\r\n                </Grid>\r\n            </div>\r\n        );\r\n    } else {\r\n        const renderProductList = products.map((product) => {\r\n            return (\r\n                <ProductCard addToCartProductId={props.addToCartProductId} key={`d${product.id}`} product={product} ></ProductCard>\r\n            );\r\n        })\r\n\r\n\r\n        return (\r\n            <div >\r\n                <Search getSearchValue={handleSearch} />\r\n                {error()}\r\n                <Grid container style={{ maxHeight: 888, overflow: 'auto' }}>\r\n                    {renderProductList}\r\n                </Grid>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default ProductsLeft;","C:\\xampp\\htdocs\\xerographics\\client\\src\\components\\customers\\AddCustomerModal.js",["362","363","364","365","366","367"],"import * as React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport TextField from '@mui/material/TextField';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport api from \"../../api/api\";\r\nimport Alert from \"../alerts/alert\";\r\nimport { useEffect, useState } from 'react';\r\n\r\n\r\n\r\nexport default function AddCustomerModal(props) {\r\n\r\n    // console.log(props)\r\n\r\n    //alert state\r\n    const [open, setOpen] = useState(false);\r\n    //dialog state\r\n\r\n    const [alertType, setAlertType] = useState(\"\");\r\n    const [alertMessage, setAlertMessage] = useState(\"\");\r\n\r\n    const handleAlertClose = () => {\r\n        setOpen(false);\r\n        setAlertMessage('')\r\n        setAlertType('')\r\n    };\r\n\r\n\r\n    const [customer_name, setName] = useState('');\r\n    const [customer_phone, setPhone] = useState('');\r\n    const [address, setAddress] = useState('');\r\n\r\n\r\n    const addCustomer = (e) => {\r\n        // console.log(\"sjsjs\")\r\n        e.preventDefault()\r\n        if (customer_name === \"\" || customer_phone === \"\") {\r\n            setOpen(true);\r\n            setAlertMessage('All fields are mandatory')\r\n            setAlertType('error')\r\n        } else {\r\n            const state = {\r\n                customer_name: customer_name,\r\n                customer_phone: customer_phone,\r\n                customer_address: address\r\n            }\r\n            AddCustomerHandler(state)\r\n            setName('') // clear form fields \r\n            setPhone('') // clear form fields \r\n            setAddress('') // clear form fields \r\n\r\n\r\n        }\r\n    }\r\n\r\n    const AddCustomerHandler = (state) => {\r\n        console.log(state)\r\n\r\n        api.post('/saveCustomer'\r\n            , state\r\n        )\r\n            .then(function (response) {\r\n                // console.log(response.data)\r\n                if (response.data.error == false) {\r\n\r\n                    // console.log(response.data.users)\r\n                    // return response.data.users;\r\n                    setAlertType('success')\r\n                    setAlertMessage(response.data.message)\r\n                    setOpen(true)\r\n\r\n                    props.handleDialogClose()\r\n                    props.handleContactUpdate()\r\n                    // setTimeout(() => { navigate('/customers'); }, 1000)\r\n\r\n                } else {\r\n                    // console.log(response.data.message)\r\n                    // return [];\r\n                    setAlertType('error')\r\n                    setAlertMessage(response.data.message)\r\n                    setOpen(true)\r\n                }\r\n\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n                setAlertType('error')\r\n                setAlertMessage(\"Error 500: Internal server error\")\r\n                setOpen(true)\r\n            });\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n            <Dialog open={props.dialogOpen} onClose={props.handleDialogClose}>\r\n                <DialogTitle>Add Customer</DialogTitle>\r\n                <DialogContent>\r\n                    <form onSubmit={addCustomer}>\r\n\r\n\r\n                        <div className=\"row\">\r\n\r\n\r\n                            <div className=\"col-md-6\">\r\n                                <div className=\"form-group\">\r\n                                    <label >Customer Name <span className='text-danger'>*</span></label>\r\n                                    <input value={customer_name} onChange={(e) => setName(e.target.value)} type=\"text\" className=\"form-control\" name=\"efname\" id=\"efname\" placeholder=\"Ex: John\" required />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"col-md-6\">\r\n                                <div className=\"form-group\">\r\n                                    <label >Customer Phone <span className='text-danger'>*</span></label>\r\n                                    <input value={customer_phone} onChange={(e) => setPhone(e.target.value)} type=\"text\" className=\"form-control\" name=\"elname\" id=\"elname\" placeholder=\"Ex: +26588299292\" required />\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n\r\n                            <div className=\"col-md-12\">\r\n                                <div className=\"form-group\">\r\n                                    <label >Address</label>\r\n                                    <textarea value={address} onChange={(e) => setAddress(e.target.value)} className=\"form-control\" placeholder=\"Ex: Area 25 sector 3\" ></textarea>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <div className=\"modal-footer\">\r\n                            <button type=\"submit\" id=\"btn_add\" className=\"btn btn-primary\">Save</button>\r\n                            <button onClick={props.handleDialogClose} type=\"button\" id=\"btn_add\" className=\"btn btn-secondary\">Close</button>\r\n                        </div>\r\n\r\n                    </form>\r\n                </DialogContent>\r\n            </Dialog>\r\n            <Alert openAlert={open} alertMessage={alertMessage} alertType={alertType} handleAlertClose={handleAlertClose} />\r\n\r\n        </div>\r\n    );\r\n}\r\n","C:\\xampp\\htdocs\\xerographics\\client\\src\\components\\pos\\ProductsRight.js",["368","369"],"import { useState } from 'react';\r\nimport React from \"react\";\r\nimport Paper from '@mui/material/Paper';\r\nimport Grid from '@mui/material/Grid';\r\n\r\nimport Typography from '@mui/material/Typography';\r\n\r\nimport Badge from '@mui/material/Badge';\r\nimport ShoppingCartIcon from '@mui/icons-material/ShoppingCart';\r\nimport { styled } from '@mui/material/styles';\r\n\r\n\r\nimport TableCart from \"./TableCart\";\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport TextField from '@mui/material/TextField';\r\n\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Divider from '@mui/material/Divider';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport AddCustomerModal from \"../customers/AddCustomerModal\";\r\nimport Checkout from './Checkout';\r\nimport PersonAddAlt1Icon from '@mui/icons-material/PersonAddAlt1';\r\n\r\n\r\nfunction ProductsRight(props) {\r\n    const customers = props.customers;\r\n    const cartItems = props.cartItems;\r\n\r\n    //dialog/modal state\r\n    const [dialogOpen, setDialogOpen] = useState(false);\r\n\r\n    const [customerId, setCustomerId] = useState(-1);\r\n    const [customerName, setCustomerName] = useState('Customer: Default');\r\n\r\n\r\n\r\n    //dialog open\r\n    const handleClickOpen = () => {\r\n        setDialogOpen(true);\r\n    };\r\n    const handleDialogClose = () => {\r\n        setDialogOpen(false);\r\n    };\r\n\r\n\r\n    //style shopping cart badge\r\n    const StyledBadge = styled(Badge)(({ theme }) => ({\r\n        '& .MuiBadge-badge': {\r\n            right: -3,\r\n            top: 13,\r\n            border: `2px solid ${theme.palette.background.paper}`,\r\n            padding: '0 4px',\r\n        },\r\n    }));\r\n\r\n    //customer auto complete\r\n    const handleAutocomplete = (event, newValue) => {\r\n        if (newValue != null) {\r\n            console.log(newValue)\r\n            setCustomerId(newValue.id);\r\n            setCustomerName('Customer: ' + newValue.customer_name);\r\n        }\r\n    }\r\n\r\n    const Item = styled(Paper)(({ theme }) => ({\r\n        ...theme.typography.body2,\r\n        padding: theme.spacing(1),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n    }));\r\n\r\n\r\n    const btnCheckout = () => {\r\n        if (cartItems.length > 0) {\r\n\r\n            let total_calculated = 0;\r\n            for (var i = 0; i < cartItems.length; i++) {\r\n                total_calculated += (parseInt(cartItems[i].qty) * parseInt(cartItems[i].product_price));\r\n            }\r\n\r\n            return (\r\n                <Checkout customerId={customerId} checkoutProducts={props.checkoutProducts} total_calculated={total_calculated} tax_amount={props.tax_amount} cartItems={cartItems} customerId={customerId} />\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Item>\r\n            <Typography spacing={2} style={{ textAlign: 'left' }} variant=\"h5\" gutterBottom component=\"div\">\r\n                Shopping Cart\r\n                <IconButton spacing={2} aria-label=\"cart\">\r\n                    <StyledBadge badgeContent={cartItems.length} color=\"secondary\">\r\n                        <ShoppingCartIcon />\r\n                    </StyledBadge>\r\n                </IconButton>\r\n            </Typography>\r\n            <Grid container spacing={2} columns={16} sx={{ mb: '20px', mt: '10px' }}>\r\n\r\n                <Paper\r\n                    container\r\n                    style={{ width: \"100%\" }}\r\n                    component=\"form\"\r\n                    sx={{ p: '2px 4px', ml: '20px', mr: '20px', mb: '10px', display: 'flex', alignItems: 'center', width: '100%' }}\r\n                >\r\n\r\n                    <Autocomplete\r\n                        id=\"free-solo-demo\"\r\n                        freeSolo\r\n                        options={customers}\r\n                        style={{ width: '80%', padding: '2px ' }}\r\n                        getOptionLabel={customers => (customers.customer_name)}\r\n                        onChange={handleAutocomplete}\r\n                        renderInput={params => (<TextField\r\n                            {...params}\r\n                            label=\"Select customer...\"\r\n                            fullWidth />\r\n                        )}\r\n                    />\r\n\r\n\r\n                    <Divider sx={{ height: 28, m: 0.5 }} orientation=\"vertical\" />\r\n\r\n                    <IconButton onClick={handleClickOpen} color=\"primary\" sx={{ p: '10px' }} aria-label=\"directions\">\r\n                        <PersonAddAlt1Icon />\r\n                    </IconButton>\r\n                </Paper>\r\n\r\n            </Grid>\r\n            <Typography spacing={2} style={{ textAlign: 'left' }} variant=\"p\" gutterBottom component=\"div\">\r\n                <i>{customerName}</i>\r\n            </Typography>\r\n            <TableCart style={{ maxHeight: 500, overflow: 'auto' }} cartItems={cartItems} handleClickAddCart={props.handleClickAddCart} getDeleteProductIdFromCart={props.handleDeleteFromCart} />\r\n\r\n            {btnCheckout()}\r\n\r\n\r\n\r\n            <AddCustomerModal handleContactUpdate={props.retrieveCustomers} dialogOpen={dialogOpen} handleDialogClose={handleDialogClose} />\r\n\r\n        </Item>\r\n\r\n    );\r\n}\r\n\r\nexport default ProductsRight;","C:\\xampp\\htdocs\\xerographics\\client\\src\\components\\pos\\Checkout.js",["370","371","372","373"],"import Button from '@mui/material/Button';\r\nimport { useEffect, useState } from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Input from '@mui/material/Input';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Radio from '@mui/material/Radio';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport FormLabel from '@mui/material/FormLabel';\r\nimport { styled } from '@mui/material/styles';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport Select from '@mui/material/Select';\r\n\r\nfunction Checkout(props) {\r\n    // console.log(props)\r\n\r\n    const [amount_paid, setAmountPaid] = useState('');\r\n    const [discount_amount, setDiscountAmount] = useState('');\r\n    const [discount_percent, setDiscountPercent] = useState(0);\r\n    const [tax_amount, setTaxAmount] = useState('');\r\n    const [tax_percent, setTaxPercent] = useState(props.tax_amount);\r\n    const [payment_type, setPaymentType] = useState(1);\r\n    const [total, setTotal] = useState(props.total_calculated);\r\n    const [total_without_mod, setTotalWithoutMod] = useState(props.total_calculated);\r\n    const [amount_due, setAmountDue] = useState(total);\r\n    const [disable_status, setButtonStatus] = useState('disabled');\r\n\r\n    const formatNumber = (number) => {\r\n        var nf = new Intl.NumberFormat();\r\n        var result = nf.format(number); // \"1,234,567,890\"\r\n        return result;\r\n    }\r\n\r\n    const handleChange = (prop) => (e) => {\r\n\r\n        if (prop === 'discount_percent') {\r\n            let discount = 0;\r\n            if (e.target.value.length !== 0) {\r\n                discount = e.target.value;\r\n            }\r\n\r\n            setDiscountPercent(discount);\r\n            let discount_amount_ = (parseInt(total_without_mod) * parseInt(discount)) / 100;\r\n            setDiscountAmount(discount_amount_);\r\n\r\n            if (tax_amount.length === 0) {\r\n                let total = (parseInt(total_without_mod)) - (parseInt(discount_amount_));\r\n                setTotal(total)\r\n                if (amount_paid.length > 0) {\r\n                    let amt_due = parseInt(total) - parseInt(amount_paid);\r\n                    setAmountDue(amt_due)\r\n                    if (parseInt(amt_due) <= 0) {\r\n                        setButtonStatus('')\r\n                    } else {\r\n                        setButtonStatus('disabled')\r\n                    }\r\n                } else {\r\n                    setAmountDue(total)\r\n                }\r\n            } else {\r\n\r\n                let total = (parseInt(total_without_mod) - parseInt(tax_amount)) - (parseInt(discount_amount));\r\n                setTotal(total)\r\n                if (amount_paid.length > 0) {\r\n                    let amt_due = parseInt(total) - parseInt(amount_paid);\r\n                    setAmountDue(amt_due)\r\n                    if (parseInt(amt_due) <= 0) {\r\n                        setButtonStatus('')\r\n                    } else {\r\n                        setButtonStatus('disabled')\r\n                    }\r\n                } else {\r\n                    setAmountDue(total)\r\n                }\r\n            }\r\n\r\n\r\n\r\n\r\n        } else if (prop === 'amount_paid') {\r\n            // console.log('amount_paid')\r\n            let amount_paid_ = 0;\r\n            if (e.target.value.length > 0) {\r\n                amount_paid_ = e.target.value\r\n            }\r\n            setAmountPaid(e.target.value)\r\n            // console.log(e.target.value)\r\n            // console.log(amount_paid_)\r\n\r\n            let amt_due = parseInt(total) - parseInt(amount_paid_);\r\n            setAmountDue(amt_due)\r\n            if (parseInt(amt_due) <= 0) {\r\n                setButtonStatus('')\r\n            } else {\r\n                setButtonStatus('disabled')\r\n            }\r\n\r\n\r\n        } else if ('apply_tax') {\r\n\r\n            let tax_amount_ = 0;\r\n            if (parseInt(e.target.value) === 0) {\r\n                tax_amount_ = (parseInt(total_without_mod) * parseInt(tax_percent)) / 100;\r\n                setTaxAmount(tax_amount_)\r\n\r\n                if (discount_amount.length === 0) {\r\n                    let total = (parseInt(total_without_mod) - parseInt(tax_amount_));\r\n                    setTotal(total)\r\n                    if (amount_paid.length > 0) {\r\n                        let amt_due = parseInt(total) - parseInt(amount_paid);\r\n                        setAmountDue(amt_due)\r\n                        if (parseInt(amt_due) <= 0) {\r\n                            setButtonStatus('')\r\n                        } else {\r\n                            setButtonStatus('disabled')\r\n                        }\r\n                    } else {\r\n                        setAmountDue(total)\r\n                    }\r\n                } else {\r\n                    let total = (parseInt(total_without_mod) - parseInt(tax_amount_)) - (parseInt(discount_amount));\r\n                    setTotal(total)\r\n                    if (amount_paid.length > 0) {\r\n                        let amt_due = parseInt(total) - parseInt(amount_paid);\r\n                        setAmountDue(amt_due)\r\n                        if (parseInt(amt_due) <= 0) {\r\n                            setButtonStatus('')\r\n                        } else {\r\n                            setButtonStatus('disabled')\r\n                        }\r\n                    } else {\r\n                        setAmountDue(total)\r\n                    }\r\n                }\r\n\r\n            } else {\r\n                tax_amount_ = 0;\r\n                setTaxAmount(tax_amount_)\r\n\r\n                if (discount_amount.length === 0) {\r\n                    let total = (parseInt(total_without_mod) + parseInt(tax_amount_));\r\n                    setTotal(total)\r\n                    if (amount_paid.length > 0) {\r\n                        let amt_due = parseInt(total) - parseInt(amount_paid);\r\n                        setAmountDue(amt_due)\r\n                        if (parseInt(amt_due) <= 0) {\r\n                            setButtonStatus('')\r\n                        } else {\r\n                            setButtonStatus('disabled')\r\n                        }\r\n                    } else {\r\n                        setAmountDue(total)\r\n                    }\r\n                } else {\r\n                    let total = (parseInt(total_without_mod) + parseInt(tax_amount_)) - (parseInt(discount_amount));\r\n                    setTotal(total)\r\n                    if (amount_paid.length > 0) {\r\n                        let amt_due = parseInt(total) - parseInt(amount_paid);\r\n                        setAmountDue(amt_due)\r\n                        if (parseInt(amt_due) <= 0) {\r\n                            setButtonStatus('')\r\n                        } else {\r\n                            setButtonStatus('disabled')\r\n                        }\r\n                    } else {\r\n                        setAmountDue(total)\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n    };\r\n\r\n\r\n    const Div = styled('div')(({ theme }) => ({\r\n        ...theme.typography.button,\r\n        backgroundColor: theme.palette.background.paper,\r\n        padding: theme.spacing(1),\r\n    }));\r\n\r\n    const checkoutPayment = (e) => {\r\n        const data = {\r\n            customerId: props.customerId,\r\n            amount_paid: amount_paid,\r\n            discount_amount: discount_amount,\r\n            discount_percent: discount_percent,\r\n            tax_amount: tax_amount,\r\n            tax_percent: tax_percent,\r\n            payment_type: payment_type,\r\n            total: total,\r\n            total_without_mod: total_without_mod,\r\n            amount_due: amount_due,\r\n            cartItems: props.cartItems\r\n        }\r\n\r\n        props.checkoutProducts(data)\r\n    }\r\n\r\n    return (\r\n        <div >\r\n\r\n            <Box sx={{ width: '80%', mt: 3 }}>\r\n\r\n                <FormControl fullWidth sx={{ m: 1 }} variant=\"standard\">\r\n                    <InputLabel htmlFor=\"standard-adornment-amount\">Discount (%)</InputLabel>\r\n                    <Input\r\n                        onKeyPress={(event) => {\r\n                            if (!/[0-9.]/.test(event.key)) {\r\n                                event.preventDefault();\r\n                            }\r\n                        }}\r\n                        id=\"standard-adornment-amount\"\r\n                        value={discount_percent}\r\n                        onChange={handleChange('discount_percent')}\r\n\r\n                    />\r\n                </FormControl>\r\n                <FormControl fullWidth sx={{ m: 1 }} variant=\"standard\">\r\n                    <InputLabel htmlFor=\"standard-adornment-amount\">Amount Paid</InputLabel>\r\n                    <Input\r\n                        required\r\n                        onKeyPress={(event) => {\r\n                            if (!/[0-9]/.test(event.key)) {\r\n                                event.preventDefault();\r\n                            }\r\n                        }}\r\n                        id=\"standard-adornment-amount\"\r\n                        value={amount_paid}\r\n                        onChange={handleChange('amount_paid')}\r\n                        startAdornment={<InputAdornment position=\"start\">MWK</InputAdornment>}\r\n                    />\r\n                </FormControl>\r\n\r\n                <FormControl style={{ textAlign: 'left' }} fullWidth sx={{ m: 1 }} variant=\"standard\">\r\n                    <FormLabel htmlFor=\"html_tax\">Apply VAT ({props.tax_amount}%)</FormLabel>\r\n                    <RadioGroup\r\n                        onChange={handleChange('apply_tax')}\r\n                        defaultValue=\"1\"\r\n                        id='html_tax'\r\n                        row\r\n                        aria-labelledby=\"demo-row-radio-buttons-group-label\"\r\n                        name=\"row-radio-buttons-group\"\r\n                    >\r\n                        <FormControlLabel value=\"0\" control={<Radio />} label=\"No\" />\r\n                        <FormControlLabel value=\"1\" control={<Radio />} label=\"Yes\" />\r\n\r\n\r\n                    </RadioGroup>\r\n                </FormControl>\r\n                <FormControl style={{ textAlign: 'left' }} fullWidth sx={{ m: 1 }} variant=\"standard\">\r\n                    <InputLabel id=\"demo-simple-select-standard-label\">Payment Type</InputLabel>\r\n                    <Select\r\n                        labelId=\"demo-simple-select-standard-label\"\r\n                        id=\"demo-simple-select-standard\"\r\n                        value={payment_type}\r\n                        onChange={handleChange('payment_type')}\r\n                        label=\"Payment Type\"\r\n                    >\r\n                        <MenuItem value={1}>Cash Payment</MenuItem>\r\n                        <MenuItem value={2}>Mobile Money Payment</MenuItem>\r\n                        <MenuItem value={3}>Bank Payment</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n                <Div style={{ textAlign: 'left' }} sx={{ m: 1 }}>{`Total: MWK ${formatNumber(total)}`}</Div>\r\n                <Div style={{ textAlign: 'left' }} sx={{ m: 1 }}>{`Amount Due: MWK ${formatNumber(amount_due)}`}</Div>\r\n\r\n            </Box>\r\n            <Button onClick={checkoutPayment} disabled={disable_status} style={{ width: \"100%\" }} variant=\"outlined\">Chekout (MWK {formatNumber(total)})</Button>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Checkout;","C:\\xampp\\htdocs\\xerographics\\client\\src\\components\\Login\\Login.js",["374","375","376","377","378"],"C:\\xampp\\htdocs\\xerographics\\client\\src\\components\\reports\\user\\UserSales.js",["379","380","381"],"import * as React from 'react';\r\nimport {Link, useNavigate} from \"react-router-dom\";\r\nimport {DatePickerStartEnd} from \"../DatePickerStartEnd\";\r\nimport api from \"../../../api/api\";\r\nimport {useEffect, useState} from \"react\";\r\nimport Alert from \"../../alerts/alert\";\r\nimport Dialogs from \"../../alerts/dialog\";\r\nimport LinearProgressLoad from \"../../alerts/LinearProgress\";\r\nimport UserSearchList from \"./UserSearchList\";\r\nimport CustomerListRow from \"../../customers/CustomerListRow\";\r\nimport ReportListRow from \"../ReportListRow\";\r\n\r\n\r\nexport function UserSales() {\r\n    const navigate = useNavigate()\r\n\r\n    //user state\r\n    const [users, setUsers] = useState([])\r\n    const [alertType, setAlertType] = useState(\"\");\r\n    const [alertMessage, setAlertMessage] = useState(\"\");\r\n    const [startSearchDate, setStartDate] = useState(\"\");\r\n    const [endSearchDate, setEndDate] = useState(\"\");\r\n    const [searchUserId, setSearchUserId] = useState(\"\");\r\n    const [loadingProgress, setLoadingProgress] = useState(false);\r\n    const [userReports, setUserReports] = useState([]);\r\n\r\n    //alert state\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const [dialogTitle, setDialogTitle] = useState(\"\");\r\n    const [dialogMessage, setDialogMessage] = useState(\"\");\r\n\r\n    //dialog state\r\n    const [dialogOpen, setDialogOpen] = useState(false);\r\n\r\n\r\n    //dialog open\r\n    const handleClickOpen = (id) => {\r\n        setDialogOpen(true);\r\n        setDialogTitle('Delete')\r\n        setDialogMessage('Are you sure to delete product?')\r\n        // setId(id)\r\n    };\r\n\r\n    //delete product\r\n    const dialogAction = () => {\r\n        setOpen(false)\r\n        // setId(-1)\r\n        // if (del_id > 0) {\r\n        //     setLoadingProgress(true)\r\n        //\r\n        //     // console.log(\"ID: \" + id);\r\n        //     api.delete('/deleteProduct/' + del_id + ''\r\n        //         , {\r\n        //             headers: {\r\n        //                 'Content-Type': 'application/json',\r\n        //                 'Accept': 'application/json'\r\n        //             }\r\n        //         }\r\n        //     )\r\n        //         .then(function (response) {\r\n        //             // console.log(response.data)\r\n        //             setLoadingProgress(false)\r\n        //\r\n        //             if (response.data.error === false) {\r\n        //\r\n        //                 const productsCopy = products.filter((product) => {\r\n        //                     return product.id !== del_id\r\n        //                 })\r\n        //                 handleDialogClose();\r\n        //                 setProducts(productsCopy)\r\n        //                 setAlertType('success')\r\n        //                 setAlertMessage('Product deleted successfully')\r\n        //                 setOpen(true)\r\n        //\r\n        //\r\n        //             } else {\r\n        //                 // console.log(response.data.message)\r\n        //                 // return [];\r\n        //                 setAlertType('error')\r\n        //                 setAlertMessage(response.data.message)\r\n        //                 setOpen(true)\r\n        //             }\r\n        //\r\n        //         })\r\n        //         .catch(function (myJson) {\r\n        //             setLoadingProgress(false)\r\n        //\r\n        //             console.log(myJson);\r\n        //             setAlertType('error')\r\n        //             setAlertMessage(\"Error 500: Internal server error\")\r\n        //             setOpen(true)\r\n        //         });\r\n        // } else {\r\n        //\r\n        // }\r\n\r\n    }\r\n\r\n\r\n    const handleAlertClose = () => {\r\n        setOpen(false);\r\n        setAlertMessage('')\r\n        setAlertType('')\r\n    };\r\n\r\n    const handleDialogClose = () => {\r\n        setDialogOpen(false);\r\n        setDialogTitle('')\r\n        setDialogMessage('')\r\n    };\r\n\r\n    // retrieve users\r\n    const retrieveUsers = () => {\r\n        setLoadingProgress(true)\r\n        api.get('/fetchAllUsers'\r\n        )\r\n            .then(function (response) {\r\n                setLoadingProgress(false)\r\n                // console.log(response.data)\r\n                if (response.data.error === false) {\r\n\r\n                    // console.log(response.data.users)\r\n                    setUsers(response.data.users)\r\n                    // return response.data.users;\r\n\r\n                } else {\r\n                    // console.log(response.data.message)\r\n                    // return [];\r\n                    setAlertType('error')\r\n                    setAlertMessage(response.data.message)\r\n                    setOpen(true)\r\n                }\r\n\r\n            })\r\n            .catch(function (error) {\r\n                setLoadingProgress(false)\r\n                if (error.response.status === 401) {\r\n                    //place your reentry code\r\n                    sessionStorage.removeItem('status')\r\n                    sessionStorage.removeItem('jwt_token')\r\n                    setAlertType('error')\r\n                    setAlertMessage(\"Error 401: Unauthorized user\")\r\n                    setOpen(true)\r\n                    navigate('/login')\r\n                } else {\r\n                    window.sessionStorage.setItem('status', false)\r\n                    setAlertType('error')\r\n                    setAlertMessage(\"Error 500: Internal server error\")\r\n                    setOpen(true)\r\n                }\r\n            });\r\n    }\r\n\r\n    useEffect(() => {\r\n        retrieveUsers();\r\n    }, [])\r\n\r\n    const loading = () => {\r\n        if (loadingProgress) {\r\n            return (\r\n                <div className=\"mb-3\">\r\n                    <LinearProgressLoad/>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    const handleSearchForm = (e) => {\r\n        e.preventDefault();\r\n        if (searchUserId === '') {\r\n            setAlertMessage(\"Please select at least one sales person\")\r\n            setAlertType(\"error\")\r\n            setOpen(true)\r\n            return;\r\n        }\r\n        if (startSearchDate === '') {\r\n            setAlertMessage(\"Search start date is mandatory\")\r\n            setAlertType(\"error\")\r\n            setOpen(true)\r\n            return;\r\n        }\r\n\r\n        if (endSearchDate === '') {\r\n            setAlertMessage(\"Search end date is mandatory\")\r\n            setAlertType(\"error\")\r\n            setOpen(true)\r\n            return;\r\n        }\r\n\r\n        const state = {\r\n            filter_user: searchUserId,\r\n            filter_user_start: startSearchDate,\r\n            filter_user_end: endSearchDate\r\n        }\r\n\r\n        //search using the given parameters when submitted\r\n        api.post('/filterUserReports'\r\n            , state\r\n        )\r\n            .then(function (response) {\r\n                // console.log(response.data)\r\n                if (response.data.error === false) {\r\n\r\n                    console.log(response.data.invoices)\r\n                    // return response.data.users;\r\n                    setUserReports(response.data.invoices)\r\n                    setAlertType('success')\r\n                    setAlertMessage(response.data.message)\r\n                    setOpen(true)\r\n\r\n\r\n                } else {\r\n                    // console.log(response.data.message)\r\n                    // return [];\r\n                    setAlertType('error')\r\n                    setAlertMessage(response.data.message)\r\n                    setOpen(true)\r\n                }\r\n\r\n            })\r\n            .catch(function (error) {\r\n                if (error.response.status === 401) {\r\n                    navigate('/login')\r\n                    //place your reentry code\r\n                    console.log('Unauthorised')\r\n                    sessionStorage.removeItem('status')\r\n                    sessionStorage.removeItem('jwt_token')\r\n                } else {\r\n                    console.log('unknown error')\r\n                    window.sessionStorage.setItem('status', false)\r\n                }\r\n            });\r\n\r\n    }\r\n\r\n    const renderReportsList = userReports.map((report) => {\r\n        return (\r\n            <ReportListRow key={report.id} report={report}\r\n            ></ReportListRow>\r\n        );\r\n    })\r\n\r\n    return (\r\n        <div>\r\n\r\n\r\n            <div className=\"header bg-primary pb-6\">\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"header-body\">\r\n                        <div className=\"row align-items-center py-4\">\r\n                            <div className=\"col-lg-6 col-7\">\r\n                                <nav aria-label=\"breadcrumb\" className=\"d-none d-md-inline-block ml-md-4\">\r\n                                    <ol className=\"breadcrumb breadcrumb-links breadcrumb-dark\">\r\n                                        <li className=\"breadcrumb-item\"><Link\r\n                                            to=\"/\"><i className=\"fas fa-home\"></i></Link>\r\n                                        </li>\r\n                                        <li className=\"breadcrumb-item active\" aria-current=\"page\"><Link\r\n                                            to={'/reports'}> Reports</Link></li>\r\n                                        <li className=\"breadcrumb-item active\" aria-current=\"page\">Users</li>\r\n                                    </ol>\r\n                                </nav>\r\n                            </div>\r\n                            <div className=\"col-lg-6 col-5 text-right\">\r\n\r\n                                {/*<Link to={'addCustomer'}>*/}\r\n                                {/*    <button type=\"button\" className=\"btn btn-sm btn-neutral my-1\">New Customer</button>*/}\r\n                                {/*</Link>*/}\r\n\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"container-fluid mt--6\">\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <div className=\"card\">\r\n                            {loading()}\r\n                            <form onSubmit={handleSearchForm}>\r\n\r\n                                <div className=\"row p-3 m-3\">\r\n\r\n                                    <div className=\"col-md-4 \">\r\n\r\n                                        <div className=\"form-group\">\r\n                                            <UserSearchList setSearchUserId={setSearchUserId} users={users}/>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-md-6 \">\r\n\r\n                                        <div className=\"form-group\">\r\n                                            <div className=\"input-group\">\r\n                                                <div className=\"mx-1\">\r\n\r\n                                                    <DatePickerStartEnd setStartDate={setStartDate}/>\r\n                                                </div>\r\n                                                <div className=\"mx-1\">\r\n                                                    <DatePickerStartEnd setEndDate={setEndDate}/>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-md-1 \">\r\n\r\n                                        <div className=\"form-group\">\r\n                                            <button type=\"submit\" id=\"btn_find\" className=\"btn btn-primary\">Find\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </form>\r\n\r\n                            <div className=\"table-responsive mt-1\" id=\"show_reports\">\r\n                                <table className=\"table align-items-center table-flush table-hover mt-1\" id=\"units_tbl\">\r\n                                    <thead className=\"thead-light\">\r\n                                    <tr>\r\n                                        <th scope=\"col\">Invoice #</th>\r\n                                        <th scope=\"col\">Customer Name</th>\r\n                                        <th scope=\"col\">Date</th>\r\n                                        <th scope=\"col\">Total</th>\r\n                                        <th scope=\"col\">Action</th>\r\n                                    </tr>\r\n                                    </thead>\r\n                                    <tbody className=\"list\">\r\n\r\n                                    {renderReportsList}\r\n                                    </tbody>\r\n                                </table>\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <Dialogs dialogOpen={dialogOpen} dialogAction={dialogAction} dialogTitle={dialogTitle}\r\n                     dialogMessage={dialogMessage} handleDialogClose={handleDialogClose}/>\r\n            <Alert openAlert={open} alertMessage={alertMessage} alertType={alertType}\r\n                   handleAlertClose={handleAlertClose}/>\r\n        </div>\r\n    );\r\n};",["382","383"],"C:\\xampp\\htdocs\\xerographics\\client\\src\\components\\reports\\DatePickerStartEnd.js",["384","385","386"],"C:\\xampp\\htdocs\\xerographics\\client\\src\\components\\reports\\user\\UserSearchList.js",["387","388"],"import {useState} from 'react';\r\nimport React from \"react\";\r\n\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport TextField from '@mui/material/TextField';\r\n\r\n\r\nfunction UserSearchList(props) {\r\n    const users = props.users;\r\n\r\n    const [userId, setUserId] = useState(-1);\r\n    const [fullname, setFullname] = useState('');\r\n\r\n\r\n    //users auto complete\r\n    const handleAutocomplete = (event, newValue) => {\r\n        if (newValue != null) {\r\n            console.log(newValue)\r\n            setUserId(newValue.id);\r\n            props.setSearchUserId(newValue.id)\r\n            setFullname('User: ' + newValue.firstname + newValue.lastname);\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n\r\n\r\n        <Autocomplete\r\n            \r\n            id=\"free-solo-demo\"\r\n            freeSolo\r\n            options={users}\r\n            getOptionLabel={users => (users.firstname + ' ' + users.lastname)}\r\n            onChange={handleAutocomplete}\r\n            renderInput={params => (<TextField\r\n                    {...params}\r\n                    label=\"Sales person...\"\r\n                    fullWidth/>\r\n            )}\r\n        />\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default UserSearchList;","C:\\xampp\\htdocs\\xerographics\\client\\src\\components\\reports\\branch\\BranchSales.js",["389","390"],"C:\\xampp\\htdocs\\xerographics\\client\\src\\components\\reports\\category\\CategorySales.js",["391","392"],"C:\\xampp\\htdocs\\xerographics\\client\\src\\components\\reports\\ReportListRow.js",["393"],"C:\\xampp\\htdocs\\xerographics\\client\\src\\api\\baseUrlApi.js",[],"C:\\xampp\\htdocs\\xerographics\\client\\src\\components\\reports\\details\\InvoiceDetails.js",["394","395","396","397","398","399","400","401","402","403","404"],"C:\\xampp\\htdocs\\xerographics\\client\\src\\components\\reports\\details\\InvoiceDetailsListRow.js",[],"C:\\xampp\\htdocs\\xerographics\\client\\src\\components\\reports\\branch\\BranchSearchList.js",["405","406"],"C:\\xampp\\htdocs\\xerographics\\client\\src\\components\\reports\\category\\CategorySearchList.js",["407","408"],"C:\\xampp\\htdocs\\xerographics\\client\\src\\components\\Login\\Logout.js",["409","410","411","412","413","414","415","416"],{"ruleId":"417","replacedBy":"418"},{"ruleId":"419","replacedBy":"420"},{"ruleId":"421","severity":1,"message":"422","line":2,"column":20,"nodeType":"423","messageId":"424","endLine":2,"endColumn":28},{"ruleId":"421","severity":1,"message":"425","line":3,"column":26,"nodeType":"423","messageId":"424","endLine":3,"endColumn":32},{"ruleId":"421","severity":1,"message":"426","line":3,"column":34,"nodeType":"423","messageId":"424","endLine":3,"endColumn":40},{"ruleId":"427","severity":1,"message":"428","line":84,"column":8,"nodeType":"429","endLine":84,"endColumn":10,"suggestions":"430"},{"ruleId":"427","severity":1,"message":"431","line":142,"column":8,"nodeType":"429","endLine":142,"endColumn":10,"suggestions":"432"},{"ruleId":"421","severity":1,"message":"433","line":1,"column":8,"nodeType":"423","messageId":"424","endLine":1,"endColumn":13},{"ruleId":"421","severity":1,"message":"434","line":3,"column":8,"nodeType":"423","messageId":"424","endLine":3,"endColumn":13},{"ruleId":"421","severity":1,"message":"435","line":4,"column":8,"nodeType":"423","messageId":"424","endLine":4,"endColumn":14},{"ruleId":"421","severity":1,"message":"436","line":8,"column":11,"nodeType":"423","messageId":"424","endLine":8,"endColumn":19},{"ruleId":"437","severity":1,"message":"438","line":24,"column":21,"nodeType":"439","endLine":24,"endColumn":72},{"ruleId":"440","severity":1,"message":"441","line":25,"column":25,"nodeType":"439","endLine":25,"endColumn":96},{"ruleId":"437","severity":1,"message":"438","line":48,"column":21,"nodeType":"439","endLine":48,"endColumn":160},{"ruleId":"421","severity":1,"message":"442","line":20,"column":12,"nodeType":"423","messageId":"424","endLine":20,"endColumn":23},{"ruleId":"421","severity":1,"message":"443","line":20,"column":25,"nodeType":"423","messageId":"424","endLine":20,"endColumn":39},{"ruleId":"421","severity":1,"message":"444","line":21,"column":12,"nodeType":"423","messageId":"424","endLine":21,"endColumn":25},{"ruleId":"421","severity":1,"message":"445","line":21,"column":27,"nodeType":"423","messageId":"424","endLine":21,"endColumn":43},{"ruleId":"446","severity":1,"message":"447","line":79,"column":41,"nodeType":"448","messageId":"449","endLine":79,"endColumn":43},{"ruleId":"446","severity":1,"message":"447","line":130,"column":41,"nodeType":"448","messageId":"449","endLine":130,"endColumn":43},{"ruleId":"427","severity":1,"message":"450","line":183,"column":8,"nodeType":"429","endLine":183,"endColumn":10,"suggestions":"451"},{"ruleId":"452","severity":1,"message":"453","line":191,"column":53,"nodeType":"454","messageId":"455","endLine":191,"endColumn":55},{"ruleId":"446","severity":1,"message":"447","line":192,"column":23,"nodeType":"448","messageId":"449","endLine":192,"endColumn":25},{"ruleId":"421","severity":1,"message":"456","line":5,"column":10,"nodeType":"423","messageId":"424","endLine":5,"endColumn":19},{"ruleId":"421","severity":1,"message":"422","line":5,"column":21,"nodeType":"423","messageId":"424","endLine":5,"endColumn":29},{"ruleId":"421","severity":1,"message":"442","line":25,"column":12,"nodeType":"423","messageId":"424","endLine":25,"endColumn":23},{"ruleId":"421","severity":1,"message":"443","line":25,"column":25,"nodeType":"423","messageId":"424","endLine":25,"endColumn":39},{"ruleId":"421","severity":1,"message":"444","line":26,"column":12,"nodeType":"423","messageId":"424","endLine":26,"endColumn":25},{"ruleId":"421","severity":1,"message":"445","line":26,"column":27,"nodeType":"423","messageId":"424","endLine":26,"endColumn":43},{"ruleId":"446","severity":1,"message":"447","line":85,"column":41,"nodeType":"448","messageId":"449","endLine":85,"endColumn":43},{"ruleId":"427","severity":1,"message":"457","line":182,"column":8,"nodeType":"429","endLine":182,"endColumn":10,"suggestions":"458"},{"ruleId":"452","severity":1,"message":"453","line":190,"column":53,"nodeType":"454","messageId":"455","endLine":190,"endColumn":55},{"ruleId":"446","severity":1,"message":"447","line":191,"column":23,"nodeType":"448","messageId":"449","endLine":191,"endColumn":25},{"ruleId":"437","severity":1,"message":"438","line":13,"column":21,"nodeType":"439","endLine":13,"endColumn":72},{"ruleId":"440","severity":1,"message":"441","line":14,"column":25,"nodeType":"439","endLine":14,"endColumn":96},{"ruleId":"437","severity":1,"message":"438","line":33,"column":21,"nodeType":"439","endLine":33,"endColumn":160},{"ruleId":"437","severity":1,"message":"438","line":27,"column":21,"nodeType":"439","endLine":27,"endColumn":72},{"ruleId":"440","severity":1,"message":"441","line":28,"column":25,"nodeType":"439","endLine":28,"endColumn":96},{"ruleId":"437","severity":1,"message":"438","line":45,"column":21,"nodeType":"439","endLine":45,"endColumn":160},{"ruleId":"421","severity":1,"message":"456","line":2,"column":10,"nodeType":"423","messageId":"424","endLine":2,"endColumn":19},{"ruleId":"446","severity":1,"message":"447","line":65,"column":41,"nodeType":"448","messageId":"449","endLine":65,"endColumn":43},{"ruleId":"421","severity":1,"message":"459","line":1,"column":29,"nodeType":"423","messageId":"424","endLine":1,"endColumn":40},{"ruleId":"421","severity":1,"message":"456","line":2,"column":10,"nodeType":"423","messageId":"424","endLine":2,"endColumn":19},{"ruleId":"446","severity":1,"message":"447","line":62,"column":41,"nodeType":"448","messageId":"449","endLine":62,"endColumn":43},{"ruleId":"437","severity":1,"message":"438","line":23,"column":21,"nodeType":"439","endLine":23,"endColumn":160},{"ruleId":"421","severity":1,"message":"459","line":1,"column":29,"nodeType":"423","messageId":"424","endLine":1,"endColumn":40},{"ruleId":"421","severity":1,"message":"456","line":2,"column":10,"nodeType":"423","messageId":"424","endLine":2,"endColumn":19},{"ruleId":"446","severity":1,"message":"447","line":58,"column":41,"nodeType":"448","messageId":"449","endLine":58,"endColumn":43},{"ruleId":"421","severity":1,"message":"456","line":2,"column":10,"nodeType":"423","messageId":"424","endLine":2,"endColumn":19},{"ruleId":"421","severity":1,"message":"459","line":1,"column":29,"nodeType":"423","messageId":"424","endLine":1,"endColumn":40},{"ruleId":"421","severity":1,"message":"456","line":2,"column":10,"nodeType":"423","messageId":"424","endLine":2,"endColumn":19},{"ruleId":"446","severity":1,"message":"447","line":65,"column":41,"nodeType":"448","messageId":"449","endLine":65,"endColumn":43},{"ruleId":"421","severity":1,"message":"456","line":2,"column":9,"nodeType":"423","messageId":"424","endLine":2,"endColumn":18},{"ruleId":"446","severity":1,"message":"447","line":68,"column":41,"nodeType":"448","messageId":"449","endLine":68,"endColumn":43},{"ruleId":"437","severity":1,"message":"438","line":32,"column":21,"nodeType":"439","endLine":32,"endColumn":160},{"ruleId":"427","severity":1,"message":"450","line":158,"column":8,"nodeType":"429","endLine":158,"endColumn":10,"suggestions":"460"},{"ruleId":"421","severity":1,"message":"456","line":2,"column":10,"nodeType":"423","messageId":"424","endLine":2,"endColumn":19},{"ruleId":"446","severity":1,"message":"447","line":75,"column":41,"nodeType":"448","messageId":"449","endLine":75,"endColumn":43},{"ruleId":"421","severity":1,"message":"459","line":1,"column":28,"nodeType":"423","messageId":"424","endLine":1,"endColumn":39},{"ruleId":"421","severity":1,"message":"456","line":2,"column":9,"nodeType":"423","messageId":"424","endLine":2,"endColumn":18},{"ruleId":"446","severity":1,"message":"447","line":69,"column":41,"nodeType":"448","messageId":"449","endLine":69,"endColumn":43},{"ruleId":"437","severity":1,"message":"438","line":38,"column":21,"nodeType":"439","endLine":38,"endColumn":160},{"ruleId":"437","severity":1,"message":"438","line":14,"column":25,"nodeType":"439","endLine":14,"endColumn":62},{"ruleId":"437","severity":1,"message":"438","line":86,"column":25,"nodeType":"439","endLine":86,"endColumn":62},{"ruleId":"437","severity":1,"message":"438","line":147,"column":37,"nodeType":"439","endLine":147,"endColumn":122},{"ruleId":"437","severity":1,"message":"438","line":226,"column":21,"nodeType":"439","endLine":226,"endColumn":58},{"ruleId":"437","severity":1,"message":"438","line":295,"column":33,"nodeType":"439","endLine":295,"endColumn":118},{"ruleId":"437","severity":1,"message":"438","line":23,"column":29,"nodeType":"439","endLine":24,"endColumn":66},{"ruleId":"437","severity":1,"message":"438","line":32,"column":29,"nodeType":"439","endLine":33,"endColumn":75},{"ruleId":"440","severity":1,"message":"441","line":36,"column":41,"nodeType":"439","endLine":36,"endColumn":113},{"ruleId":"446","severity":1,"message":"447","line":111,"column":41,"nodeType":"448","messageId":"449","endLine":111,"endColumn":43},{"ruleId":"446","severity":1,"message":"447","line":162,"column":41,"nodeType":"448","messageId":"449","endLine":162,"endColumn":43},{"ruleId":"437","severity":1,"message":"438","line":14,"column":21,"nodeType":"439","endLine":14,"endColumn":72},{"ruleId":"440","severity":1,"message":"441","line":15,"column":25,"nodeType":"439","endLine":15,"endColumn":148},{"ruleId":"437","severity":1,"message":"438","line":47,"column":21,"nodeType":"439","endLine":47,"endColumn":160},{"ruleId":"421","severity":1,"message":"459","line":1,"column":29,"nodeType":"423","messageId":"424","endLine":1,"endColumn":40},{"ruleId":"421","severity":1,"message":"456","line":2,"column":10,"nodeType":"423","messageId":"424","endLine":2,"endColumn":19},{"ruleId":"446","severity":1,"message":"447","line":63,"column":41,"nodeType":"448","messageId":"449","endLine":63,"endColumn":43},{"ruleId":"437","severity":1,"message":"438","line":18,"column":21,"nodeType":"439","endLine":18,"endColumn":160},{"ruleId":"421","severity":1,"message":"456","line":2,"column":17,"nodeType":"423","messageId":"424","endLine":2,"endColumn":26},{"ruleId":"446","severity":1,"message":"447","line":65,"column":41,"nodeType":"448","messageId":"449","endLine":65,"endColumn":43},{"ruleId":"421","severity":1,"message":"459","line":1,"column":28,"nodeType":"423","messageId":"424","endLine":1,"endColumn":39},{"ruleId":"421","severity":1,"message":"436","line":26,"column":11,"nodeType":"423","messageId":"424","endLine":26,"endColumn":19},{"ruleId":"421","severity":1,"message":"461","line":33,"column":12,"nodeType":"423","messageId":"424","endLine":33,"endColumn":25},{"ruleId":"446","severity":1,"message":"447","line":300,"column":41,"nodeType":"448","messageId":"449","endLine":300,"endColumn":43},{"ruleId":"427","severity":1,"message":"462","line":333,"column":8,"nodeType":"429","endLine":333,"endColumn":10,"suggestions":"463"},{"ruleId":"464","severity":1,"message":"465","line":387,"column":53,"nodeType":"466","messageId":"467","endLine":387,"endColumn":95},{"ruleId":"421","severity":1,"message":"468","line":13,"column":8,"nodeType":"423","messageId":"424","endLine":13,"endColumn":18},{"ruleId":"421","severity":1,"message":"469","line":14,"column":8,"nodeType":"423","messageId":"424","endLine":14,"endColumn":15},{"ruleId":"421","severity":1,"message":"470","line":15,"column":8,"nodeType":"423","messageId":"424","endLine":15,"endColumn":18},{"ruleId":"421","severity":1,"message":"471","line":16,"column":10,"nodeType":"423","messageId":"424","endLine":16,"endColumn":16},{"ruleId":"421","severity":1,"message":"472","line":15,"column":22,"nodeType":"423","messageId":"424","endLine":15,"endColumn":33},{"ruleId":"421","severity":1,"message":"473","line":2,"column":8,"nodeType":"423","messageId":"424","endLine":2,"endColumn":14},{"ruleId":"421","severity":1,"message":"474","line":3,"column":8,"nodeType":"423","messageId":"424","endLine":3,"endColumn":17},{"ruleId":"421","severity":1,"message":"475","line":5,"column":8,"nodeType":"423","messageId":"424","endLine":5,"endColumn":21},{"ruleId":"421","severity":1,"message":"476","line":7,"column":8,"nodeType":"423","messageId":"424","endLine":7,"endColumn":25},{"ruleId":"421","severity":1,"message":"456","line":11,"column":10,"nodeType":"423","messageId":"424","endLine":11,"endColumn":19},{"ruleId":"446","severity":1,"message":"447","line":68,"column":41,"nodeType":"448","messageId":"449","endLine":68,"endColumn":43},{"ruleId":"421","severity":1,"message":"469","line":19,"column":8,"nodeType":"423","messageId":"424","endLine":19,"endColumn":15},{"ruleId":"464","severity":1,"message":"465","line":82,"column":181,"nodeType":"466","messageId":"467","endLine":82,"endColumn":204},{"ruleId":"421","severity":1,"message":"456","line":2,"column":10,"nodeType":"423","messageId":"424","endLine":2,"endColumn":19},{"ruleId":"421","severity":1,"message":"477","line":23,"column":25,"nodeType":"423","messageId":"424","endLine":23,"endColumn":38},{"ruleId":"421","severity":1,"message":"478","line":24,"column":26,"nodeType":"423","messageId":"424","endLine":24,"endColumn":40},{"ruleId":"421","severity":1,"message":"479","line":26,"column":31,"nodeType":"423","messageId":"424","endLine":26,"endColumn":49},{"ruleId":"421","severity":1,"message":"480","line":5,"column":9,"nodeType":"423","messageId":"424","endLine":5,"endColumn":19},{"ruleId":"421","severity":1,"message":"435","line":7,"column":8,"nodeType":"423","messageId":"424","endLine":7,"endColumn":14},{"ruleId":"427","severity":1,"message":"428","line":125,"column":8,"nodeType":"429","endLine":125,"endColumn":10,"suggestions":"481"},{"ruleId":"464","severity":1,"message":"465","line":176,"column":79,"nodeType":"466","messageId":"467","endLine":176,"endColumn":94},{"ruleId":"437","severity":1,"message":"438","line":197,"column":37,"nodeType":"439","endLine":197,"endColumn":62},{"ruleId":"421","severity":1,"message":"482","line":10,"column":8,"nodeType":"423","messageId":"424","endLine":10,"endColumn":23},{"ruleId":"421","severity":1,"message":"483","line":38,"column":11,"nodeType":"423","messageId":"424","endLine":38,"endColumn":26},{"ruleId":"427","severity":1,"message":"431","line":157,"column":8,"nodeType":"429","endLine":157,"endColumn":10,"suggestions":"484"},{"ruleId":"417","replacedBy":"485"},{"ruleId":"419","replacedBy":"486"},{"ruleId":"421","severity":1,"message":"487","line":1,"column":9,"nodeType":"423","messageId":"424","endLine":1,"endColumn":13},{"ruleId":"421","severity":1,"message":"488","line":3,"column":15,"nodeType":"423","messageId":"424","endLine":3,"endColumn":17},{"ruleId":"464","severity":1,"message":"465","line":29,"column":65,"nodeType":"466","messageId":"467","endLine":29,"endColumn":85},{"ruleId":"421","severity":1,"message":"489","line":11,"column":12,"nodeType":"423","messageId":"424","endLine":11,"endColumn":18},{"ruleId":"421","severity":1,"message":"490","line":12,"column":12,"nodeType":"423","messageId":"424","endLine":12,"endColumn":20},{"ruleId":"421","severity":1,"message":"491","line":7,"column":8,"nodeType":"423","messageId":"424","endLine":7,"endColumn":15},{"ruleId":"427","severity":1,"message":"450","line":81,"column":8,"nodeType":"429","endLine":81,"endColumn":10,"suggestions":"492"},{"ruleId":"421","severity":1,"message":"491","line":7,"column":8,"nodeType":"423","messageId":"424","endLine":7,"endColumn":15},{"ruleId":"427","severity":1,"message":"493","line":81,"column":8,"nodeType":"429","endLine":81,"endColumn":10,"suggestions":"494"},{"ruleId":"437","severity":1,"message":"438","line":23,"column":21,"nodeType":"439","endLine":24,"endColumn":67},{"ruleId":"421","severity":1,"message":"495","line":4,"column":8,"nodeType":"423","messageId":"424","endLine":4,"endColumn":21},{"ruleId":"421","severity":1,"message":"496","line":16,"column":12,"nodeType":"423","messageId":"424","endLine":16,"endColumn":16},{"ruleId":"421","severity":1,"message":"497","line":19,"column":12,"nodeType":"423","messageId":"424","endLine":19,"endColumn":21},{"ruleId":"421","severity":1,"message":"498","line":20,"column":12,"nodeType":"423","messageId":"424","endLine":20,"endColumn":24},{"ruleId":"421","severity":1,"message":"499","line":21,"column":12,"nodeType":"423","messageId":"424","endLine":21,"endColumn":27},{"ruleId":"421","severity":1,"message":"500","line":21,"column":29,"nodeType":"423","messageId":"424","endLine":21,"endColumn":47},{"ruleId":"421","severity":1,"message":"501","line":25,"column":11,"nodeType":"423","messageId":"424","endLine":25,"endColumn":27},{"ruleId":"427","severity":1,"message":"457","line":69,"column":8,"nodeType":"429","endLine":69,"endColumn":10,"suggestions":"502"},{"ruleId":"437","severity":1,"message":"438","line":90,"column":25,"nodeType":"439","endLine":90,"endColumn":92},{"ruleId":"437","severity":1,"message":"438","line":94,"column":25,"nodeType":"439","endLine":94,"endColumn":91},{"ruleId":"437","severity":1,"message":"438","line":99,"column":25,"nodeType":"439","endLine":99,"endColumn":93},{"ruleId":"421","severity":1,"message":"503","line":11,"column":12,"nodeType":"423","messageId":"424","endLine":11,"endColumn":20},{"ruleId":"421","severity":1,"message":"504","line":12,"column":12,"nodeType":"423","messageId":"424","endLine":12,"endColumn":22},{"ruleId":"421","severity":1,"message":"505","line":11,"column":12,"nodeType":"423","messageId":"424","endLine":11,"endColumn":22},{"ruleId":"421","severity":1,"message":"506","line":12,"column":12,"nodeType":"423","messageId":"424","endLine":12,"endColumn":24},{"ruleId":"421","severity":1,"message":"422","line":1,"column":27,"nodeType":"423","messageId":"424","endLine":1,"endColumn":35},{"ruleId":"421","severity":1,"message":"507","line":2,"column":8,"nodeType":"423","messageId":"424","endLine":2,"endColumn":13},{"ruleId":"421","severity":1,"message":"508","line":3,"column":8,"nodeType":"423","messageId":"424","endLine":3,"endColumn":26},{"ruleId":"421","severity":1,"message":"509","line":4,"column":8,"nodeType":"423","messageId":"424","endLine":4,"endColumn":11},{"ruleId":"421","severity":1,"message":"480","line":5,"column":9,"nodeType":"423","messageId":"424","endLine":5,"endColumn":19},{"ruleId":"421","severity":1,"message":"510","line":6,"column":9,"nodeType":"423","messageId":"424","endLine":6,"endColumn":20},{"ruleId":"421","severity":1,"message":"435","line":7,"column":8,"nodeType":"423","messageId":"424","endLine":7,"endColumn":14},{"ruleId":"421","severity":1,"message":"511","line":8,"column":8,"nodeType":"423","messageId":"424","endLine":8,"endColumn":17},"no-native-reassign",["512"],"no-negated-in-lhs",["513"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Router' is defined but never used.","'Switch' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.","ArrayExpression",["514"],"React Hook useEffect has a missing dependency: 'retrieveUsers'. Either include it or remove the dependency array.",["515"],"'react' is defined but never used.","'Login' is defined but never used.","'TopBar' is defined but never used.","'navigate' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'dialogTitle' is assigned a value but never used.","'setDialogTitle' is assigned a value but never used.","'dialogMessage' is assigned a value but never used.","'setDialogMessage' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'retrieveBranches'. Either include it or remove the dependency array.",["516"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'useEffect' is defined but never used.","React Hook useEffect has a missing dependency: 'retrieveData'. Either include it or remove the dependency array.",["517"],"'useLocation' is defined but never used.",["518"],"'productCartId' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'retrieveProducts'. Either include it or remove the dependency array.",["519"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'IconButton' is defined but never used.","'AddIcon' is defined but never used.","'RemoveIcon' is defined but never used.","'useRef' is defined but never used.","'setProducts' is assigned a value but never used.","'Button' is defined but never used.","'TextField' is defined but never used.","'DialogActions' is defined but never used.","'DialogContentText' is defined but never used.","'setTaxPercent' is assigned a value but never used.","'setPaymentType' is assigned a value but never used.","'setTotalWithoutMod' is assigned a value but never used.","'useCookies' is defined but never used.",["520"],"'CustomerListRow' is defined but never used.","'handleClickOpen' is assigned a value but never used.",["521"],["512"],["513"],"'Link' is defined but never used.","'es' is defined but never used.","'userId' is assigned a value but never used.","'fullname' is assigned a value but never used.","'Dialogs' is defined but never used.",["522"],"React Hook useEffect has a missing dependency: 'retrieveCategories'. Either include it or remove the dependency array.",["523"],"'ReportListRow' is defined but never used.","'open' is assigned a value but never used.","'alertType' is assigned a value but never used.","'alertMessage' is assigned a value but never used.","'loadingProgress' is assigned a value but never used.","'setLoadingProgress' is assigned a value but never used.","'handleAlertClose' is assigned a value but never used.",["524"],"'branchId' is assigned a value but never used.","'branchname' is assigned a value but never used.","'categoryId' is assigned a value but never used.","'categoryname' is assigned a value but never used.","'Alert' is defined but never used.","'LinearProgressLoad' is defined but never used.","'api' is defined but never used.","'useNavigate' is defined but never used.","'Dashboard' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"525","fix":"526"},{"desc":"527","fix":"528"},{"desc":"529","fix":"530"},{"desc":"531","fix":"532"},{"desc":"529","fix":"533"},{"desc":"534","fix":"535"},{"desc":"525","fix":"536"},{"desc":"527","fix":"537"},{"desc":"529","fix":"538"},{"desc":"539","fix":"540"},{"desc":"531","fix":"541"},"Update the dependencies array to be: [navigate]",{"range":"542","text":"543"},"Update the dependencies array to be: [retrieveUsers]",{"range":"544","text":"545"},"Update the dependencies array to be: [retrieveBranches]",{"range":"546","text":"547"},"Update the dependencies array to be: [retrieveData]",{"range":"548","text":"549"},{"range":"550","text":"547"},"Update the dependencies array to be: [retrieveProducts]",{"range":"551","text":"552"},{"range":"553","text":"543"},{"range":"554","text":"545"},{"range":"555","text":"547"},"Update the dependencies array to be: [retrieveCategories]",{"range":"556","text":"557"},{"range":"558","text":"549"},[3474,3476],"[navigate]",[4474,4476],"[retrieveUsers]",[6145,6147],"[retrieveBranches]",[6441,6443],"[retrieveData]",[5423,5425],[10404,10406],"[retrieveProducts]",[4073,4075],[5444,5446],[2858,2860],[2886,2888],"[retrieveCategories]",[2162,2164]]