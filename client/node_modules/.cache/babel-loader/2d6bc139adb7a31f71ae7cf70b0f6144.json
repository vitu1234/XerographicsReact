{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\xerographics\\\\client\\\\src\\\\components\\\\pos\\\\TableCart.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport { useState } from 'react';\nimport Paper from '@mui/material/Paper';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TablePagination from '@mui/material/TablePagination';\nimport TableRow from '@mui/material/TableRow';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  id: 'item',\n  label: 'Item'\n}, {\n  id: 'qty',\n  label: 'Qty',\n  align: 'right'\n}, {\n  id: 'action',\n  label: 'Action',\n  align: 'right'\n}];\n\nfunction createData(name, code, population) {\n  return {\n    name,\n    code,\n    population\n  };\n}\n\nconst rows = [createData('India', 'IN', 13271354)];\n\nfunction TableCart(props) {\n  _s();\n\n  console.log(props);\n  const allProducts = props.products;\n\n  if (props.addProduct !== -1) {}\n\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    sx: {\n      width: '100%',\n      overflow: 'hidden'\n    },\n    children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n      sx: {\n        maxHeight: 440\n      },\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        stickyHeader: true,\n        \"aria-label\": \"sticky table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: columns.map(column => /*#__PURE__*/_jsxDEV(TableCell, {\n              align: column.align,\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: column.label\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 37\n              }, this)\n            }, column.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => {\n            return /*#__PURE__*/_jsxDEV(TableRow, {\n              hover: true,\n              role: \"checkbox\",\n              tabIndex: -1,\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: row.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: row.code\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: row.population\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 41\n              }, this)]\n            }, row.code, true, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 37\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n      rowsPerPageOptions: [10, 25, 50, 100],\n      component: \"div\",\n      count: rows.length,\n      rowsPerPage: rowsPerPage,\n      page: page,\n      onPageChange: handleChangePage,\n      onRowsPerPageChange: handleChangeRowsPerPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TableCart, \"65nbIEELuFY2eeUXbED/8VsHrEQ=\");\n\n_c = TableCart;\nexport default TableCart;\n\nvar _c;\n\n$RefreshReg$(_c, \"TableCart\");","map":{"version":3,"sources":["C:/xampp/htdocs/xerographics/client/src/components/pos/TableCart.js"],"names":["React","useState","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","columns","id","label","align","createData","name","code","population","rows","TableCart","props","console","log","allProducts","products","addProduct","page","setPage","rowsPerPage","setRowsPerPage","handleChangePage","event","newPage","handleChangeRowsPerPage","target","value","width","overflow","maxHeight","map","column","slice","row","length"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { useState } from 'react';\r\nimport Paper from '@mui/material/Paper';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TablePagination from '@mui/material/TablePagination';\r\nimport TableRow from '@mui/material/TableRow';\r\n\r\nconst columns = [\r\n    { id: 'item', label: 'Item' },\r\n    {\r\n        id: 'qty',\r\n        label: 'Qty',\r\n        align: 'right',\r\n    },\r\n\r\n    {\r\n        id: 'action',\r\n        label: 'Action',\r\n        align: 'right',\r\n    },\r\n];\r\n\r\nfunction createData(name, code, population) {\r\n    return { name, code, population };\r\n}\r\n\r\nconst rows = [\r\n    createData('India', 'IN', 13271354),\r\n\r\n];\r\n\r\n\r\nfunction TableCart(props) {\r\n\r\n\r\n    console.log(props)\r\n\r\n    const allProducts = props.products;\r\n    if (props.addProduct !== -1) {\r\n\r\n    }\r\n\r\n\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(+event.target.value);\r\n        setPage(0);\r\n    };\r\n\r\n    return (\r\n        <Paper sx={{ width: '100%', overflow: 'hidden' }}>\r\n            <TableContainer sx={{ maxHeight: 440 }}>\r\n                <Table stickyHeader aria-label=\"sticky table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            {columns.map((column) => (\r\n                                <TableCell\r\n                                    key={column.id}\r\n                                    align={column.align}\r\n                                >\r\n                                    <strong>{column.label}</strong>\r\n                                </TableCell>\r\n                            ))}\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {rows\r\n                            .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                            .map((row) => {\r\n                                return (\r\n                                    <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\r\n                                        <TableCell >\r\n                                            {row.name}\r\n                                        </TableCell>\r\n                                        <TableCell align='right'>\r\n                                            {row.code}\r\n                                        </TableCell>\r\n                                        <TableCell align='right'>\r\n                                            {row.population}\r\n                                        </TableCell>\r\n\r\n                                    </TableRow>\r\n                                );\r\n                            })}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n            <TablePagination\r\n                rowsPerPageOptions={[10, 25, 50, 100]}\r\n                component=\"div\"\r\n                count={rows.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                onPageChange={handleChangePage}\r\n                onRowsPerPageChange={handleChangeRowsPerPage}\r\n            />\r\n        </Paper>\r\n    );\r\n}\r\n\r\n\r\nexport default TableCart;\r\n"]},"metadata":{},"sourceType":"module"}