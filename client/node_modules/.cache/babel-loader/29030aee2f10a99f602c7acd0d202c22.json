{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\xerographics\\\\client\\\\src\\\\components\\\\reports\\\\category\\\\CategorySearchList.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport React from \"react\";\nimport Autocomplete from '@mui/material/Autocomplete';\nimport TextField from '@mui/material/TextField';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CategorySearchList(props) {\n  _s();\n\n  const categories = props.categories;\n  const [categoryId, setCategoryId] = useState(-1);\n  const [categoryname, setCategoryName] = useState(''); //users auto complete\n\n  const handleAutocomplete = (event, newValue) => {\n    if (newValue != null) {\n      console.log(newValue);\n      setCategoryId(newValue.id);\n      props.setCategoryId(newValue.id);\n      setCategoryName('Category: ' + newValue.category_name);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Autocomplete, {\n    id: \"free-solo-demo\",\n    freeSolo: true,\n    options: categories,\n    getOptionLabel: categories => categories.category_name,\n    onChange: handleAutocomplete,\n    renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n      label: \"Category sales...\",\n      fullWidth: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 37\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CategorySearchList, \"atjogdT+brgQ/1jngPOcn6p6/sc=\");\n\n_c = CategorySearchList;\nexport default BranchSearchList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CategorySearchList\");","map":{"version":3,"sources":["C:/xampp/htdocs/xerographics/client/src/components/reports/category/CategorySearchList.js"],"names":["useState","React","Autocomplete","TextField","CategorySearchList","props","categories","categoryId","setCategoryId","categoryname","setCategoryName","handleAutocomplete","event","newValue","console","log","id","category_name","params","BranchSearchList"],"mappings":";;;AAAA,SAAQA,QAAR,QAAuB,OAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;;;AAGA,SAASC,kBAAT,CAA4BC,KAA5B,EAAmC;AAAA;;AAC/B,QAAMC,UAAU,GAAED,KAAK,CAACC,UAAxB;AAEA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,CAAC,CAAF,CAA5C;AACA,QAAM,CAACS,YAAD,EAAeC,eAAf,IAAkCV,QAAQ,CAAC,EAAD,CAAhD,CAJ+B,CAO/B;;AACA,QAAMW,kBAAkB,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC5C,QAAIA,QAAQ,IAAI,IAAhB,EAAsB;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAL,MAAAA,aAAa,CAACK,QAAQ,CAACG,EAAV,CAAb;AACAX,MAAAA,KAAK,CAACG,aAAN,CAAoBK,QAAQ,CAACG,EAA7B;AACAN,MAAAA,eAAe,CAAC,eAAeG,QAAQ,CAACI,aAAzB,CAAf;AACH;AACJ,GAPD;;AAUA,sBAGI,QAAC,YAAD;AAEI,IAAA,EAAE,EAAC,gBAFP;AAGI,IAAA,QAAQ,MAHZ;AAII,IAAA,OAAO,EAAEX,UAJb;AAKI,IAAA,cAAc,EAAEA,UAAU,IAAKA,UAAU,CAACW,aAL9C;AAMI,IAAA,QAAQ,EAAEN,kBANd;AAOI,IAAA,WAAW,EAAEO,MAAM,iBAAK,QAAC,SAAD,OACZA,MADY;AAEhB,MAAA,KAAK,EAAC,mBAFU;AAGhB,MAAA,SAAS;AAHO;AAAA;AAAA;AAAA;AAAA;AAP5B;AAAA;AAAA;AAAA;AAAA,UAHJ;AAmBH;;GArCQd,kB;;KAAAA,kB;AAuCT,eAAee,gBAAf","sourcesContent":["import {useState} from 'react';\r\nimport React from \"react\";\r\n\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport TextField from '@mui/material/TextField';\r\n\r\n\r\nfunction CategorySearchList(props) {\r\n    const categories= props.categories;\r\n\r\n    const [categoryId, setCategoryId] = useState(-1);\r\n    const [categoryname, setCategoryName] = useState('');\r\n\r\n\r\n    //users auto complete\r\n    const handleAutocomplete = (event, newValue) => {\r\n        if (newValue != null) {\r\n            console.log(newValue)\r\n            setCategoryId(newValue.id);\r\n            props.setCategoryId(newValue.id)\r\n            setCategoryName('Category: ' + newValue.category_name);\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n\r\n\r\n        <Autocomplete\r\n\r\n            id=\"free-solo-demo\"\r\n            freeSolo\r\n            options={categories}\r\n            getOptionLabel={categories => (categories.category_name )}\r\n            onChange={handleAutocomplete}\r\n            renderInput={params => (<TextField\r\n                    {...params}\r\n                    label=\"Category sales...\"\r\n                    fullWidth/>\r\n            )}\r\n        />\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default BranchSearchList;"]},"metadata":{},"sourceType":"module"}