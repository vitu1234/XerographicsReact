{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\xerographics\\\\client\\\\src\\\\components\\\\reports\\\\InvoiceDetails.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport api from \"../../api/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction InvoiceDetails(props) {\n  _s();\n\n  const location = useLocation();\n  const report = location.state.report;\n  const navigate = useNavigate(); //alert state\n\n  const [open, setOpen] = useState(false); //dialog state\n\n  const [alertType, setAlertType] = useState(\"\");\n  const [alertMessage, setAlertMessage] = useState(\"\");\n  const [loadingProgress, setLoadingProgress] = useState(false);\n  const [invoiceItems, setInvoiceItems] = useState([]);\n\n  const handleAlertClose = () => {\n    setOpen(false);\n    setAlertMessage('');\n    setAlertType('');\n  }; // retrieve data\n\n\n  const retrieveData = () => {\n    api.get('/fetchAllBranches').then(function (response) {\n      // console.log(response.data)\n      if (response.data.error == false) {\n        // console.log(response.data.users)\n        setBranches(response.data.branches);\n        setBrands(response.data.brands);\n        setUnits(response.data.units);\n        setCategories(response.data.categories); // return response.data.users;\n      } else {\n        // console.log(\"sjs\")\n        // return [];\n        setAlertType('error');\n        setAlertMessage(response.data.message);\n        setOpen(true);\n      }\n    }).catch(function (myJson) {\n      // console.log(myJson);\n      setAlertType('error');\n      setAlertMessage('Error 500: Internal server error');\n      setOpen(true);\n    });\n  };\n\n  useEffect(() => {\n    retrieveData();\n  }, []);\n  const renderBranchList = branches.map(branch => {\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      value: branch.id,\n      children: branch.branch_name\n    }, branch.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n}\n\n_s(InvoiceDetails, \"OtOV40kmHb6KlflFZ7kSReOspVA=\", false, function () {\n  return [useLocation, useNavigate];\n});\n\n_c = InvoiceDetails;\nexport default InvoiceDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"InvoiceDetails\");","map":{"version":3,"sources":["C:/xampp/htdocs/xerographics/client/src/components/reports/InvoiceDetails.js"],"names":["React","useEffect","useState","useLocation","useNavigate","api","InvoiceDetails","props","location","report","state","navigate","open","setOpen","alertType","setAlertType","alertMessage","setAlertMessage","loadingProgress","setLoadingProgress","invoiceItems","setInvoiceItems","handleAlertClose","retrieveData","get","then","response","data","error","setBranches","branches","setBrands","brands","setUnits","units","setCategories","categories","message","catch","myJson","renderBranchList","map","branch","id","branch_name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,kBAAvC;AACA,OAAOC,GAAP,MAAgB,eAAhB;;;AAEA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAAA;;AAE3B,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAMM,MAAM,GAAGD,QAAQ,CAACE,KAAT,CAAeD,MAA9B;AACA,QAAME,QAAQ,GAAGP,WAAW,EAA5B,CAJ2B,CAO3B;;AACA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,KAAD,CAAhC,CAR2B,CAS3B;;AAEA,QAAM,CAACY,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACc,YAAD,EAAeC,eAAf,IAAkCf,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACgB,eAAD,EAAkBC,kBAAlB,IAAwCjB,QAAQ,CAAC,KAAD,CAAtD;AACA,QAAM,CAACkB,YAAD,EAAeC,eAAf,IAAkCnB,QAAQ,CAAC,EAAD,CAAhD;;AAGA,QAAMoB,gBAAgB,GAAG,MAAM;AAC3BT,IAAAA,OAAO,CAAC,KAAD,CAAP;AACAI,IAAAA,eAAe,CAAC,EAAD,CAAf;AACAF,IAAAA,YAAY,CAAC,EAAD,CAAZ;AACH,GAJD,CAjB2B,CAuB3B;;;AACA,QAAMQ,YAAY,GAAG,MAAM;AACvBlB,IAAAA,GAAG,CAACmB,GAAJ,CAAQ,mBAAR,EAGKC,IAHL,CAGU,UAAUC,QAAV,EAAoB;AACtB;AACA,UAAIA,QAAQ,CAACC,IAAT,CAAcC,KAAd,IAAuB,KAA3B,EAAkC;AAE9B;AACAC,QAAAA,WAAW,CAACH,QAAQ,CAACC,IAAT,CAAcG,QAAf,CAAX;AACAC,QAAAA,SAAS,CAACL,QAAQ,CAACC,IAAT,CAAcK,MAAf,CAAT;AACAC,QAAAA,QAAQ,CAACP,QAAQ,CAACC,IAAT,CAAcO,KAAf,CAAR;AACAC,QAAAA,aAAa,CAACT,QAAQ,CAACC,IAAT,CAAcS,UAAf,CAAb,CAN8B,CAO9B;AAEH,OATD,MASO;AACH;AACA;AACArB,QAAAA,YAAY,CAAC,OAAD,CAAZ;AACAE,QAAAA,eAAe,CAACS,QAAQ,CAACC,IAAT,CAAcU,OAAf,CAAf;AACAxB,QAAAA,OAAO,CAAC,IAAD,CAAP;AAEH;AAEJ,KAvBL,EAwBKyB,KAxBL,CAwBW,UAAUC,MAAV,EAAkB;AACrB;AACAxB,MAAAA,YAAY,CAAC,OAAD,CAAZ;AACAE,MAAAA,eAAe,CAAC,kCAAD,CAAf;AACAJ,MAAAA,OAAO,CAAC,IAAD,CAAP;AACH,KA7BL;AA8BH,GA/BD;;AAmCAZ,EAAAA,SAAS,CAAC,MAAM;AACZsB,IAAAA,YAAY;AACf,GAFQ,EAEN,EAFM,CAAT;AAIA,QAAMiB,gBAAgB,GAAGV,QAAQ,CAACW,GAAT,CAAcC,MAAD,IAAY;AAC9C,wBACI;AAAwB,MAAA,KAAK,EAAEA,MAAM,CAACC,EAAtC;AAAA,gBAA4CD,MAAM,CAACE;AAAnD,OAAaF,MAAM,CAACC,EAApB;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH,GAJwB,CAAzB;AAMA,sBACI;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH;;GAxEQrC,c;UAEYH,W,EAEAC,W;;;KAJZE,c;AA0ET,eAAeA,cAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport {useLocation, useNavigate} from \"react-router-dom\";\r\nimport api from \"../../api/api\";\r\n\r\nfunction InvoiceDetails(props) {\r\n\r\n    const location = useLocation()\r\n    const report = location.state.report;\r\n    const navigate = useNavigate();\r\n\r\n\r\n    //alert state\r\n    const [open, setOpen] = useState(false);\r\n    //dialog state\r\n\r\n    const [alertType, setAlertType] = useState(\"\");\r\n    const [alertMessage, setAlertMessage] = useState(\"\");\r\n    const [loadingProgress, setLoadingProgress] = useState(false);\r\n    const [invoiceItems, setInvoiceItems] = useState([])\r\n\r\n\r\n    const handleAlertClose = () => {\r\n        setOpen(false);\r\n        setAlertMessage('')\r\n        setAlertType('')\r\n    };\r\n\r\n    // retrieve data\r\n    const retrieveData = () => {\r\n        api.get('/fetchAllBranches'\r\n\r\n        )\r\n            .then(function (response) {\r\n                // console.log(response.data)\r\n                if (response.data.error == false) {\r\n\r\n                    // console.log(response.data.users)\r\n                    setBranches(response.data.branches)\r\n                    setBrands(response.data.brands)\r\n                    setUnits(response.data.units)\r\n                    setCategories(response.data.categories)\r\n                    // return response.data.users;\r\n\r\n                } else {\r\n                    // console.log(\"sjs\")\r\n                    // return [];\r\n                    setAlertType('error')\r\n                    setAlertMessage(response.data.message)\r\n                    setOpen(true)\r\n\r\n                }\r\n\r\n            })\r\n            .catch(function (myJson) {\r\n                // console.log(myJson);\r\n                setAlertType('error')\r\n                setAlertMessage('Error 500: Internal server error')\r\n                setOpen(true)\r\n            });\r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        retrieveData();\r\n    }, [])\r\n\r\n    const renderBranchList = branches.map((branch) => {\r\n        return (\r\n            <option key={branch.id} value={branch.id} >{branch.branch_name}</option>\r\n        );\r\n    })\r\n\r\n    return (\r\n        <div></div>\r\n    );\r\n}\r\n\r\nexport default InvoiceDetails;"]},"metadata":{},"sourceType":"module"}