{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\xerographics\\\\client\\\\src\\\\components\\\\customers\\\\AddCustomerModal.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport api from \"../../api/api\";\nimport Alert from \"../alerts/alert\";\nimport { useEffect, useState } from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport LinearProgressLoad from \"../alerts/LinearProgress\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AddCustomerModal(props) {\n  _s();\n\n  const navigate = useNavigate(); // console.log(props)\n  //alert state\n\n  const [open, setOpen] = useState(false); //dialog state\n\n  const [alertType, setAlertType] = useState(\"\");\n  const [alertMessage, setAlertMessage] = useState(\"\");\n  const [loadingProgress, setLoadingProgress] = useState(false);\n\n  const handleAlertClose = () => {\n    setOpen(false);\n    setAlertMessage('');\n    setAlertType('');\n  };\n\n  const [customer_name, setName] = useState('');\n  const [customer_phone, setPhone] = useState('');\n  const [address, setAddress] = useState('');\n\n  const addCustomer = e => {\n    // console.log(\"sjsjs\")\n    e.preventDefault();\n\n    if (customer_name === \"\" || customer_phone === \"\") {\n      setOpen(true);\n      setAlertMessage('All fields are mandatory');\n      setAlertType('error');\n    } else {\n      const state = {\n        customer_name: customer_name,\n        customer_phone: customer_phone,\n        customer_address: address\n      };\n      AddCustomerHandler(state);\n      setName(''); // clear form fields \n\n      setPhone(''); // clear form fields \n\n      setAddress(''); // clear form fields \n    }\n  };\n\n  const AddCustomerHandler = state => {\n    console.log(state);\n    api.post('/saveCustomer', state).then(function (response) {\n      setLoadingProgress(false); // console.log(response.data)\n\n      if (response.data.error == false) {\n        // console.log(response.data.users)\n        // return response.data.users;\n        setAlertType('success');\n        setAlertMessage(response.data.message);\n        setOpen(true);\n        props.handleDialogClose();\n        props.handleContactUpdate(); // setTimeout(() => { navigate('/customers'); }, 1000)\n      } else {\n        // console.log(response.data.message)\n        // return [];\n        setAlertType('error');\n        setAlertMessage(response.data.message);\n        setOpen(true);\n      }\n    }).catch(function (error) {\n      setLoadingProgress(false);\n      console.log(error);\n\n      if (error.response.status === 401) {\n        navigate('/login'); //place your reentry code\n\n        console.log('Unauthorised');\n        sessionStorage.removeItem('status');\n        sessionStorage.removeItem('jwt_token');\n        setAlertType('error');\n        setAlertMessage(\"Error 401: Unauthorised user\");\n        setOpen(true);\n      } else {\n        console.log('unknown error');\n        window.sessionStorage.setItem('status', false);\n        setAlertType('error');\n        setAlertMessage(\"Error 500: Internal server error\");\n        setOpen(true);\n      }\n    });\n  };\n\n  const loading = () => {\n    if (loadingProgress) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(LinearProgressLoad, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Dialog, {\n      open: props.dialogOpen,\n      onClose: props.handleDialogClose,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Add Customer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [loading(), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: addCustomer,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-6\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: [\"Customer Name \", /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-danger\",\n                    children: \"*\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 143,\n                    columnNumber: 58\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 143,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  value: customer_name,\n                  onChange: e => setName(e.target.value),\n                  type: \"text\",\n                  className: \"form-control\",\n                  name: \"efname\",\n                  id: \"efname\",\n                  placeholder: \"Ex: John\",\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 144,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-6\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: [\"Customer Phone \", /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-danger\",\n                    children: \"*\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 152,\n                    columnNumber: 59\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 152,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  value: customer_phone,\n                  onChange: e => setPhone(e.target.value),\n                  type: \"text\",\n                  className: \"form-control\",\n                  name: \"elname\",\n                  id: \"elname\",\n                  placeholder: \"Ex: +26588299292\",\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-12\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Address\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 162,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                  value: address,\n                  onChange: e => setAddress(e.target.value),\n                  className: \"form-control\",\n                  placeholder: \"Ex: Area 25 sector 3\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-footer\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              id: \"btn_add\",\n              className: \"btn btn-primary\",\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: props.handleDialogClose,\n              type: \"button\",\n              id: \"btn_add\",\n              className: \"btn btn-secondary\",\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Alert, {\n      openAlert: open,\n      alertMessage: alertMessage,\n      alertType: alertType,\n      handleAlertClose: handleAlertClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AddCustomerModal, \"rICUwCxyJ3hJgJGosnrsDqbn544=\", false, function () {\n  return [useNavigate];\n});\n\n_c = AddCustomerModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddCustomerModal\");","map":{"version":3,"sources":["C:/xampp/htdocs/xerographics/client/src/components/customers/AddCustomerModal.js"],"names":["React","Button","TextField","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","api","Alert","useEffect","useState","useNavigate","LinearProgressLoad","AddCustomerModal","props","navigate","open","setOpen","alertType","setAlertType","alertMessage","setAlertMessage","loadingProgress","setLoadingProgress","handleAlertClose","customer_name","setName","customer_phone","setPhone","address","setAddress","addCustomer","e","preventDefault","state","customer_address","AddCustomerHandler","console","log","post","then","response","data","error","message","handleDialogClose","handleContactUpdate","catch","status","sessionStorage","removeItem","window","setItem","loading","dialogOpen","target","value"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport TextField from '@mui/material/TextField';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport api from \"../../api/api\";\r\nimport Alert from \"../alerts/alert\";\r\nimport {useEffect, useState} from 'react';\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport LinearProgressLoad from \"../alerts/LinearProgress\";\r\n\r\n\r\nexport default function AddCustomerModal(props) {\r\n    const navigate = useNavigate();\r\n\r\n    // console.log(props)\r\n\r\n    //alert state\r\n    const [open, setOpen] = useState(false);\r\n    //dialog state\r\n\r\n    const [alertType, setAlertType] = useState(\"\");\r\n    const [alertMessage, setAlertMessage] = useState(\"\");\r\n    const [loadingProgress, setLoadingProgress] = useState(false);\r\n\r\n\r\n    const handleAlertClose = () => {\r\n        setOpen(false);\r\n        setAlertMessage('')\r\n        setAlertType('')\r\n    };\r\n\r\n\r\n    const [customer_name, setName] = useState('');\r\n    const [customer_phone, setPhone] = useState('');\r\n    const [address, setAddress] = useState('');\r\n\r\n\r\n    const addCustomer = (e) => {\r\n        // console.log(\"sjsjs\")\r\n        e.preventDefault()\r\n        if (customer_name === \"\" || customer_phone === \"\") {\r\n            setOpen(true);\r\n            setAlertMessage('All fields are mandatory')\r\n            setAlertType('error')\r\n        } else {\r\n            const state = {\r\n                customer_name: customer_name,\r\n                customer_phone: customer_phone,\r\n                customer_address: address\r\n            }\r\n            AddCustomerHandler(state)\r\n            setName('') // clear form fields \r\n            setPhone('') // clear form fields \r\n            setAddress('') // clear form fields \r\n\r\n\r\n        }\r\n    }\r\n\r\n    const AddCustomerHandler = (state) => {\r\n        console.log(state)\r\n\r\n        api.post('/saveCustomer'\r\n            , state\r\n        )\r\n            .then(function (response) {\r\n                setLoadingProgress(false)\r\n                // console.log(response.data)\r\n                if (response.data.error == false) {\r\n\r\n                    // console.log(response.data.users)\r\n                    // return response.data.users;\r\n                    setAlertType('success')\r\n                    setAlertMessage(response.data.message)\r\n                    setOpen(true)\r\n\r\n                    props.handleDialogClose()\r\n                    props.handleContactUpdate()\r\n                    // setTimeout(() => { navigate('/customers'); }, 1000)\r\n\r\n                } else {\r\n                    // console.log(response.data.message)\r\n                    // return [];\r\n                    setAlertType('error')\r\n                    setAlertMessage(response.data.message)\r\n                    setOpen(true)\r\n                }\r\n\r\n            })\r\n            .catch(function (error) {\r\n                setLoadingProgress(false)\r\n                console.log(error);\r\n\r\n\r\n                if (error.response.status === 401) {\r\n                    navigate('/login')\r\n                    //place your reentry code\r\n                    console.log('Unauthorised')\r\n                    sessionStorage.removeItem('status')\r\n                    sessionStorage.removeItem('jwt_token')\r\n                    setAlertType('error')\r\n                    setAlertMessage(\"Error 401: Unauthorised user\")\r\n                    setOpen(true)\r\n                } else {\r\n                    console.log('unknown error')\r\n                    window.sessionStorage.setItem('status', false)\r\n                    setAlertType('error')\r\n                    setAlertMessage(\"Error 500: Internal server error\")\r\n                    setOpen(true)\r\n                }\r\n            });\r\n    }\r\n\r\n\r\n    const loading = () => {\r\n        if (loadingProgress) {\r\n            return (\r\n                <div className=\"mb-3\">\r\n                    <LinearProgressLoad/>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n\r\n            <Dialog open={props.dialogOpen} onClose={props.handleDialogClose}>\r\n                <DialogTitle>Add Customer</DialogTitle>\r\n                <DialogContent>\r\n                    {loading()}\r\n                    <form onSubmit={addCustomer}>\r\n\r\n\r\n                        <div className=\"row\">\r\n\r\n\r\n                            <div className=\"col-md-6\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Customer Name <span className='text-danger'>*</span></label>\r\n                                    <input value={customer_name} onChange={(e) => setName(e.target.value)} type=\"text\"\r\n                                           className=\"form-control\" name=\"efname\" id=\"efname\" placeholder=\"Ex: John\"\r\n                                           required/>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"col-md-6\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Customer Phone <span className='text-danger'>*</span></label>\r\n                                    <input value={customer_phone} onChange={(e) => setPhone(e.target.value)} type=\"text\"\r\n                                           className=\"form-control\" name=\"elname\" id=\"elname\"\r\n                                           placeholder=\"Ex: +26588299292\" required/>\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                            <div className=\"col-md-12\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Address</label>\r\n                                    <textarea value={address} onChange={(e) => setAddress(e.target.value)}\r\n                                              className=\"form-control\" placeholder=\"Ex: Area 25 sector 3\"></textarea>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <div className=\"modal-footer\">\r\n                            <button type=\"submit\" id=\"btn_add\" className=\"btn btn-primary\">Save</button>\r\n                            <button onClick={props.handleDialogClose} type=\"button\" id=\"btn_add\"\r\n                                    className=\"btn btn-secondary\">Close\r\n                            </button>\r\n                        </div>\r\n\r\n                    </form>\r\n                </DialogContent>\r\n            </Dialog>\r\n            <Alert openAlert={open} alertMessage={alertMessage} alertType={alertType}\r\n                   handleAlertClose={handleAlertClose}/>\r\n\r\n        </div>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}