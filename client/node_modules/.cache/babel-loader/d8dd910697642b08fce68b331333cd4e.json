{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\xerographics\\\\client\\\\src\\\\components\\\\pos\\\\ProductsRight.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport React from \"react\";\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport Badge from '@mui/material/Badge';\nimport ShoppingCartIcon from '@mui/icons-material/ShoppingCart';\nimport { styled } from '@mui/material/styles';\nimport TableCart from \"./TableCart\";\nimport Autocomplete from '@mui/material/Autocomplete';\nimport TextField from '@mui/material/TextField';\nimport IconButton from '@mui/material/IconButton';\nimport Divider from '@mui/material/Divider';\nimport AddIcon from '@mui/icons-material/Add';\nimport AddCustomerModal from \"../customers/AddCustomerModal\";\nimport Checkout from './Checkout';\nimport PersonAddAlt1Icon from '@mui/icons-material/PersonAddAlt1';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ProductsRight(props) {\n  _s();\n\n  const customers = props.customers;\n  const cartItems = props.cartItems; //dialog/modal state\n\n  const [dialogOpen, setDialogOpen] = useState(false);\n  const [customerId, setCustomerId] = useState(-1);\n  const [customerName, setCustomerName] = useState('Customer: Default'); //dialog open\n\n  const handleClickOpen = () => {\n    setDialogOpen(true);\n  };\n\n  const handleDialogClose = () => {\n    setDialogOpen(false);\n  }; //style shopping cart badge\n\n\n  const StyledBadge = styled(Badge)(_ref => {\n    let {\n      theme\n    } = _ref;\n    return {\n      '& .MuiBadge-badge': {\n        right: -3,\n        top: 13,\n        border: `2px solid ${theme.palette.background.paper}`,\n        padding: '0 4px'\n      }\n    };\n  }); //customer auto complete\n\n  const handleAutocomplete = (event, newValue) => {\n    if (newValue != null) {\n      console.log(newValue);\n      setCustomerId(newValue.id);\n      setCustomerName('Customer: ' + newValue.customer_name);\n    }\n  };\n\n  const Item = styled(Paper)(_ref2 => {\n    let {\n      theme\n    } = _ref2;\n    return { ...theme.typography.body2,\n      padding: theme.spacing(1),\n      textAlign: 'center',\n      color: theme.palette.text.secondary\n    };\n  });\n\n  const btnCheckout = () => {\n    if (cartItems.length > 0) {\n      let total_calculated = 0;\n\n      for (var i = 0; i < cartItems.length; i++) {\n        total_calculated += parseInt(cartItems[i].qty) * parseInt(cartItems[i].product_price);\n      }\n\n      return /*#__PURE__*/_jsxDEV(Checkout, {\n        total_calculated: total_calculated,\n        tax_amount: props.tax_amount,\n        cartItems: cartItems,\n        customerId: customerId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Item, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      spacing: 2,\n      style: {\n        textAlign: 'left'\n      },\n      variant: \"h5\",\n      gutterBottom: true,\n      component: \"div\",\n      children: [\"Shopping Cart\", /*#__PURE__*/_jsxDEV(IconButton, {\n        spacing: 2,\n        \"aria-label\": \"cart\",\n        children: /*#__PURE__*/_jsxDEV(StyledBadge, {\n          badgeContent: cartItems.length,\n          color: \"secondary\",\n          children: /*#__PURE__*/_jsxDEV(ShoppingCartIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      columns: 16,\n      sx: {\n        mb: '20px',\n        mt: '10px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        container: true,\n        style: {\n          width: \"100%\"\n        },\n        component: \"form\",\n        sx: {\n          p: '2px 4px',\n          ml: '20px',\n          mr: '20px',\n          mb: '10px',\n          display: 'flex',\n          alignItems: 'center',\n          width: '100%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Autocomplete, {\n          id: \"free-solo-demo\",\n          freeSolo: true,\n          options: customers,\n          style: {\n            width: '80%',\n            padding: '2px '\n          },\n          getOptionLabel: customers => customers.customer_name,\n          onChange: handleAutocomplete,\n          renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n            label: \"Select customer...\",\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 49\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          sx: {\n            height: 28,\n            m: 0.5\n          },\n          orientation: \"vertical\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: handleClickOpen,\n          color: \"primary\",\n          sx: {\n            p: '10px'\n          },\n          \"aria-label\": \"directions\",\n          children: /*#__PURE__*/_jsxDEV(PersonAddAlt1Icon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      spacing: 2,\n      style: {\n        textAlign: 'left'\n      },\n      variant: \"p\",\n      gutterBottom: true,\n      component: \"div\",\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        children: customerName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TableCart, {\n      style: {\n        maxHeight: 500,\n        overflow: 'auto'\n      },\n      cartItems: cartItems,\n      handleClickAddCart: props.handleClickAddCart,\n      getDeleteProductIdFromCart: props.handleDeleteFromCart\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }, this), btnCheckout(), /*#__PURE__*/_jsxDEV(AddCustomerModal, {\n      handleContactUpdate: props.retrieveCustomers,\n      dialogOpen: dialogOpen,\n      handleDialogClose: handleDialogClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ProductsRight, \"cMxyk9B+EWyKf8ecI460E5IhYc8=\");\n\n_c = ProductsRight;\nexport default ProductsRight;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductsRight\");","map":{"version":3,"sources":["C:/xampp/htdocs/xerographics/client/src/components/pos/ProductsRight.js"],"names":["useState","React","Paper","Grid","Typography","Badge","ShoppingCartIcon","styled","TableCart","Autocomplete","TextField","IconButton","Divider","AddIcon","AddCustomerModal","Checkout","PersonAddAlt1Icon","ProductsRight","props","customers","cartItems","dialogOpen","setDialogOpen","customerId","setCustomerId","customerName","setCustomerName","handleClickOpen","handleDialogClose","StyledBadge","theme","right","top","border","palette","background","paper","padding","handleAutocomplete","event","newValue","console","log","id","customer_name","Item","typography","body2","spacing","textAlign","color","text","secondary","btnCheckout","length","total_calculated","i","parseInt","qty","product_price","tax_amount","mb","mt","width","p","ml","mr","display","alignItems","params","height","m","maxHeight","overflow","handleClickAddCart","handleDeleteFromCart","retrieveCustomers"],"mappings":"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","sourcesContent":["import { useState } from 'react';\r\nimport React from \"react\";\r\nimport Paper from '@mui/material/Paper';\r\nimport Grid from '@mui/material/Grid';\r\n\r\nimport Typography from '@mui/material/Typography';\r\n\r\nimport Badge from '@mui/material/Badge';\r\nimport ShoppingCartIcon from '@mui/icons-material/ShoppingCart';\r\nimport { styled } from '@mui/material/styles';\r\n\r\n\r\nimport TableCart from \"./TableCart\";\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport TextField from '@mui/material/TextField';\r\n\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Divider from '@mui/material/Divider';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport AddCustomerModal from \"../customers/AddCustomerModal\";\r\nimport Checkout from './Checkout';\r\nimport PersonAddAlt1Icon from '@mui/icons-material/PersonAddAlt1';\r\n\r\n\r\nfunction ProductsRight(props) {\r\n    const customers = props.customers;\r\n    const cartItems = props.cartItems;\r\n\r\n    //dialog/modal state\r\n    const [dialogOpen, setDialogOpen] = useState(false);\r\n\r\n    const [customerId, setCustomerId] = useState(-1);\r\n    const [customerName, setCustomerName] = useState('Customer: Default');\r\n\r\n\r\n\r\n    //dialog open\r\n    const handleClickOpen = () => {\r\n        setDialogOpen(true);\r\n    };\r\n    const handleDialogClose = () => {\r\n        setDialogOpen(false);\r\n    };\r\n\r\n\r\n    //style shopping cart badge\r\n    const StyledBadge = styled(Badge)(({ theme }) => ({\r\n        '& .MuiBadge-badge': {\r\n            right: -3,\r\n            top: 13,\r\n            border: `2px solid ${theme.palette.background.paper}`,\r\n            padding: '0 4px',\r\n        },\r\n    }));\r\n\r\n    //customer auto complete\r\n    const handleAutocomplete = (event, newValue) => {\r\n        if (newValue != null) {\r\n            console.log(newValue)\r\n            setCustomerId(newValue.id);\r\n            setCustomerName('Customer: ' + newValue.customer_name);\r\n        }\r\n    }\r\n\r\n    const Item = styled(Paper)(({ theme }) => ({\r\n        ...theme.typography.body2,\r\n        padding: theme.spacing(1),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n    }));\r\n\r\n\r\n    const btnCheckout = () => {\r\n        if (cartItems.length > 0) {\r\n\r\n            let total_calculated = 0;\r\n            for (var i = 0; i < cartItems.length; i++) {\r\n                total_calculated += (parseInt(cartItems[i].qty) * parseInt(cartItems[i].product_price));\r\n            }\r\n\r\n            return (\r\n                <Checkout total_calculated={total_calculated} tax_amount={props.tax_amount} cartItems={cartItems} customerId={customerId} />\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Item>\r\n            <Typography spacing={2} style={{ textAlign: 'left' }} variant=\"h5\" gutterBottom component=\"div\">\r\n                Shopping Cart\r\n                <IconButton spacing={2} aria-label=\"cart\">\r\n                    <StyledBadge badgeContent={cartItems.length} color=\"secondary\">\r\n                        <ShoppingCartIcon />\r\n                    </StyledBadge>\r\n                </IconButton>\r\n            </Typography>\r\n            <Grid container spacing={2} columns={16} sx={{ mb: '20px', mt: '10px' }}>\r\n\r\n                <Paper\r\n                    container\r\n                    style={{ width: \"100%\" }}\r\n                    component=\"form\"\r\n                    sx={{ p: '2px 4px', ml: '20px', mr: '20px', mb: '10px', display: 'flex', alignItems: 'center', width: '100%' }}\r\n                >\r\n\r\n                    <Autocomplete\r\n                        id=\"free-solo-demo\"\r\n                        freeSolo\r\n                        options={customers}\r\n                        style={{ width: '80%', padding: '2px ' }}\r\n                        getOptionLabel={customers => (customers.customer_name)}\r\n                        onChange={handleAutocomplete}\r\n                        renderInput={params => (<TextField\r\n                            {...params}\r\n                            label=\"Select customer...\"\r\n                            fullWidth />\r\n                        )}\r\n                    />\r\n\r\n\r\n                    <Divider sx={{ height: 28, m: 0.5 }} orientation=\"vertical\" />\r\n\r\n                    <IconButton onClick={handleClickOpen} color=\"primary\" sx={{ p: '10px' }} aria-label=\"directions\">\r\n                        <PersonAddAlt1Icon />\r\n                    </IconButton>\r\n                </Paper>\r\n\r\n            </Grid>\r\n            <Typography spacing={2} style={{ textAlign: 'left' }} variant=\"p\" gutterBottom component=\"div\">\r\n                <i>{customerName}</i>\r\n            </Typography>\r\n            <TableCart style={{ maxHeight: 500, overflow: 'auto' }} cartItems={cartItems} handleClickAddCart={props.handleClickAddCart} getDeleteProductIdFromCart={props.handleDeleteFromCart} />\r\n\r\n            {btnCheckout()}\r\n\r\n\r\n\r\n            <AddCustomerModal handleContactUpdate={props.retrieveCustomers} dialogOpen={dialogOpen} handleDialogClose={handleDialogClose} />\r\n\r\n        </Item>\r\n\r\n    );\r\n}\r\n\r\nexport default ProductsRight;"]},"metadata":{},"sourceType":"module"}