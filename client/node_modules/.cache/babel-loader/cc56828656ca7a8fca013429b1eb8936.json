{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\xerographics\\\\client\\\\src\\\\components\\\\pos\\\\TableCart.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport Paper from '@mui/material/Paper';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TablePagination from '@mui/material/TablePagination';\nimport TableRow from '@mui/material/TableRow';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  id: 'item',\n  label: 'Item'\n}, {\n  id: 'qty',\n  label: 'Qty',\n  align: 'right'\n}, {\n  id: 'action',\n  label: 'Action',\n  align: 'right'\n}];\n\nfunction TableCart(props) {\n  _s();\n\n  const cartItems = props.cartItems;\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  const formatNumber = number => {\n    var nf = new Intl.NumberFormat();\n    var result = nf.format(number); // \"1,234,567,890\"\n\n    return result;\n  };\n\n  const pages = () => {\n    if (cartItems.length >= 10) {\n      return /*#__PURE__*/_jsxDEV(TablePagination, {\n        rowsPerPageOptions: [10, 25, 50, 100],\n        component: \"div\",\n        count: cartItems.length,\n        rowsPerPage: rowsPerPage,\n        page: page,\n        onPageChange: handleChangePage,\n        onRowsPerPageChange: handleChangeRowsPerPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    sx: {\n      width: '100%',\n      overflow: 'hidden'\n    },\n    children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n      sx: {\n        maxHeight: 400,\n        height: 400\n      },\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        stickyHeader: true,\n        \"aria-label\": \"sticky table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: columns.map(column => /*#__PURE__*/_jsxDEV(TableCell, {\n              align: column.align,\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: column.label\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 37\n              }, this)\n            }, column.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: cartItems.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => {\n            return /*#__PURE__*/_jsxDEV(TableRow, {\n              hover: true,\n              role: \"checkbox\",\n              tabIndex: -1,\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: [row.product_name, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 64\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"small\", {\n                  children: /*#__PURE__*/_jsxDEV(\"i\", {\n                    children: [\"MWK \", formatNumber(row.product_price)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 91,\n                    columnNumber: 78\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 71\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  onInput: () => props.addToCartProductId(row.product_id),\n                  sx: {\n                    width: '50%',\n                    alignItems: 'center',\n                    textAlign: 'center'\n                  },\n                  InputProps: {\n                    inputProps: {\n                      min: 1,\n                      max: 10\n                    }\n                  },\n                  defaultValue: row.qty,\n                  id: \"outlined-number\",\n                  type: \"number\",\n                  variant: \"standard\",\n                  InputLabelProps: {\n                    shrink: true\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  onClick: () => props.getDeleteProductIdFromCart(row.product_id),\n                  variant: \"outlined\",\n                  startIcon: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 111,\n                    columnNumber: 148\n                  }, this),\n                  color: \"error\",\n                  children: \"Del\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 41\n              }, this)]\n            }, row.product_id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 37\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), pages()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TableCart, \"65nbIEELuFY2eeUXbED/8VsHrEQ=\");\n\n_c = TableCart;\nexport default TableCart;\n\nvar _c;\n\n$RefreshReg$(_c, \"TableCart\");","map":{"version":3,"sources":["C:/xampp/htdocs/xerographics/client/src/components/pos/TableCart.js"],"names":["React","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","DeleteIcon","Button","TextField","columns","id","label","align","TableCart","props","cartItems","page","setPage","useState","rowsPerPage","setRowsPerPage","handleChangePage","event","newPage","handleChangeRowsPerPage","target","value","formatNumber","number","nf","Intl","NumberFormat","result","format","pages","length","width","overflow","maxHeight","height","map","column","slice","row","product_name","product_price","addToCartProductId","product_id","alignItems","textAlign","inputProps","min","max","qty","shrink","getDeleteProductIdFromCart"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport Paper from '@mui/material/Paper';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TablePagination from '@mui/material/TablePagination';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport Button from '@mui/material/Button';\r\nimport TextField from '@mui/material/TextField';\r\n\r\n\r\nconst columns = [\r\n    { id: 'item', label: 'Item' },\r\n    {\r\n        id: 'qty',\r\n        label: 'Qty',\r\n        align: 'right',\r\n    },\r\n\r\n    {\r\n        id: 'action',\r\n        label: 'Action',\r\n        align: 'right',\r\n    },\r\n];\r\n\r\n\r\nfunction TableCart(props) {\r\n    const cartItems = props.cartItems;\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(+event.target.value);\r\n        setPage(0);\r\n    };\r\n\r\n    const formatNumber = (number) => {\r\n        var nf = new Intl.NumberFormat();\r\n        var result = nf.format(number); // \"1,234,567,890\"\r\n        return result;\r\n    }\r\n\r\n    const pages = () => {\r\n        if (cartItems.length >= 10) {\r\n            return (\r\n                <TablePagination\r\n                    rowsPerPageOptions={[10, 25, 50, 100]}\r\n                    component=\"div\"\r\n                    count={cartItems.length}\r\n                    rowsPerPage={rowsPerPage}\r\n                    page={page}\r\n                    onPageChange={handleChangePage}\r\n                    onRowsPerPageChange={handleChangeRowsPerPage}\r\n                />\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <Paper sx={{ width: '100%', overflow: 'hidden' }}>\r\n            <TableContainer sx={{ maxHeight: 400, height: 400 }}>\r\n                <Table stickyHeader aria-label=\"sticky table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            {columns.map((column) => (\r\n                                <TableCell\r\n                                    key={column.id}\r\n                                    align={column.align}\r\n                                >\r\n                                    <strong>{column.label}</strong>\r\n                                </TableCell>\r\n                            ))}\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {cartItems\r\n                            .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                            .map((row) => {\r\n                                return (\r\n                                    <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.product_id}>\r\n                                        <TableCell >\r\n                                            {row.product_name} <br /> <small><i>MWK {formatNumber(row.product_price)}</i></small>\r\n                                        </TableCell>\r\n                                        <TableCell align='right'>\r\n\r\n                                            {/* {row.qty} */}\r\n                                            <TextField\r\n                                                onInput={() => props.addToCartProductId(row.product_id)}\r\n                                                sx={{ width: '50%', alignItems: 'center', textAlign: 'center' }}\r\n                                                InputProps={{ inputProps: { min: 1, max: 10 } }}\r\n                                                defaultValue={row.qty}\r\n                                                id=\"outlined-number\"\r\n                                                type=\"number\"\r\n                                                variant='standard'\r\n                                                InputLabelProps={{\r\n                                                    shrink: true,\r\n                                                }}\r\n                                            />\r\n\r\n                                        </TableCell>\r\n                                        <TableCell align='right'>\r\n                                            <Button onClick={() => props.getDeleteProductIdFromCart(row.product_id)} variant=\"outlined\" startIcon={<DeleteIcon />} color=\"error\">\r\n                                                Del\r\n                                            </Button>\r\n                                        </TableCell>\r\n\r\n                                    </TableRow>\r\n                                );\r\n                            })}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n            {pages()}\r\n        </Paper>\r\n    );\r\n}\r\n\r\n\r\nexport default TableCart;\r\n"]},"metadata":{},"sourceType":"module"}