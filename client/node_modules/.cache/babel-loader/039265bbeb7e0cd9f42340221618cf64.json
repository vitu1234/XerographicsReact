{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\xerographics\\\\client\\\\src\\\\components\\\\reports\\\\user\\\\UserSearchList.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport React from \"react\";\nimport Autocomplete from '@mui/material/Autocomplete';\nimport TextField from '@mui/material/TextField';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UserSearchList(props) {\n  _s();\n\n  const users = props.users;\n  const [userId, setUserId] = useState(-1);\n  const [fullname, setFullname] = useState(''); //users auto complete\n\n  const handleAutocomplete = (event, newValue) => {\n    if (newValue != null) {\n      console.log(newValue);\n      setUserId(newValue.id);\n      props.setSearchUserId(newValue.id);\n      setFullname('User: ' + newValue.firstname + newValue.lastname);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Autocomplete, {\n    id: \"free-solo-demo\",\n    freeSolo: true,\n    options: users,\n    getOptionLabel: users => users.firstname + ' ' + users.lastname,\n    onChange: handleAutocomplete,\n    renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n      label: \"Select sales person...\",\n      fullWidth: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 37\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n\n_s(UserSearchList, \"MlUDqe36mIOYx8tsVUG+GkFiEj4=\");\n\n_c = UserSearchList;\nexport default UserSearchList;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserSearchList\");","map":{"version":3,"sources":["C:/xampp/htdocs/xerographics/client/src/components/reports/user/UserSearchList.js"],"names":["useState","React","Autocomplete","TextField","UserSearchList","props","users","userId","setUserId","fullname","setFullname","handleAutocomplete","event","newValue","console","log","id","setSearchUserId","firstname","lastname","params"],"mappings":";;;AAAA,SAAQA,QAAR,QAAuB,OAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;;;AAGA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAAA;;AAC3B,QAAMC,KAAK,GAAGD,KAAK,CAACC,KAApB;AAEA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,CAAC,CAAF,CAApC;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,EAAD,CAAxC,CAJ2B,CAO3B;;AACA,QAAMW,kBAAkB,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC5C,QAAIA,QAAQ,IAAI,IAAhB,EAAsB;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAL,MAAAA,SAAS,CAACK,QAAQ,CAACG,EAAV,CAAT;AACAX,MAAAA,KAAK,CAACY,eAAN,CAAsBJ,QAAQ,CAACG,EAA/B;AACAN,MAAAA,WAAW,CAAC,WAAWG,QAAQ,CAACK,SAApB,GAAgCL,QAAQ,CAACM,QAA1C,CAAX;AACH;AACJ,GAPD;;AAUA,sBAGI,QAAC,YAAD;AAEI,IAAA,EAAE,EAAC,gBAFP;AAGI,IAAA,QAAQ,MAHZ;AAII,IAAA,OAAO,EAAEb,KAJb;AAKI,IAAA,cAAc,EAAEA,KAAK,IAAKA,KAAK,CAACY,SAAN,GAAkB,GAAlB,GAAwBZ,KAAK,CAACa,QAL5D;AAMI,IAAA,QAAQ,EAAER,kBANd;AAOI,IAAA,WAAW,EAAES,MAAM,iBAAK,QAAC,SAAD,OACZA,MADY;AAEhB,MAAA,KAAK,EAAC,wBAFU;AAGhB,MAAA,SAAS;AAHO;AAAA;AAAA;AAAA;AAAA;AAP5B;AAAA;AAAA;AAAA;AAAA,UAHJ;AAmBH;;GArCQhB,c;;KAAAA,c;AAuCT,eAAeA,cAAf","sourcesContent":["import {useState} from 'react';\r\nimport React from \"react\";\r\n\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport TextField from '@mui/material/TextField';\r\n\r\n\r\nfunction UserSearchList(props) {\r\n    const users = props.users;\r\n\r\n    const [userId, setUserId] = useState(-1);\r\n    const [fullname, setFullname] = useState('');\r\n\r\n\r\n    //users auto complete\r\n    const handleAutocomplete = (event, newValue) => {\r\n        if (newValue != null) {\r\n            console.log(newValue)\r\n            setUserId(newValue.id);\r\n            props.setSearchUserId(newValue.id)\r\n            setFullname('User: ' + newValue.firstname + newValue.lastname);\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n\r\n\r\n        <Autocomplete\r\n            \r\n            id=\"free-solo-demo\"\r\n            freeSolo\r\n            options={users}\r\n            getOptionLabel={users => (users.firstname + ' ' + users.lastname)}\r\n            onChange={handleAutocomplete}\r\n            renderInput={params => (<TextField\r\n                    {...params}\r\n                    label=\"Select sales person...\"\r\n                    fullWidth/>\r\n            )}\r\n        />\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default UserSearchList;"]},"metadata":{},"sourceType":"module"}